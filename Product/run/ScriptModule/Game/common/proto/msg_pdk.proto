package progame;

import "st_pdk.proto";

 //获取房间列表，每页显示8个
message cgpdktablelist 
{
	optional int32 userid = 1;
	optional int32 pagenum = 2;     //还是按照数量来，每一次获取20个
}

message gcpdktablelist
{
	optional int32 result = 1;
	repeated int32 tableid = 2;      	//牌桌ID列表
	repeated int32 pourjetton = 3;   	//底注
	repeated int32 gamenum = 4;      	//打牌的局数
	repeated int32 maxvipnum = 5;		//最大局数
	repeated int32 usernum = 6;      	//人数
	repeated int32 createtime = 7;    	//创建时间
	repeated int32 julebuid = 8;		//俱乐部类型
	repeated int32 julebutype = 9;		//俱乐部类型
}

//创建房间
message cgpdkcreate    
{
	optional int32 userid = 1;
	optional int32 pdktype = 2;   			//类型 
	optional int32 maxvipnum = 3;  			//局数
	optional int32 playernum = 4;			//人数
	optional int32 cardnum	= 5;			//牌数
	optional int32 bcatchbird = 6;			//抓鸟	是:1 否:0
	optional int32 bspadethree = 7;			//黑桃3先出 是:1 否:0
	optional int32 bremainnum = 8;			//显示余牌	是:1 否:0
	optional int32 bcheat 	= 9;			//是否防作弊 是:1 否:0
	optional int32 bfourthree = 10;			//是否四带三 是:1 否:0
	optional int32 bthreeA	= 11;			//是否3A当炸弹	是:1 否:0
	optional int32 bthreeAone = 12;			//是否3A带1当炸弹 是:1 否:0
	optional int32 payway = 13;      		//支付方式，房主支付: g_PdkDefine.payment_owner 均摊：g_PdkDefine.payment_A
	optional int32 paynum = 14;      		//支付的数额
	optional int32 paytype = 15; 			//支付类型，钻石：g_PdkDefine.pay_money，玉：g_PdkDefine.pay_gold， 也可能是其他
	optional int32 julebuid = 16;			//俱乐部id
	optional int32 julebutype = 17;			//俱乐部房间类型
}

message gcpdkcreate    
{
	optional int32 result = 1;
	optional pdkinfo hinfo = 2;              //房间信息

}

//进入房间
message cgpdkenter
{
	optional int32 userid = 1;
	optional int32 tableid = 2;     //0：表示服务器随机
	optional int32 tabletype = 3;   //牌桌的类型：私人场：g_DdzDefine.table_srf
	
}

message gcpdkenter   
{
	optional int32 result = 1;
	optional pdkinfo hinfo = 2;
}

//坐下
message cgpdksitdown
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;    //选好坐下的座位ID
}

message gcpdksitdown
{
	optional int32 result = 1;
	optional pdkuser situser = 2;    //坐下来的的玩家
}

//离开
message cgpdkleave
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcpdkleave
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 leavetype = 4;   //离开的类型，用于前端显示
	optional string leavemsg = 5;   //如果这个是非空的时候，最好显示出来。明确告知玩家为什么离开了房间
}

//站起
message cgpdkstandup  
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcpdkstandup  
{
	optional int32 result = 1;
	optional int32 chairid = 2;
	optional int32 userid = 3;
	
}

//申请解散
message cgpdkdissolve   //解散房间，有两种情况，在牌局没开始的时候，房主可以解散房间,这个时候，房间是直接解散的
{                        //另外一个情况是，牌局开始了，只有里面坐下去玩的3个人有解散的权利，其他的均没有。
	optional int32 userid = 1;
	optional int32 tableid = 2;
}

message gcpdkdissolve
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional int32 disolvetype = 3;   //解散的类型，如果是0，就直接解散。如果是1的话表示是牌局中解散，需要其他玩家同意
	optional int32 timemark = 4;      //申请解散房间的倒计时，倒计时到了，默认全部解散
	optional int32 dissolveinfo = 5;  //剩余人员的信息
	optional string msg = 6;   // 提示信息："玩家【xxx】申请解散房间"
}

//回应申解散
message cgpdkdissolveopt     //有玩家发起了解散的请求，其他玩家的响应操作
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 opttype = 3;     //0:同意解散房间，1：不同意解散房间
}

message gcpdkdissolveopt    
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 tableid = 3;
	optional int32 opttype = 4;    //0:同意解散房间，1：不同意解散房间
	optional string msg = 5;       //如果是有人不同意解散房间，就显示这条信息，显示谁不同意解散。
	optional int32 dissolveinfo = 6;  //剩余人员的信息
}

//聊天
message cgpdkchat   
{
	optional int32 senderid = 1;
	optional string sender = 2;
	optional int32 chattype = 3;   //g_gdmjDefine.chat 中的类型
	optional string msg = 4;
	optional int32 tableid = 5;    //牌桌的ID
}

message gcpdkchat
{
	optional int32 result = 1;
	optional int32 chatdate = 2;   //聊天时间
	optional int32 senderid = 3;   
	optional string sender = 4;
	optional int32 chattype = 5;
	optional string msg = 6;
}

//开始
message cgpdkstart
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcpdkstart
{
	optional int32 result = 1;
	optional pdkinfo hinfo = 2;              //斗地主牌桌的信息
}

//通知玩家行动
message gcpdkinformaction
{
	optional int32 result = 1; 
	optional int32 userid = 2;		//当前行动玩家
	optional int32 chairid = 3;  			
	optional int32 actionTime = 4;  //行动时间
	optional lasplayinfo lasInfo = 5; //上一位玩家出的牌的信息
	optional int32 isnotplay = 6;	 //当前玩家是否要不起， 要不起: 1  否则为: 0
}

//出牌
message cgpdkplay
{
	optional int32 userid = 1;
	optional int32 tableid = 2; 
	optional int32 playType = 3;	//出牌类型 过: g_DdzPlay_poker.doNot ， 出牌：g_DdzPlay_poker.play 
	repeated int32 pokerList = 4;	//牌的列表
	optional int32 resolute = 5; 	//如果多种牌型，确定出那种牌型是赋值 1
} 

message gcpdkplay
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 playType = 4;	//出牌类型 过: g_DdzPlay_poker.doNot ， 出牌：g_DdzPlay_poker.play 
	optional int32 pokerType = 5;	//牌型
	repeated int32 pokerList = 6;	//牌的列表
	optional int32 multiple = 7;	//当前牌局的倍数
	repeated int32 playpokerlist = 8;	//玩家的牌列表
	optional int32 pokerSum = 9; 	//还剩的牌数量
	optional int32 nextuserid = 10;		//当前行动玩家
	optional int32 nextchairid = 11;  			
	optional int32 nextactionTime = 12;  //行动时间
	optional lasplayinfo nextlasInfo = 13; //上一位玩家出的牌的信息
	optional int32 nextisnotplay = 14;	 //当前玩家是否要不起， 要不起: 1  否则为: 0
}

//结算
message gcpdkcount   //结算是服务器主动发送给玩家的
{
	optional int32 result = 1;
	optional int32 spring = 2;			//打出春天的玩家
	optional int32 counttype = 3;   	//0:单局的结算，1：整个牌局的结算
	optional int32 timemark = 4;    	//单局结束的时候，结算的时间
	optional pdkinfo hinfo = 5;         //牌桌的信息
	repeated int32 jifenlist = 6;		//每位玩家中总分
	repeated int32 winjifenlist	= 7;	//每位玩家中单局积分分
	repeated int32 bombNumlist = 8;		//每位玩家中单局打的炸弹分
}


//准备
message cgpdkready
{
	optional int32 userid = 1;
	optional int32 tableid = 2; 
	optional int32 readyType = 3;	//取消准备: g_DdzPlayerState.status_notReady, 准备: g_DdzPlayerState.status_ready	
}

message gcpdkready
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 readyType = 4;	//取消准备: g_DdzPlayerState.status_notReady, 准备: g_DdzPlayerState.status_ready
}

//战绩
message cgpdkhistory
{
	optional int32 userid = 1;
	optional int32 page = 2;
}

message gcpdkhistory
{
	optional int32 result = 1;
	repeated pdkhistory htylist = 2;
}

//回放
message cgpdkhistorystep
{
	optional int32 tablepalyid = 1;
	optional int32 stepid = 2;
	
}

message gcpdkhistorystep
{
	optional int32 result = 1;
	optional pdkhistorypair htypair = 2;
	optional int32 steplen = 3;
}

//托管
message cgpdkautoplayer
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 autoplayer = 3; 	//取消托管:g_DdzDefine.autoplayer_No = 0	托管:g_DdzDefine.autoplayer_Yes = 1	
	optional double longitude = 4;				//经度
	optional double latitude = 5;				//纬度
}

message gcpdkautoplayer
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 autoplayer = 3;	//取消托管:g_DdzDefine.autoplayer_No = 0	托管:g_DdzDefine.autoplayer_Yes = 1	
	optional int32 chairID = 4;					//玩家位置
	optional double longitude = 5;				//经度
	optional double latitude = 6;				//纬度
}


//等待下一局游戏开始
message gcpdknext
{
	optional int32 result = 1;
}

//客户端主动请求牌桌信息
message cgpdkgettableinfo
{
	optional int32 userid = 1;
	optional int32 tableid = 2;	
}

message gcpdkgettableinfo
{
	optional int32 result = 1;
	optional pdkinfo hinfo = 2;              //牌桌的信息	
}

