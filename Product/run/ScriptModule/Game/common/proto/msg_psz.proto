package progame;

import "st_psz.proto";
import "st_human.proto";

 //获取房间列表，每页显示8个
message cgpsztablelist 
{
	optional int32 userid = 1;
	optional int32 pagenum = 2;     //还是按照数量来，每一次获取20个
}

message gcpsztablelist
{
	optional int32 result = 1;
	repeated int32 tableid = 2;      	//牌桌ID列表
	repeated int32 pourjetton = 3;   	//底注
	repeated int32 gamenum = 4;      	//打牌的局数
	repeated int32 maxplaynum = 5;		//最大局数
	repeated int32 usernum = 6;      	//人数
	repeated int32 createtime = 7;    	//创建时间
	repeated int32 julebuid = 8;		//俱乐部类型
	repeated int32 julebutype = 9;		//俱乐部类型
}

//创建房间列表
message cgpszcreate    
{
	optional int32 userid = 1;
	optional int32 maxuser = 2;  			//最大人数
	optional int32 difen = 3;    			//底分 12345
	optional int32 maxplaynum = 4;  		//局数
	optional int32 payway = 5;      		//支付方式：1：房主，2：均摊
	optional int32 paynum = 6;      		//支付的数额
	optional int32 doublecomp = 7;			//双倍比牌 0 双倍比牌 1 单倍比牌
	optional int32 boutcapp = 8; 			//最大投注回合  5 五轮封顶 10 十轮封顶 15 十五轮封顶
	optional int32 mincomp = 9;				//比牌起始回合： 0 一轮可比 1 二轮可比 2 三轮可比
	optional int32 menpai = 10;				//闷牌： 0 不闷牌 1 闷一轮 2 闷两轮 3 闷三轮
	optional int32 restrict = 11;			//限制
	optional string strvipinfo = 12;		//这个是每个字符串类型的针对每个麻将的序列化后的字符串 
	optional int32 paytype = 13; 			//支付类型， 0是钻石支付，1 是玉支付
	optional int32 julebuid = 14; 			//俱乐部ID，俱乐部创建房间时赋值
	optional int32 psztype = 15;   			//斗牛玩法的类型
	optional int32 tongpai = 16;            //同牌输赢，0为先比为输。1是按花色比
	optional int32 tonghua = 17;            //喜牌收喜，0是不收，1是收5分，2是收10分，以此类推
	optional int32 baozi = 18;              //豹子收喜，0是不收，1是收5分，2是收10分，以此类推
	optional int32 qipai = 19;              //弃牌规则，15是15秒弃牌，30是30秒弃牌，以此类推
	optional int32 JQK = 20;                //如果不勾选为0，JQK>123.如果勾选则为1，123>JQK
	optional int32 chibaozi = 21;           //235吃豹子，勾选为0（吃豹子），不勾选为1，不吃豹子
	optional int32 kanpai = 22;             //不勾选为0 （随便看牌），勾选的话为1，（顺序看牌）
	optional int32 shunzi = 23;             //如果不勾选为0（金花大于顺子），勾选为1,（顺子大于金花）
	optional int32 jifen = 24;              //加注选项，1代表最高10注，2代表最高20注，3代表最高30注
	optional int32 julebutype = 25;			//俱乐部类型
	
}

message gcpszcreate    
{
	optional int32 result = 1;
	optional int32 tableid = 2;		
	optional pszinfo hinfo = 3;              //房间信息
}



//发起解散房间
message cgpszdissolve   //解散房间，有两种情况，在牌局没开始的时候，房主可以解散房间,这个时候，房间是直接解散的//另外一个情况是，牌局开始了，只有里面坐下去玩的四个人有解散的权利，其他的均没有。
{                        
	optional int32 userid = 1;
	optional int32 tableid = 2;
}

message gcpszdissolve
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional int32 disolvetype = 3;   //解散的类型，如果是0，就直接解散。如果是1的话表示是牌局中解散，需要其他玩家同意
	optional int32 timemark = 4;      //申请解散房间的倒计时，倒计时到了，默认全部解散
	optional string dissolveinfo = 5;  //剩余人员的信息
	optional string msg = 6;   // 提示信息："玩家【xxx】申请解散房间"
}

//回应解散房间请求
message cgpszdissolveopt     //有玩家发起了解散的请求，其他玩家的响应操作
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 opttype = 3;     //0:同意解散房间，1：不同意解散房间
}

message gcpszdissolveopt    //   
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 tableid = 3;
	optional int32 opttype = 4;    //0:同意解散房间，1：不同意解散房间
	optional string msg = 5;       //如果是有人不同意解散房间，就显示这条信息，显示谁不同意解散。
	optional string dissolveinfo = 6;  //剩余人员的信息

}

//加入房间
message cgpszjoinroom
{
	optional int32 userid = 1;
	optional int32 tableid = 2;     
	optional int32 tabletype = 3;   //牌桌的类型：201 私人场，101 初级金币场，102 中级金币场，103 高级金币场
	optional int32 resolute = 4;	//游戏开始确定要进人房间是，发 1，不确定是发 0
	
}

message gcpszjoinroom
{
	optional int32 result = 1;
	repeated playersimpleinfo pslist = 2;     	//坐在8个位置上的人物信息,每个玩家的信息，里面的积分对应玩家的积分
	optional pszinfo hinfo = 3;              //火锅英雄的信息	
	optional string strvipinfo = 4;				//这个是每个字符串类型的针对每个麻将的序列化后的字符串 
	
}

//离开房间
message cgpszleave
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcpszleave
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 leavetype = 4;   //离开的类型，用于前端显示
	optional string leavemsg = 5;   //如果这个是非空的时候，最好显示出来。明确告知玩家为什么离开了房间
}


//坐下	
message cgpszsitdown
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;    //选好坐下的座位ID
}

message gcpszsitdown
{
	optional int32 result = 1;
	optional int32 chairid  = 2;    //坐下来的的
	optional playersimpleinfo psinfo = 3; 
}


//开始
message cgpszstart
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcpszstart
{
	optional int32 result = 1;
	optional pszinfo hinfo = 2;              //火锅英雄的信息
}

//通知玩家行动
message gcpszinformaction
{
	optional int32 result = 1; 
	optional int32 userid = 2;		//当前行动玩家
	optional int32 chairid = 3;
	optional int32 oncepour = 4;	//当前单注
	optional int32 abandon = 5;     //是否弃牌，2 弃牌， 其他都是没弃
	optional int32 presentbout = 6;	//当前投注回合
	optional int32 audocingl = 7; 	//1 自动跟注 ，0 不自动跟注
	optional int32 callNum = 8;		//跟注的值
	optional int32 thanNum = 9;		//比牌的值
	repeated int32 filList	= 10;	//加注的列表
	optional int32 actiontime = 11;		//行动时间
	
}

//玩家的行动
message cgpszaction
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 actiontype = 3;	//0 弃牌 1 看牌 2 比牌 3 加注 4 跟注
	optional int32 rivalID = 4;		//比牌对象ID 	比牌时才需要赋值
	optional int32 addjetton = 5;	//加注的筹码	加注时才需要赋值
}

message gcpszaction
{	
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 actiontype = 3;	//0 弃牌 1 看牌 2 比牌 3 加注 4 跟注
	optional int32 winnerid = 4;	//比牌最终胜利方ID		
	repeated pszcomparepoker bipailist = 5;	//比牌的列表	比牌时才会赋值
	optional int32 addjetton = 6;	//加注或跟注的筹码 	加注、比牌或赋值才会赋值 比牌
	repeated int32 pokerlist = 7;	//自己的手牌列表	看牌时才会被赋值
	optional int32 ptype = 8;		//自己的手牌类型	看牌时才会被赋值
	optional int32 guodi = 9;		//底池
	optional int32 jetton = 10;     //已投注的量
	optional int32 oncepour = 11;	//当前单注
	optional int32 callNum = 12;	//跟注的值
	optional int32 thanNum = 13;	//比牌的值
	repeated int32 filList	= 14;	//加注的列表
}

//结算
message gcpszcount   //结算是服务器主动发送给玩家的
{
	optional int32 result = 1;
	optional int32 counttype = 2;   //0:单局的结算，1：整个牌局的结算
	optional int32 timemark = 3;    //单局结束的时候，结算的时间
	repeated playersimpleinfo pslist = 4;     //整个牌局结算的时候，才会有这个牌桌
	optional pszinfo hinfo = 5;              //的信息
	optional int32 winerID = 6;		//赢家的ID
	repeated int32 jifenlist = 7;		//每位玩家中总分 在总结算才会赋值
	repeated int32 winnumlist = 8;		//每位玩家中胜利次数 在总结算才会赋值
	repeated int32 maxtypelist = 9;		//每位玩家中最大牌型 在总结算才会赋值
}


//聊天
message cgpszchat   
{
	optional int32 senderid = 1;
	optional string sender = 2;
	optional int32 chattype = 3;   //对应g_douniuDefine.chat 中的类型
	optional string msg = 4;
	optional int32 tableid = 5;    //牌桌的ID
}

message gcpszchat
{
	optional int32 result = 1;
	optional int32 chatdate = 2;   //聊天时间
	optional int32 senderid = 3;   
	optional string sender = 4;
	optional int32 chattype = 5;
	optional string msg = 6;
}

//准备
message cgpsznext
{
	
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid= 3;
}

message gcpsznext
{
	optional int32 result = 1;
	optional int32 chairid = 2;
	optional int32 userid = 3;

}
//等待下一局游戏开始
message gcpsznextout
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional pszinfo hinfo = 3;
} 

//获得历史战绩
message cgpszhistory
{
	optional int32 userid = 1;
	optional int32 page = 2;
}

message gcpszhistory
{
	optional int32 result = 1;
	repeated pszhistory htylist = 2;
}

//进人房间时，当游戏已经开始，主动推送给玩家
message cgpszroominfo
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
}

message gcpszroominfo
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional string msg = 3;
}   


//站起	
message gcpszstandup    
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
}


//通知客户端隐藏看牌加注跟注等按钮
message gcpszconcealbutton
{
	optional int32 result = 1;
	optional int32 flag = 2;  		//1 全部按扣消失 0 比牌 加注 跟注变灰 2 隐藏点击亮牌
}




