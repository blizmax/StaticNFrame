package progame;


message lasplayinfo
{
	optional int32 userid = 1;
	optional int32 pokerType = 2;
	repeated int32 pokerList = 3;
}

message pdkuser   //跑得快打牌玩家信息 
{
	optional int32 userid = 1;
	optional string nickname = 2; 			//昵称
	optional string face_1 = 3; 			//头像
	optional int32 jifen = 4;        		//每局玩家的积分 初始化是都为0
	optional int32 chairid = 5;           	//座位ID，取值为1,2,3
	repeated int32 handpoker = 6;          	//手上的牌列表
	optional int32 playsum = 7;				//出牌次数
	optional int32 state = 8;				//玩家状态标志位
	optional int32 bombNum = 9;				//打出的炸弹数量
	optional int32 autoplayer = 10;			//托管： 托管：g_DdzDefine.autoplayer_Yes 不托管：g_DdzDefine.autoplayer_No
	optional int32 timeouts = 11;			//超时次数
	optional int32 winnum = 12;				//胜利次数
	optional int32 maxscore	 = 13;			//单局最高的分
	optional int32 sex = 14;				//性别
	optional int32 pokerSum = 15;			//手牌的数量
	optional int32 lasttype = 16;			//上次出的牌型
	repeated int32 lastpokerlist = 17;		//上次出的牌列表
	optional int32 mPoker = 18;				//明牌：明牌：g_DdzDefine.mPoker_Yes，不明牌：g_DdzDefine.mPoker_No
	optional int32 allbombNum = 19;			//打出的总炸弹数量
	optional int32 alljifen = 20;			//总积分
	optional int32 allcatchnum = 21;		//总抓鸟数
	optional double longitude = 22;			//经度
	optional double latitude = 23;			//纬度
}

message pdkinfo	//跑得快牌局信息
{
	optional int32 tableid = 1;				//牌桌ID
	optional int32 tabletype = 2;   		//场次类型：
	optional int32 pdktype = 3;   			//类型
	optional int32 pourjetton = 4;  	 	//底注
	optional int32 maxvipnum = 5;     		//最大的场次 	20局或10局
	optional int32 playernum = 6;			//几人局		2人或者3人
	optional int32 cardnum = 7;				//几张牌		15张牌或者16张牌
	optional int32 bcatchbird = 8; 			//抓鸟(红桃10)	抓鸟:1  不抓:0
	optional int32 bspadethree = 9;			//黑桃3先出		是:1	否:0
	optional int32 bremainnum = 10;			//是否显示余牌数	是:1 否:0
	optional int32 bcheat = 11;				//是否防作弊		是:1 否:0
	optional int32 bfourthree = 12;			//是否允许四带三	是:1 否:0
	optional int32 bthreeA = 13;			//是否3个A当炸弹	是:1 否:0
	optional int32 bthreeAone = 14;			//是否3个A带1当炸弹 是:1 否:0
	optional int32 paytype = 15;			//支付类型，钻石：g_PdkDefine.pay_money，玉：g_PdkDefine.pay_gold， 也可能是其他
	optional int32 payway = 16;   			//支付方式，房主支付: g_PdkDefine.payment_owner 均摊：g_PdkDefine.payment_A
	optional int32 paynum = 17;   			//支付的数额
	optional int32 ownerid = 18;      		//房主ID
	optional int32 julebuid = 19;        	//俱乐部ID，如果是属于俱乐部的，就有值
	
	optional int32 tablemark = 20;   		//牌桌的一个标签,申请解散是保存牌桌的状态
	optional int32 tabletime = 21;			//申请解散是保存牌桌的状态还剩的时间
	optional int32 state = 22;       		//桌子的状态
	optional int32 timemark = 23;      		//时间的标签
	repeated pdkuser situser = 24;      	//坐下的玩家列表
	repeated int32 standuser = 25;    		//无座玩家列表 	
	optional lasplayinfo lasInfo = 26;		//上位玩家出牌的信息
	optional int32 usevipnum = 27;     		//已经玩了几局
	optional int32 dissolveinfo = 28;      	//这个是退出时候的位数运行：总共五位，2~5位分别表示1~4号玩家的状态：0：等待操作；1：申请退出，2：已经同意
	optional string straction = 29;        	//通常的情况下，这个变量是空串，只有在有玩家申请解散房间时，会被用来保存【玩家["..pInfo.nickname.."]申请解散房间，请问是否同意？(超过5分钟未做选择，则默认同意)"】
	optional int32 maxplaynum = 30;     	//最大人数
	optional int32 actionuser = 31; 		//当前行动玩家下标， 为了方便找到当前行动玩家而已
	optional int32 frameid = 32; 			//该牌桌在历史历史记录中唯一的标签，这个是日+时+分+秒+牌桌数量
	optional int32 actionuserid = 33; 		//当前行动玩家的Userid
	optional int32 isnotplay = 34;			//当前玩家是否要不起， 要不起: 1  否则为: 0
	optional int32 catchuserid = 35;		//如果选择了抓鸟,有玩家抓鸟,则会存放玩家的座位ID  1 2 3
	optional int32 firstoutflag = 36;		//最先出牌的类型, 0 随机  1上把赢家先出 2 黑桃3先出
	optional int32 laswinner = 37;			//上把赢家的userid
	optional int32 julebutype = 38;			//用来存储俱乐部类型
}



message multipleinfo	//详细倍数信息
{
	optional int32 spring = 1;					//春天倍数
	optional int32 zhuaniao = 2;				//抓鸟倍数
	optional int32 summultiple = 3;				//总倍数
}

message noad	//记牌器
{
	optional int32 poker_A = 1;
	optional int32 poker_2 = 2;
	optional int32 poker_3 = 3;
	optional int32 poker_4 = 4;
	optional int32 poker_5 = 5;
	optional int32 poker_6 = 6;
	optional int32 poker_7 = 7;
	optional int32 poker_8 = 8;
	optional int32 poker_9 = 9;
	optional int32 poker_10 = 10;
	optional int32 poker_J = 11;
	optional int32 poker_Q = 12;
	optional int32 poker_K = 13;
	optional int32 poker_Kong = 14;
}


message pdkhistoryitem
{
	optional int32 tableplayid = 1;   //每次牌桌唯一的标识，由：日时分秒组成+牌局次数组成
	optional int32 tableid = 2;       //牌桌的ID号
	optional int32 playtime = 3;      //玩牌的时间
	optional int32 playstate = 4;     //是否中途退出的,1是中途退出
	repeated int32 useridlist = 5;    //对应的userid
	repeated string nicklist = 6;     //对应的昵称
	repeated int32 winlist = 7;       //对应的赢的数量
	optional string quitdes = 8;      //牌桌的状态
	repeated string userdes = 9;      //如果是离开状态，这里表示对玩家离开的描述：同意离开，超时解散
}

message pdkhistory
{
	optional int32 tableid = 1;   			//房间号
	optional int32 tablemark = 2; 	 		//每个牌局唯一的标识
	optional int32 gametime = 3;   			//时间
	optional int32 playnum = 4;     		//局数
	repeated int32 useridlist = 5;  		//对应的userid
	repeated string nicklist = 6;   		//对应的昵称
	repeated int32 winlist = 7;     		//对应的赢的数量
	repeated pdkhistoryitem hitemlist = 8;  //详细的列表 
}

message pdkhistorypair
{
	optional int32 packetcode = 1;
	optional string pkginfo = 2;       	//这个是用来存储用的
}

message pdktaganalyseresult
{
	optional int32 onecount = 1;		//单张数目
	optional int32 twocount = 2;		//两张数目 
	optional int32 threecount = 3;		//三张数目
	optional int32 fourcount = 4;		//四张数目
	repeated int32 onelist = 5;			//单张逻辑列表
	repeated int32 twolist = 6;			//两张逻辑列表
	repeated int32 threelist = 7;		//三张逻辑列表
	repeated int32 fourlist = 8;		//四张逻辑列表
	repeated int32 onecarddata = 9;		//单张的牌列表
	repeated int32 twocarddata = 10;	//两张的牌列表
	repeated int32 threecarddata = 11;	//三张的牌列表
	repeated int32 fourcarddata = 12; 	//四张的牌列表	
}

message pdkpokerlist
{
	repeated int32 card = 1;
}