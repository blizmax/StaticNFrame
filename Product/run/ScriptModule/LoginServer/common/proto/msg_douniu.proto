package progame;

import "st_douniu.proto";
import "st_human.proto";

//进入斗牛
message cgdouniutablelist  //获取房间列表，每页显示8个
{
	optional int32 userid = 1;
	optional int32 pagenum = 2;     //还是按照数量来，每一次获取20个
}

message gcdouniutablelist
{
	optional int32 result = 1;
	repeated int32 tableid = 2;      	//牌桌ID列表
	repeated int32 dntype = 3;		 	//玩法
	repeated int32 pourjetton = 4;   	//底注
	repeated int32 gamenum = 5;      	//打牌的局数
	repeated int32 maxplaynum = 6;		//最大局数
	repeated int32 usernum = 7;      	//人数
	repeated int32 createtime = 8;    	//创建时间
}

//创建房间列表
message cgdouniucreate
{
	optional int32 userid = 1;
	optional int32 maxuser = 2;  //最大人数
	optional int32 dntype = 3;   //斗牛玩法的类型
	optional int32 difen = 4;    //底分
	optional int32 maxplaynum = 5;  //局数
	optional int32 payway = 6;      //支付方式：1：房主，2：均摊
	optional int32 paynum = 7;      //支付的数额
	//optional int32 zhuangtype = 8;  //庄家类型:g_sdbDefine.zhuang_ding
	optional int32 typeodds = 9;			//牌型赔率
	optional int32 restrict = 10;			//限制
	optional int32 integralmax = 11;		//携带上限
	optional int32 bankermultiple = 12;		//抢庄最高倍数
	optional int32 autoready = 13;			//是否自动准备
	optional string strvipinfo = 14;		//这个是每个字符串类型的针对每个麻将的序列化后的字符串 
	optional int32 paytype = 15; 			//支付类型， 0是钻石支付，1 是玉支付
	optional int32 julebuid = 16;
}

message gcdouniucreate
{
	optional int32 result = 1;
	optional douniuinfo hinfo = 2;
	optional string strvipinfo = 3;  //同时返回给前端的vip信息的字符串
}

//发起解散房间
message cgdouniudissolve   //解散房间，有两种情况，在牌局没开始的时候，房主可以解散房间,这个时候，房间是直接解散的
{                        //另外一个情况是，牌局开始了，只有里面坐下去玩的四个人有解散的权利，其他的均没有。
	optional int32 userid = 1;
	optional int32 tableid = 2;
}

message gcdouniudissolve
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional int32 disolvetype = 3;   //解散的类型，如果是0，就直接解散。如果是1的话表示是牌局中解散，需要其他玩家同意
	optional int32 timemark = 4;      //申请解散房间的倒计时，倒计时到了，默认全部解散
	optional int32 dissolveinfo = 5;  //剩余人员的信息
	optional string msg = 6;   // 提示信息："玩家【xxx】申请解散房间"
}

//回应解散房间请求
message cgdouniudissolveopt     //有玩家发起了解散的请求，其他玩家的响应操作
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 opttype = 3;     //0:同意解散房间，1：不同意解散房间
}

message gcdouniudissolveopt    //   
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 tableid = 3;
	optional int32 opttype = 4;    //0:同意解散房间，1：不同意解散房间
	optional string msg = 5;       //如果是有人不同意解散房间，就显示这条信息，显示谁不同意解散。
	optional int32 dissolveinfo = 6;  //剩余人员的信息

}

//加入房间
message cgdouniujoinroom
{
	optional int32 userid = 1;
	optional int32 tableid = 2;     //0：表示服务器随机
	optional int32 dntype = 3;   
	optional int32 tabletype = 4;   //牌桌的类型：初级，中级，高级:g_douniuTableType

	optional int32 resolute = 5;	//游戏开始确定要进人房间是，发 1，不确定是发 0
	
}

message gcdouniujoinroom
{
	optional int32 result = 1;
	//repeated playersimpleinfo pslist = 2;     	//坐在8个位置上的人物信息,每个玩家的信息，里面的积分对应玩家的积分
	optional douniuinfo hinfo = 3;              //火锅英雄的信息	
	optional string strvipinfo = 4;				//这个是每个字符串类型的针对每个麻将的序列化后的字符串 

}

//离开房间
message cgdouniuleave
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcdouniuleave
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 leavetype = 4;   //离开的类型，用于前端显示
	optional string leavemsg = 5;   //如果这个是非空的时候，最好显示出来。明确告知玩家为什么离开了房间
}


//坐下	
message cgdouniusitdown
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;    //选好坐下的座位ID
}

message gcdouniusitdown
{
	optional int32 result = 1;
	optional int32 chairid  = 2;    //坐下来的的
	optional douniuuser psinfo = 3; 
}

//站起
message gcdouniustandup    
{
	optional int32 result = 1;
	optional int32 chairid = 2;
	optional string msg = 3;
}


//开始
message cgdouniustart
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcdouniustart
{
	optional int32 result = 1;
	optional douniuinfo hinfo = 2;              //
}

//通知进人下注状态
message gcdouniupourgo
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional int32 bankerID = 3;
	optional int32 actiontime = 4;
}

//下注
message cgdouniupour
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 pourbei = 3;   	//底分,用string表示int64的数据类型
	
}

message gcdouniupour
{
	optional int32 result = 1;
	optional int32 userid = 2;    	//如果检查到是坐在座位的玩家，需要客户端自己同步这里的数值
	optional int32 pourbei = 3;		//下注低分,用string表示int64的数据类型
}

//确定下注
message gcdouniupouropt
{
	optional int32 result = 1;
	repeated int32 userid = 2;    	//如果检查到是坐在座位的玩家，需要客户端自己同步这里的数值
	repeated int32 pourbei = 3;	  	//下注低分,用string表示int64的数据类型
	repeated douniuhandpoker playerpoker = 4;   //玩家的手牌
	optional int32 actiontime = 5;
}


//发牌
message gcdouniudeal
{
	optional int32 result = 1;
	repeated int32 useridlist = 2;    
	repeated douniuhandpoker handpokerlist = 3;
	optional string msg = 4;	//在明牌抢庄，无人抢庄是会赋值为“无人抢庄，重新发牌” 否则不会赋值 
}

//通知进人看牌状态
message gcdouniushowpokergo
{
	optional int32 result = 1;
	optional int32 tableid= 2; 	
	optional int32 actiontime = 3;
}

//亮牌
message cgdouniushowpoker
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
	repeated int32 pokerlist = 4;
}

message gcdouniushowpoker
{
	optional int32 result = 1;
	repeated int32 userid = 2;    
	repeated douniuhandpoker handpoker = 3;
	repeated int32 nntype = 4;   //牛牛的类型
	repeated int32 chairid = 5;    //
	optional int32 complete = 6;  // 0 : 为所有人都已经完成了全部人开牌， 不为 0 时为开牌的人的ID
}

//结算
message gcdouniucount   //结算是服务器主动发送给玩家的
{
	optional int32 result = 1;
	optional int32 counttype = 2;   //0:单局的结算，1：整个牌局的结算
	optional int32 timemark = 3;    //单局结束的时候，结算的时间
	//repeated playersimpleinfo pslist = 4;     //整个牌局结算的时候，才会有这个牌桌
	optional douniuinfo hinfo = 5;              //的信息
	repeated string wincount = 6; 	//单局玩家输赢的情况
}


//斗牛都里面的聊天
message cgdouniuchat   
{
	optional int32 senderid = 1;
	optional string sender = 2;
	optional int32 chattype = 3;   //对应g_douniuDefine.chat 中的类型
	optional string msg = 4;
	optional int32 tableid = 5;    //牌桌的ID
}

message gcdouniuchat
{
	optional int32 result = 1;
	optional int32 chatdate = 2;   //聊天时间
	optional int32 senderid = 3;   
	optional string sender = 4;
	optional int32 chattype = 5;
	optional string msg = 6;
}

//通知进人抢庄状态
message gcdouniubanketgo
{
	optional int32 result = 1;
	optional int32 tableid = 2; 
	optional int32 actiontime = 3;
}

//抢庄
message cgdouniubanket
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
	optional int32 bankermul = 4;	//抢庄的倍数 
	optional int32 bankerstate = 5;	//102 是抢庄  106 是不抢
}


message gcdouniubanket
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 bankermul = 4;    //抢庄的倍数 
	optional int32 bankerstate = 5;  //102 是抢庄  105 是不抢
}
//确定庄家
message gcdouniubanketopt
{
	optional int32 result = 1;
	repeated int32 userid = 2;
	repeated int32 chairid = 3;
	repeated int32 bankermul = 4;    //抢庄的倍数 
	repeated int32 bankerstate = 5;  //102 是抢庄  105 是不抢
	optional int32 bankeropt = 6;	//最后庄家 
}


//准备
message cgdouniunext
{
	
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid= 3;
}

message gcdouniunext
{
	optional int32 result = 1;
	optional int32 chairid= 2;

}
//开始下一局游戏
message gcdouniunextout
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional int32 actiontime = 3;
} 

//获得历史战绩
message cgdouniuhistory
{
	optional int32 userid = 1;
	optional int32 page = 2;
}

message gcdouniuhistory
{
	optional int32 result = 1;
	repeated douniuhistory htylist = 2;
}
