package progame;

import "st_ersh.proto";
import "st_human.proto";

 //获取房间列表，每页显示8个
message cgershtablelist 
{
	optional int32 userid = 1;
	optional int32 pagenum = 2;     //还是按照数量来，每一次获取20个
}

message gcershtablelist
{
	optional int32 result = 1;
	repeated int32 tableid = 2;      	//牌桌ID列表
	repeated string pourjetton = 3;   	//底注,用string表示int64的类型
	repeated int32 gamenum = 4;      	//打牌的局数
	repeated int32 maxplaynum = 5;		//最大局数
	repeated int32 usernum = 6;      	//人数
	repeated int32 createtime = 7;    	//创建时间
}

//创建房间列表
message cgershcreate    
{
	optional int32 userid = 1;
	optional int32 maxuser = 2;  			//最大人数
	optional string difen = 3;    			//底分,用string表示int64的类型
	optional int32 maxplaynum = 4;  		//局数
	optional int32 payway = 5;      		//支付方式：1：房主，2：均摊
	optional int32 paynum = 6;      		//支付的数额
	optional int32 doublecomp = 7;			//双倍比牌 0 双倍比牌 1 单倍比牌
	optional int32 boutcapp = 8; 			//最大投注回合  5 五轮封顶 10 十轮封顶 15 十五轮封顶
	optional int32 mincomp = 9;				//比牌起始回合： 0 一轮可比 1 二轮可比 2 三轮可比
	optional int32 menpai = 10;				//闷牌： 0 不闷牌 1 闷一轮 2 闷两轮 3 闷三轮
	optional int32 restrict = 11;			//限制
	optional string strvipinfo = 12;		//这个是每个字符串类型的针对每个麻将的序列化后的字符串 
	optional int32 paytype = 13; 			//支付类型， 0是钻石支付，1 是玉支付
	optional int32 julebuid = 14; 			//俱乐部ID，俱乐部创建房间时赋值
	optional int32 ershtype = 15;   			//斗牛玩法的类型

}

message gcershcreate    
{
	optional int32 result = 1;
	optional int32 tableid = 2;		
	optional ershinfo hinfo = 3;              //房间信息
}

//发起解散房间
message cgershdissolve   //解散房间，有两种情况，在牌局没开始的时候，房主可以解散房间,这个时候，房间是直接解散的//另外一个情况是，牌局开始了，只有里面坐下去玩的四个人有解散的权利，其他的均没有。
{                        
	optional int32 userid = 1;
	optional int32 tableid = 2;
}

message gcershdissolve
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional int32 disolvetype = 3;   //解散的类型，如果是0，就直接解散。如果是1的话表示是牌局中解散，需要其他玩家同意
	optional int32 timemark = 4;      //申请解散房间的倒计时，倒计时到了，默认全部解散
	optional int32 dissolveinfo = 5;  //剩余人员的信息
	optional string msg = 6;   // 提示信息："玩家【xxx】申请解散房间"
}

//回应解散房间请求
message cgershdissolveopt     //有玩家发起了解散的请求，其他玩家的响应操作
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 opttype = 3;     //0:同意解散房间，1：不同意解散房间
}

message gcershdissolveopt    //   
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 tableid = 3;
	optional int32 opttype = 4;    //0:同意解散房间，1：不同意解散房间
	optional string msg = 5;       //如果是有人不同意解散房间，就显示这条信息，显示谁不同意解散。
	optional int32 dissolveinfo = 6;  //剩余人员的信息

}

//加入房间
message cgershjoinroom
{
	optional int32 userid = 1;
	optional int32 tableid = 2;     
	optional int32 tabletype = 3;   //牌桌的类型：201 私人场，101 初级金币场，102 中级金币场，103 高级金币场
	optional int32 resolute = 4;	//游戏开始确定要进人房间是，发 1，不确定是发 0
	
}

message gcershjoinroom
{
	optional int32 result = 1;
	repeated playersimpleinfo pslist = 2;     	//坐在8个位置上的人物信息,每个玩家的信息，里面的积分对应玩家的积分
	optional ershinfo hinfo = 3;              //火锅英雄的信息	
	optional string strvipinfo = 4;				//这个是每个字符串类型的针对每个麻将的序列化后的字符串 
	
}

//离开房间
message cgershleave
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcershleave
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 leavetype = 4;   //离开的类型，用于前端显示
	optional string leavemsg = 5;   //如果这个是非空的时候，最好显示出来。明确告知玩家为什么离开了房间
}

//坐下	
message cgershsitdown
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;    //选好坐下的座位ID
}

message gcershsitdown
{
	optional int32 result = 1;
	optional int32 chairid  = 2;    //坐下来的的
	optional playersimpleinfo psinfo = 3; 
}

//开始
message cgershstart
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;
}

message gcershstart
{
	optional int32 result = 1;
	optional ershinfo hinfo = 2;              //火锅英雄的信息
}

//通知玩家行动
message gcershinformaction
{	
	optional int32 result = 1;
	optional int32 userid = 2;		// 当前操作玩家的id
	optional int32 chairid = 3;		// 当前操作玩家的座位号
	repeated int32 actionlist = 4;	// 可执行的操作的列表
	repeated string raiselist = 5;	// 加注列表,用string表示int64的类型
}

//玩家的行动
message cgershaction
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 actiontype = 3;		//1 弃牌 2不加 3跟注 4加注 5梭哈
	optional string raisejetton = 4;	//加注的筹码	加注时才需要赋值,用string表示int64的类型
}

message gcershaction
{	
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
	optional int32 actiontype = 4;
	optional string pourjetton = 5;		// 下注值,用string表示int64的类型
	optional string jetton = 6;			// 总注,用string表示int64的类型
}

//结算
message gcershcount   //结算是服务器主动发送给玩家的
{
	optional int32 result = 1;
	optional int32 timemark = 2;
	repeated int32 userid = 3;				// 用户id
	repeated int32 chairid = 4;				// 座位号
	repeated string score = 5;				// 得分,用string表示int64的类型
	repeated string realjetton = 6;			// 结算时筹码的得失,用string表示int64的类型
	repeated int32 pattern = 7;				// 牌型
	repeated int32 lastaction = 8;			// 玩家最后的操作
	repeated ershhandpoker handpoker = 9;	// 手牌
}

//聊天
message cgershchat   
{
	optional int32 senderid = 1;
	optional string sender = 2;
	optional int32 chattype = 3;   //对应g_douniuDefine.chat 中的类型
	optional string msg = 4;
	optional int32 tableid = 5;    //牌桌的ID
}

message gcershchat
{
	optional int32 result = 1;
	optional int32 chatdate = 2;   //聊天时间
	optional int32 senderid = 3;   
	optional string sender = 4;
	optional int32 chattype = 5;
	optional string msg = 6;
}

//准备
message cgershnext
{
	
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid= 3;
}

message gcershnext
{
	optional int32 result = 1;
	optional int32 chairid = 2;
	optional int32 userid = 3;

}
//等待下一局游戏开始
message gcershnextout
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional ershinfo hinfo = 3;
} 

//获得历史战绩
message cgershhistory
{
	optional int32 userid = 1;
	optional int32 page = 2;
}

message gcershhistory
{
	optional int32 result = 1;
	repeated ershhistory htylist = 2;
}

//进人房间时，当游戏已经开始，主动推送给玩家
message cgershroominfo
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
}

message gcershroominfo
{
	optional int32 result = 1;
	optional int32 tableid = 2;
	optional string msg = 3;
}   

//站起	
message gcershstandup    
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
}

//通知客户端隐藏看牌加注跟注等按钮
message gcershconcealbutton
{
	optional int32 result = 1;
	optional int32 flag = 2;  		//1 全部按扣消失 0 比牌 加注 跟注变灰 2 隐藏点击亮牌
}

// ersh
message gcershdeal	// 发牌
{
	optional int32 result = 1;
	repeated int32 userid = 2;				// 各个玩家的ID
	repeated int32 chairid = 3;				// 各个玩家的座位ID
	repeated ershcardlist cardlist = 4;		// 各个玩家卡牌列表
}

//游戏开始后，动态加入
message cgershdynamicjion
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
}

message gcershdynamicjion
{
	optional int32 result = 1;
	optional int32 userid = 2;
} 