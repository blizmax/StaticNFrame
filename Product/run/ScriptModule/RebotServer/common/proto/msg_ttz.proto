package progame;
import "st_human.proto";
import "st_ttz.proto";

message cgttzsitdown  //坐下牌桌
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;    //坐下来的位置
}

message gcttzsitdown      //当有玩家坐下来时，把该协议同时广播给牌桌里面所有的其他的玩家
{
	optional int32 result = 1;
	optional int32 chairid = 2;
	optional int32 douniuuser = 3;
	optional playersimpleinfo psinfo = 4;     //
	
}

message gcttzstandup    //当玩家上庄的时候,要把坐下的座位让出来
{
	optional int32 result = 1;
	optional int32 userid = 2;
	optional int32 chairid = 3;
}

message cgttzleave
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 chairid = 3;      //如果玩家坐下8个列表中，则需要携带
}

message gcttzleave    //当坐下来的玩家离开的时候，需要广播给全部玩家
{
	optional int32 result = 1;
	optional int32 chairid = 2;
	optional int32 userid = 3;
	optional int32 leavetype = 4;
	optional string msg = 5;
}

//游戏开始，摇骰子发牌
message gcttzgamestart
{
	optional int32 			  result = 1;
	optional dices 			  dice = 2;     //骰子点数
	optional playersimpleinfo bankerinfo = 3;
	optional string bankerjetton = 4;    //庄家携带的筹码,用string表示int64的数据类型
	optional int32 			  bankercount = 5;    //当庄后的游戏局数
	optional int32 			  residuecardcount = 6;      //剩余牌数
	optional int32 			  timemark = 7;
	repeated playersimpleinfo pslist = 8;     //坐在6个位置上的人物信息
	repeated int32 			  situser = 9;         //对应位置的userID，总共8个长度，在第几个非0就表示该座位有玩家
}

//通知开始下注
message gcttzbetstart
{
	optional int32 result = 1;
	optional int32 timemark = 2;
}

//开牌
message gcttzopencard
{
	optional int32    result = 1;
	optional ttzplay  banker = 2;
	repeated ttzplay  playerlist = 3;
	optional int32    timemark = 4;	
}

message cgttzpourjetton
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 jetton = 3;   //下注的额度
	optional int32 pourtype = 4;  //下注的类型
	
}

message gcttzpourjetton                
{
	optional int32 result = 1;
	optional int32 userid = 2;    //如果检查到是坐在座位的玩家，需要客户端自己同步这里的数值
	optional int32 jetton = 3;
	optional int32 pourtype = 4;   //下注的类型
	optional int32 chairid = 5;    //
	optional string alljetton = 6;  //玩家身上的总数,用string表示int64的数据类型
	optional int32  star = 7;      //是否标记星星   0 不标记   1  2  3 分别是标记1 2 3
	optional string selfpour = 8;   //当前区域自己总下注
	optional string totalpour = 9;  //当前区域总下注
}

message gcttzgroupjetton               //机器人的
{
	optional int32 result = 1;
	repeated int32 pourtype = 2;
	repeated int32 jetton = 3;
	optional int32 timemark = 4;
	optional string remainpourjetton = 5;	// 剩余下注额度
	repeated string totalpours = 6;  		//当前区域总下注
}
message gcttzcount   //结算是服务器主动发送给玩家的
{
	optional int32 result = 1;
	optional areawinscore banker = 2;
	optional int32 timemark = 3;      
	optional string bankerjetton = 4;                    //庄家携带的金币数
	optional int32 iswinarea1 = 5;						
	optional int32 iswinarea2 = 6;
	optional int32 iswinarea3 = 7;
	repeated areawinscore playerwinscore = 8;          //6个固定区域的输赢
	optional string selfwinareawin1 = 9;
	optional string selfwinareawin2 = 10;
	optional string selfwinareawin3 = 11;
	optional string selfwinalljetton = 12;
	optional string selfwinwinjetton = 13;
	optional string userlistwinareawin1 = 14;			    //玩家列表赢钱
	optional string userlistwinareawin2 = 15;			    //玩家列表赢钱
	optional string userlistwinareawin3 = 16;			    //玩家列表赢钱
	optional string userlistwinwinjetton = 17;
}

message cgttztablelist  //获取房间列表，每页显示8个
{
	optional int32 userid = 1;
	optional int32 pagenum = 2;    //第几页
}

message gcttztablelist
{
	optional int32 result = 1;
	repeated int32 tableidlist = 2;
	repeated int32 usernumlist = 3;
	repeated string nicklist = 4;
	repeated string facelist = 5;
}

message cgttzcreatetable
{
	optional int32 userid = 1;
	optional int32 maxuser = 2;  //最大人数
	optional int32 minpour = 3;  //最小下注
	optional string jetton = 4;   //上庄金币,用string表示int64的数据类型
}

message gcttzcreatetable
{
	optional int32 result = 1;
	optional ttzinfo hinfo = 2;
}

message cgttzbeingbanker
{
	optional int32 userid = 1;
	optional string jetton = 2;   //用string表示int64的数据类型
	optional int32 tableid = 3;
	
}

message gcttzbeingbanker
{
	optional int32 result = 1;
	optional playersimpleinfo bankerinfo = 2;   //庄家的信息	
	optional int32 popularity = 3;              //上庄列表有多少个人
	optional int32 userid = 4;
}

message cgttzdropbanker
{
	optional int32 userid = 1;   //下庄
	optional int32 tableid = 3;
}

message gcttzdropbanker            //上庄
{
	optional int32 result = 1;
	optional int32 userid = 2;
}

message gcttzupdate
{
	optional int32 result = 1;
	optional int32 state = 2;
	optional int32 timemark = 3;
}

message cgttzhistory
{
	optional int32 userid = 1;
	optional int32 pagenum = 2;  //每次获取20条，不能多
	optional int32 tableid = 3;
}

message gcttzhistory
{
	optional int32 result = 1;
	repeated int32 allnum1 = 2;         //0是输，1是胜
	repeated int32 allnum2 = 3;         //0是输，1是胜
	repeated int32 allnum3 = 4;         //0是输，1是胜
	repeated int32 allnum4 = 5;         //0是输，1是胜
}

message cgttzchat   //欢乐赢都里面的聊天
{
	optional int32 senderid = 1;
	optional string sender = 2;
	optional int32 chattype = 3;   //对应g_ttzDefine.chat 中的类型
	optional string msg = 4;
	optional int32 tableid = 5;    //牌桌的ID
}

message gcttzchat
{
	optional int32 result = 1;
	optional int32 chatdate = 2;   //聊天时间
	optional int32 senderid = 3;   
	optional string sender = 4;
	optional int32 chattype = 5;
	optional string msg = 6;
}

message cgttzstandlist //获取站立的列表信息
{
	optional int32 userid = 1;
	optional int32 tableid = 2;
	optional int32 pagenum = 3;   //每一次获取10个
}

message gcttzstandlist
{
	optional int32 result = 1;
	repeated ttzjettonrecorinfo pslist = 2;
}

message cgttzbankerlist  //获取庄家列表
{
	optional int32 userid = 1;
	optional int32 pagenum = 2;
	optional int32 tableid = 3;
}

message gcttzbankerlist   //获取上庄列表
{
	optional int32 result = 1;
	repeated int32 useridlist = 2;
	repeated string jettonlist = 3;   //用string表示int64的数据类型
	repeated string nicklist = 4;
	repeated string faceidlist = 5;
}

message cgttzstats   //这个是欢乐赢豆的统计
{
	optional int32 userid = 1;
}

message gcttzstats
{
	optional int32 result = 1;
	optional int32 allnum = 2;    //总局数
	optional string weekwin = 3;  //用string表示int64的数据类型
	optional string maxjetton = 4;   //用string表示int64的数据类型
}


message cgttzallgamehistory
{
	optional int32 userid = 1;
}

message gcttzallgamehistory
{
	optional int32 result = 1;
	repeated ttzgamehistoryinfo historyinfo = 2;	//每个房间的记录 
	
}

message cgttzgamehistoryupdata
{
	optional int32 userid = 1;
}

message gcttzgamehistoryupdata
{
	optional int32 result = 1;
	repeated int32 tableid = 2;
	repeated int32 state = 3;
	repeated int32 timemark = 4;
	repeated string recordidentification = 5;	//记录的标识
	repeated int32 allnum1 = 6;
	repeated int32 allnum2 = 7;
	repeated int32 allnum3  = 8;
	repeated int32 allnum4  = 9;
}
