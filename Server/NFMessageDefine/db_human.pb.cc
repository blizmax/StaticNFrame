// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_human.proto

#include "db_human.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_db_5fhuman_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_db_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_db_playerinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_db_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_db_query_playerinfo_cond;
}  // namespace protobuf_db_5fhuman_2eproto
namespace NFMsg {
class db_playerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<db_playerinfo>
      _instance;
} _db_playerinfo_default_instance_;
class db_query_playerinfo_condDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<db_query_playerinfo_cond>
      _instance;
} _db_query_playerinfo_cond_default_instance_;
class db_query_playerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<db_query_playerinfo>
      _instance;
} _db_query_playerinfo_default_instance_;
}  // namespace NFMsg
namespace protobuf_db_5fhuman_2eproto {
static void InitDefaultsdb_playerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_db_playerinfo_default_instance_;
    new (ptr) ::NFMsg::db_playerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::db_playerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_db_playerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdb_playerinfo}, {}};

static void InitDefaultsdb_query_playerinfo_cond() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_db_query_playerinfo_cond_default_instance_;
    new (ptr) ::NFMsg::db_query_playerinfo_cond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::db_query_playerinfo_cond::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_db_query_playerinfo_cond =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdb_query_playerinfo_cond}, {}};

static void InitDefaultsdb_query_playerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_db_query_playerinfo_default_instance_;
    new (ptr) ::NFMsg::db_query_playerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::db_query_playerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_db_query_playerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsdb_query_playerinfo}, {
      &protobuf_db_5fhuman_2eproto::scc_info_db_playerinfo.base,
      &protobuf_db_5fhuman_2eproto::scc_info_db_query_playerinfo_cond.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_db_playerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_db_query_playerinfo_cond.base);
  ::google::protobuf::internal::InitSCC(&scc_info_db_query_playerinfo.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, regdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, phonenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, viplevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, jetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, popularity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, idenstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, bindtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, bindnick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, platformid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, devname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, macname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, mobiletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, lasttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, penulttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, isban_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, face_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, face_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, face_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, face_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, isrobot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, playtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, bank_jetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, blacklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, propertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, agencystatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, registration1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, registration2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, registration3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, signinmonth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, bsignin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, turntablenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, tengames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, todayshare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_playerinfo, caninvite_),
  23,
  0,
  1,
  2,
  3,
  4,
  24,
  25,
  5,
  6,
  26,
  27,
  28,
  29,
  30,
  31,
  7,
  8,
  9,
  32,
  33,
  34,
  10,
  11,
  12,
  13,
  14,
  35,
  36,
  37,
  38,
  39,
  15,
  16,
  17,
  18,
  40,
  41,
  19,
  42,
  43,
  44,
  45,
  20,
  21,
  22,
  46,
  48,
  49,
  50,
  51,
  47,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo_cond, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo_cond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo_cond, account_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo, dy_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo, db_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::db_query_playerinfo, db_cond_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 57, sizeof(::NFMsg::db_playerinfo)},
  { 109, 115, sizeof(::NFMsg::db_query_playerinfo_cond)},
  { 116, 124, sizeof(::NFMsg::db_query_playerinfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_db_playerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_db_query_playerinfo_cond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_db_query_playerinfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "db_human.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016db_human.proto\022\005NFMsg\"\246\007\n\rdb_playerinf"
      "o\022\016\n\006userid\030\001 \001(\005\022\013\n\003cid\030\002 \001(\t\022\017\n\007accoun"
      "t\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\020\n\010nickname\030\005 "
      "\001(\t\022\017\n\007regdate\030\007 \001(\t\022\013\n\003sex\030\010 \001(\005\022\013\n\003age"
      "\030\t \001(\005\022\r\n\005email\030\n \001(\t\022\020\n\010phonenum\030\013 \001(\t\022"
      "\013\n\003exp\030\014 \001(\005\022\r\n\005level\030\r \001(\005\022\020\n\010viplevel\030"
      "\016 \001(\005\022\016\n\006jetton\030\017 \001(\003\022\014\n\004gold\030\020 \001(\005\022\r\n\005m"
      "oney\030\021 \001(\005\022\017\n\007channel\030\022 \001(\t\022\020\n\010province\030"
      "\023 \001(\t\022\014\n\004city\030\024 \001(\t\022\022\n\npopularity\030\025 \001(\005\022"
      "\022\n\nidenstatus\030\026 \001(\005\022\020\n\010bindtype\030\027 \001(\005\022\020\n"
      "\010bindnick\030\030 \001(\t\022\022\n\nplatformid\030\031 \001(\t\022\014\n\004i"
      "mei\030\032 \001(\t\022\017\n\007devname\030\033 \001(\t\022\017\n\007macname\030\034 "
      "\001(\t\022\022\n\nmobiletype\030\035 \001(\005\022\020\n\010lasttime\030\036 \001("
      "\005\022\022\n\npenulttime\030\037 \001(\005\022\016\n\006silent\030  \001(\005\022\r\n"
      "\005isban\030! \001(\005\022\016\n\006face_1\030\" \001(\t\022\016\n\006face_2\030#"
      " \001(\t\022\016\n\006face_3\030$ \001(\t\022\016\n\006face_4\030% \001(\t\022\017\n\007"
      "isrobot\030& \001(\005\022\020\n\010playtype\030\' \001(\005\022\023\n\013descr"
      "iption\030( \001(\t\022\023\n\013bank_jetton\030* \001(\003\022\021\n\tbla"
      "cklist\030, \001(\005\022\022\n\npropertyid\030- \001(\005\022\024\n\014agen"
      "cystatus\030. \001(\005\022\025\n\rregistration1\0301 \001(\t\022\025\n"
      "\rregistration2\0302 \001(\t\022\025\n\rregistration3\0303 "
      "\001(\t\022\023\n\013signinmonth\0304 \001(\005\022\017\n\007bsignin\0305 \001("
      "\005\022\024\n\014turntablenum\0306 \001(\005\022\020\n\010tengames\0307 \001("
      "\005\022\022\n\ntodayshare\0308 \001(\005\022\021\n\tcaninvite\0309 \001(\005"
      "\"+\n\030db_query_playerinfo_cond\022\017\n\007account\030"
      "\001 \001(\t\"\203\001\n\023db_query_playerinfo\022\021\n\tdy_play"
      "er\030\001 \001(\t\022\'\n\tdb_fields\030\002 \001(\0132\024.NFMsg.db_p"
      "layerinfo\0220\n\007db_cond\030\003 \001(\0132\037.NFMsg.db_qu"
      "ery_playerinfo_cond"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1139);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "db_human.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_db_5fhuman_2eproto
namespace NFMsg {

// ===================================================================

void db_playerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int db_playerinfo::kUseridFieldNumber;
const int db_playerinfo::kCidFieldNumber;
const int db_playerinfo::kAccountFieldNumber;
const int db_playerinfo::kPasswordFieldNumber;
const int db_playerinfo::kNicknameFieldNumber;
const int db_playerinfo::kRegdateFieldNumber;
const int db_playerinfo::kSexFieldNumber;
const int db_playerinfo::kAgeFieldNumber;
const int db_playerinfo::kEmailFieldNumber;
const int db_playerinfo::kPhonenumFieldNumber;
const int db_playerinfo::kExpFieldNumber;
const int db_playerinfo::kLevelFieldNumber;
const int db_playerinfo::kViplevelFieldNumber;
const int db_playerinfo::kJettonFieldNumber;
const int db_playerinfo::kGoldFieldNumber;
const int db_playerinfo::kMoneyFieldNumber;
const int db_playerinfo::kChannelFieldNumber;
const int db_playerinfo::kProvinceFieldNumber;
const int db_playerinfo::kCityFieldNumber;
const int db_playerinfo::kPopularityFieldNumber;
const int db_playerinfo::kIdenstatusFieldNumber;
const int db_playerinfo::kBindtypeFieldNumber;
const int db_playerinfo::kBindnickFieldNumber;
const int db_playerinfo::kPlatformidFieldNumber;
const int db_playerinfo::kImeiFieldNumber;
const int db_playerinfo::kDevnameFieldNumber;
const int db_playerinfo::kMacnameFieldNumber;
const int db_playerinfo::kMobiletypeFieldNumber;
const int db_playerinfo::kLasttimeFieldNumber;
const int db_playerinfo::kPenulttimeFieldNumber;
const int db_playerinfo::kSilentFieldNumber;
const int db_playerinfo::kIsbanFieldNumber;
const int db_playerinfo::kFace1FieldNumber;
const int db_playerinfo::kFace2FieldNumber;
const int db_playerinfo::kFace3FieldNumber;
const int db_playerinfo::kFace4FieldNumber;
const int db_playerinfo::kIsrobotFieldNumber;
const int db_playerinfo::kPlaytypeFieldNumber;
const int db_playerinfo::kDescriptionFieldNumber;
const int db_playerinfo::kBankJettonFieldNumber;
const int db_playerinfo::kBlacklistFieldNumber;
const int db_playerinfo::kPropertyidFieldNumber;
const int db_playerinfo::kAgencystatusFieldNumber;
const int db_playerinfo::kRegistration1FieldNumber;
const int db_playerinfo::kRegistration2FieldNumber;
const int db_playerinfo::kRegistration3FieldNumber;
const int db_playerinfo::kSigninmonthFieldNumber;
const int db_playerinfo::kBsigninFieldNumber;
const int db_playerinfo::kTurntablenumFieldNumber;
const int db_playerinfo::kTengamesFieldNumber;
const int db_playerinfo::kTodayshareFieldNumber;
const int db_playerinfo::kCaninviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

db_playerinfo::db_playerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_db_5fhuman_2eproto::scc_info_db_playerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.db_playerinfo)
}
db_playerinfo::db_playerinfo(const db_playerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cid()) {
    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_regdate()) {
    regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bindnick()) {
    bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
  }
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platformid()) {
    platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devname()) {
    devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
  }
  macname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macname()) {
    macname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macname_);
  }
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_1()) {
    face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
  }
  face_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_2()) {
    face_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_2_);
  }
  face_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_3()) {
    face_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_3_);
  }
  face_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_4()) {
    face_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_4_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  registration1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_registration1()) {
    registration1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration1_);
  }
  registration2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_registration2()) {
    registration2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration2_);
  }
  registration3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_registration3()) {
    registration3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration3_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&todayshare_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(todayshare_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.db_playerinfo)
}

void db_playerinfo::SharedCtor() {
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&todayshare_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(todayshare_));
}

db_playerinfo::~db_playerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.db_playerinfo)
  SharedDtor();
}

void db_playerinfo::SharedDtor() {
  cid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void db_playerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* db_playerinfo::descriptor() {
  ::protobuf_db_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const db_playerinfo& db_playerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_db_5fhuman_2eproto::scc_info_db_playerinfo.base);
  return *internal_default_instance();
}


void db_playerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.db_playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      cid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      regdate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      phonenum_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      channel_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      province_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      city_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      bindnick_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      platformid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      imei_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00002000u) {
      devname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00004000u) {
      macname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00008000u) {
      face_1_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 8323072u) {
    if (cached_has_bits & 0x00010000u) {
      face_2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00020000u) {
      face_3_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00040000u) {
      face_4_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00080000u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00100000u) {
      registration1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00200000u) {
      registration2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00400000u) {
      registration3_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = 0;
  if (cached_has_bits & 4278190080u) {
    ::memset(&sex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&money_) -
        reinterpret_cast<char*>(&sex_)) + sizeof(money_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    ::memset(&popularity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isban_) -
        reinterpret_cast<char*>(&popularity_)) + sizeof(isban_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&isrobot_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&caninvite_) -
        reinterpret_cast<char*>(&isrobot_)) + sizeof(caninvite_));
  }
  if (cached_has_bits & 983040u) {
    ::memset(&bsignin_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&todayshare_) -
        reinterpret_cast<char*>(&bsignin_)) + sizeof(todayshare_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool db_playerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.db_playerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cid().data(), static_cast<int>(this->cid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.cid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string regdate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regdate().data(), static_cast<int>(this->regdate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.regdate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 age = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phonenum = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenum().data(), static_cast<int>(this->phonenum().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.phonenum");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 viplevel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_viplevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 jetton = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_jetton();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jetton_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string province = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), static_cast<int>(this->province().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.city");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 popularity = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_popularity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &popularity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 idenstatus = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_idenstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idenstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bindtype = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_bindtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bindtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bindnick = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bindnick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bindnick().data(), static_cast<int>(this->bindnick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.bindnick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string platformid = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platformid().data(), static_cast<int>(this->platformid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.platformid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string devname = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devname().data(), static_cast<int>(this->devname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.devname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string macname = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macname().data(), static_cast<int>(this->macname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.macname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mobiletype = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_mobiletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobiletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lasttime = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_lasttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lasttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 penulttime = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_penulttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &penulttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 silent = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_silent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &silent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isban = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_isban();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isban_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_1 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_1().data(), static_cast<int>(this->face_1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.face_1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_2 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_2().data(), static_cast<int>(this->face_2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.face_2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_3 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_3().data(), static_cast<int>(this->face_3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.face_3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_4 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_4().data(), static_cast<int>(this->face_4().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.face_4");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isrobot = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          set_has_isrobot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isrobot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 playtype = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          set_has_playtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bank_jetton = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_bank_jetton();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_jetton_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blacklist = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          set_has_blacklist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blacklist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 propertyid = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_propertyid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &propertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 agencystatus = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          set_has_agencystatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agencystatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string registration1 = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->registration1().data(), static_cast<int>(this->registration1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.registration1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string registration2 = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->registration2().data(), static_cast<int>(this->registration2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.registration2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string registration3 = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->registration3().data(), static_cast<int>(this->registration3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_playerinfo.registration3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 signinmonth = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          set_has_signinmonth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &signinmonth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bsignin = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 424 & 0xFF */)) {
          set_has_bsignin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bsignin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 turntablenum = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {
          set_has_turntablenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turntablenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tengames = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 440 & 0xFF */)) {
          set_has_tengames();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tengames_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 todayshare = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 448 & 0xFF */)) {
          set_has_todayshare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &todayshare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caninvite = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 456 & 0xFF */)) {
          set_has_caninvite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caninvite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.db_playerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.db_playerinfo)
  return false;
#undef DO_
}

void db_playerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.db_playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string cid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.cid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cid(), output);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional string password = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional string regdate = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), static_cast<int>(this->regdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.regdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->regdate(), output);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sex(), output);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->age(), output);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->email(), output);
  }

  // optional string phonenum = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.phonenum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->phonenum(), output);
  }

  // optional int32 exp = 12;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->exp(), output);
  }

  // optional int32 level = 13;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->level(), output);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->viplevel(), output);
  }

  // optional int64 jetton = 15;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->jetton(), output);
  }

  // optional int32 gold = 16;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->gold(), output);
  }

  // optional int32 money = 17;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->money(), output);
  }

  // optional string channel = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->channel(), output);
  }

  // optional string province = 19;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->province(), output);
  }

  // optional string city = 20;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->city(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->popularity(), output);
  }

  // optional int32 idenstatus = 22;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->idenstatus(), output);
  }

  // optional int32 bindtype = 23;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->bindtype(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string bindnick = 24;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.bindnick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->bindnick(), output);
  }

  // optional string platformid = 25;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.platformid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->platformid(), output);
  }

  // optional string imei = 26;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->imei(), output);
  }

  // optional string devname = 27;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.devname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->devname(), output);
  }

  // optional string macname = 28;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macname().data(), static_cast<int>(this->macname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.macname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->macname(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 mobiletype = 29;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->mobiletype(), output);
  }

  // optional int32 lasttime = 30;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->lasttime(), output);
  }

  // optional int32 penulttime = 31;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->penulttime(), output);
  }

  // optional int32 silent = 32;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->silent(), output);
  }

  // optional int32 isban = 33;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->isban(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string face_1 = 34;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->face_1(), output);
  }

  // optional string face_2 = 35;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_2().data(), static_cast<int>(this->face_2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      35, this->face_2(), output);
  }

  // optional string face_3 = 36;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_3().data(), static_cast<int>(this->face_3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      36, this->face_3(), output);
  }

  // optional string face_4 = 37;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_4().data(), static_cast<int>(this->face_4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      37, this->face_4(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 isrobot = 38;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->isrobot(), output);
  }

  // optional int32 playtype = 39;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->playtype(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string description = 40;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->description(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int64 bank_jetton = 42;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(42, this->bank_jetton(), output);
  }

  // optional int32 blacklist = 44;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->blacklist(), output);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->propertyid(), output);
  }

  // optional int32 agencystatus = 46;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->agencystatus(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string registration1 = 49;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration1().data(), static_cast<int>(this->registration1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.registration1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      49, this->registration1(), output);
  }

  // optional string registration2 = 50;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration2().data(), static_cast<int>(this->registration2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.registration2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->registration2(), output);
  }

  // optional string registration3 = 51;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration3().data(), static_cast<int>(this->registration3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.registration3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      51, this->registration3(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 signinmonth = 52;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(52, this->signinmonth(), output);
  }

  // optional int32 bsignin = 53;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(53, this->bsignin(), output);
  }

  // optional int32 turntablenum = 54;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(54, this->turntablenum(), output);
  }

  // optional int32 tengames = 55;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(55, this->tengames(), output);
  }

  // optional int32 todayshare = 56;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(56, this->todayshare(), output);
  }

  // optional int32 caninvite = 57;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(57, this->caninvite(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.db_playerinfo)
}

::google::protobuf::uint8* db_playerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.db_playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string cid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.cid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cid(), target);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional string password = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional string regdate = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), static_cast<int>(this->regdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.regdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->regdate(), target);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sex(), target);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->age(), target);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->email(), target);
  }

  // optional string phonenum = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.phonenum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->phonenum(), target);
  }

  // optional int32 exp = 12;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->exp(), target);
  }

  // optional int32 level = 13;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->level(), target);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->viplevel(), target);
  }

  // optional int64 jetton = 15;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->jetton(), target);
  }

  // optional int32 gold = 16;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->gold(), target);
  }

  // optional int32 money = 17;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->money(), target);
  }

  // optional string channel = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->channel(), target);
  }

  // optional string province = 19;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->province(), target);
  }

  // optional string city = 20;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->city(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->popularity(), target);
  }

  // optional int32 idenstatus = 22;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->idenstatus(), target);
  }

  // optional int32 bindtype = 23;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->bindtype(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string bindnick = 24;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.bindnick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->bindnick(), target);
  }

  // optional string platformid = 25;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.platformid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->platformid(), target);
  }

  // optional string imei = 26;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->imei(), target);
  }

  // optional string devname = 27;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.devname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->devname(), target);
  }

  // optional string macname = 28;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macname().data(), static_cast<int>(this->macname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.macname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->macname(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 mobiletype = 29;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->mobiletype(), target);
  }

  // optional int32 lasttime = 30;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->lasttime(), target);
  }

  // optional int32 penulttime = 31;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->penulttime(), target);
  }

  // optional int32 silent = 32;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->silent(), target);
  }

  // optional int32 isban = 33;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->isban(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string face_1 = 34;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->face_1(), target);
  }

  // optional string face_2 = 35;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_2().data(), static_cast<int>(this->face_2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->face_2(), target);
  }

  // optional string face_3 = 36;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_3().data(), static_cast<int>(this->face_3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->face_3(), target);
  }

  // optional string face_4 = 37;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_4().data(), static_cast<int>(this->face_4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.face_4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->face_4(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 isrobot = 38;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->isrobot(), target);
  }

  // optional int32 playtype = 39;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->playtype(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string description = 40;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->description(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int64 bank_jetton = 42;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(42, this->bank_jetton(), target);
  }

  // optional int32 blacklist = 44;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->blacklist(), target);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->propertyid(), target);
  }

  // optional int32 agencystatus = 46;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->agencystatus(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string registration1 = 49;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration1().data(), static_cast<int>(this->registration1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.registration1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        49, this->registration1(), target);
  }

  // optional string registration2 = 50;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration2().data(), static_cast<int>(this->registration2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.registration2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->registration2(), target);
  }

  // optional string registration3 = 51;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration3().data(), static_cast<int>(this->registration3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_playerinfo.registration3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        51, this->registration3(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 signinmonth = 52;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(52, this->signinmonth(), target);
  }

  // optional int32 bsignin = 53;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(53, this->bsignin(), target);
  }

  // optional int32 turntablenum = 54;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(54, this->turntablenum(), target);
  }

  // optional int32 tengames = 55;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(55, this->tengames(), target);
  }

  // optional int32 todayshare = 56;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(56, this->todayshare(), target);
  }

  // optional int32 caninvite = 57;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(57, this->caninvite(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.db_playerinfo)
  return target;
}

size_t db_playerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.db_playerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string cid = 2;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cid());
    }

    // optional string account = 3;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 4;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string nickname = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string regdate = 7;
    if (has_regdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regdate());
    }

    // optional string email = 10;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string phonenum = 11;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

    // optional string channel = 18;
    if (has_channel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string province = 19;
    if (has_province()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

    // optional string city = 20;
    if (has_city()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string bindnick = 24;
    if (has_bindnick()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bindnick());
    }

    // optional string platformid = 25;
    if (has_platformid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platformid());
    }

    // optional string imei = 26;
    if (has_imei()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string devname = 27;
    if (has_devname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devname());
    }

    // optional string macname = 28;
    if (has_macname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macname());
    }

    // optional string face_1 = 34;
    if (has_face_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_1());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional string face_2 = 35;
    if (has_face_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_2());
    }

    // optional string face_3 = 36;
    if (has_face_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_3());
    }

    // optional string face_4 = 37;
    if (has_face_4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_4());
    }

    // optional string description = 40;
    if (has_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string registration1 = 49;
    if (has_registration1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->registration1());
    }

    // optional string registration2 = 50;
    if (has_registration2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->registration2());
    }

    // optional string registration3 = 51;
    if (has_registration3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->registration3());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional int32 sex = 8;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 age = 9;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 exp = 12;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // optional int32 level = 13;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 viplevel = 14;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplevel());
    }

    // optional int64 jetton = 15;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jetton());
    }

    // optional int32 gold = 16;
    if (has_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 money = 17;
    if (has_money()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional int32 popularity = 21;
    if (has_popularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->popularity());
    }

    // optional int32 idenstatus = 22;
    if (has_idenstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idenstatus());
    }

    // optional int32 bindtype = 23;
    if (has_bindtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bindtype());
    }

    // optional int32 mobiletype = 29;
    if (has_mobiletype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobiletype());
    }

    // optional int32 lasttime = 30;
    if (has_lasttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lasttime());
    }

    // optional int32 penulttime = 31;
    if (has_penulttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->penulttime());
    }

    // optional int32 silent = 32;
    if (has_silent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->silent());
    }

    // optional int32 isban = 33;
    if (has_isban()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isban());
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional int32 isrobot = 38;
    if (has_isrobot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isrobot());
    }

    // optional int32 playtype = 39;
    if (has_playtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playtype());
    }

    // optional int64 bank_jetton = 42;
    if (has_bank_jetton()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank_jetton());
    }

    // optional int32 blacklist = 44;
    if (has_blacklist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blacklist());
    }

    // optional int32 propertyid = 45;
    if (has_propertyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->propertyid());
    }

    // optional int32 agencystatus = 46;
    if (has_agencystatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agencystatus());
    }

    // optional int32 signinmonth = 52;
    if (has_signinmonth()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->signinmonth());
    }

    // optional int32 caninvite = 57;
    if (has_caninvite()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caninvite());
    }

  }
  if (_has_bits_[48 / 32] & 983040u) {
    // optional int32 bsignin = 53;
    if (has_bsignin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bsignin());
    }

    // optional int32 turntablenum = 54;
    if (has_turntablenum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->turntablenum());
    }

    // optional int32 tengames = 55;
    if (has_tengames()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tengames());
    }

    // optional int32 todayshare = 56;
    if (has_todayshare()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->todayshare());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void db_playerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.db_playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const db_playerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const db_playerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.db_playerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.db_playerinfo)
    MergeFrom(*source);
  }
}

void db_playerinfo::MergeFrom(const db_playerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.db_playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cid();
      cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_regdate();
      regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_bindnick();
      bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_platformid();
      platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_devname();
      devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_macname();
      macname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macname_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_face_1();
      face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      set_has_face_2();
      face_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_2_);
    }
    if (cached_has_bits & 0x00020000u) {
      set_has_face_3();
      face_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_3_);
    }
    if (cached_has_bits & 0x00040000u) {
      set_has_face_4();
      face_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_4_);
    }
    if (cached_has_bits & 0x00080000u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00100000u) {
      set_has_registration1();
      registration1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration1_);
    }
    if (cached_has_bits & 0x00200000u) {
      set_has_registration2();
      registration2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration2_);
    }
    if (cached_has_bits & 0x00400000u) {
      set_has_registration3();
      registration3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration3_);
    }
    if (cached_has_bits & 0x00800000u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x02000000u) {
      age_ = from.age_;
    }
    if (cached_has_bits & 0x04000000u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x08000000u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x10000000u) {
      viplevel_ = from.viplevel_;
    }
    if (cached_has_bits & 0x20000000u) {
      jetton_ = from.jetton_;
    }
    if (cached_has_bits & 0x40000000u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x80000000u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      popularity_ = from.popularity_;
    }
    if (cached_has_bits & 0x00000002u) {
      idenstatus_ = from.idenstatus_;
    }
    if (cached_has_bits & 0x00000004u) {
      bindtype_ = from.bindtype_;
    }
    if (cached_has_bits & 0x00000008u) {
      mobiletype_ = from.mobiletype_;
    }
    if (cached_has_bits & 0x00000010u) {
      lasttime_ = from.lasttime_;
    }
    if (cached_has_bits & 0x00000020u) {
      penulttime_ = from.penulttime_;
    }
    if (cached_has_bits & 0x00000040u) {
      silent_ = from.silent_;
    }
    if (cached_has_bits & 0x00000080u) {
      isban_ = from.isban_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      isrobot_ = from.isrobot_;
    }
    if (cached_has_bits & 0x00000200u) {
      playtype_ = from.playtype_;
    }
    if (cached_has_bits & 0x00000400u) {
      bank_jetton_ = from.bank_jetton_;
    }
    if (cached_has_bits & 0x00000800u) {
      blacklist_ = from.blacklist_;
    }
    if (cached_has_bits & 0x00001000u) {
      propertyid_ = from.propertyid_;
    }
    if (cached_has_bits & 0x00002000u) {
      agencystatus_ = from.agencystatus_;
    }
    if (cached_has_bits & 0x00004000u) {
      signinmonth_ = from.signinmonth_;
    }
    if (cached_has_bits & 0x00008000u) {
      caninvite_ = from.caninvite_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 983040u) {
    if (cached_has_bits & 0x00010000u) {
      bsignin_ = from.bsignin_;
    }
    if (cached_has_bits & 0x00020000u) {
      turntablenum_ = from.turntablenum_;
    }
    if (cached_has_bits & 0x00040000u) {
      tengames_ = from.tengames_;
    }
    if (cached_has_bits & 0x00080000u) {
      todayshare_ = from.todayshare_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void db_playerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.db_playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void db_playerinfo::CopyFrom(const db_playerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.db_playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool db_playerinfo::IsInitialized() const {
  return true;
}

void db_playerinfo::Swap(db_playerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void db_playerinfo::InternalSwap(db_playerinfo* other) {
  using std::swap;
  cid_.Swap(&other->cid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  regdate_.Swap(&other->regdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phonenum_.Swap(&other->phonenum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  province_.Swap(&other->province_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bindnick_.Swap(&other->bindnick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platformid_.Swap(&other->platformid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devname_.Swap(&other->devname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  macname_.Swap(&other->macname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_1_.Swap(&other->face_1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_2_.Swap(&other->face_2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_3_.Swap(&other->face_3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_4_.Swap(&other->face_4_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registration1_.Swap(&other->registration1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registration2_.Swap(&other->registration2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registration3_.Swap(&other->registration3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(sex_, other->sex_);
  swap(age_, other->age_);
  swap(exp_, other->exp_);
  swap(level_, other->level_);
  swap(viplevel_, other->viplevel_);
  swap(jetton_, other->jetton_);
  swap(gold_, other->gold_);
  swap(money_, other->money_);
  swap(popularity_, other->popularity_);
  swap(idenstatus_, other->idenstatus_);
  swap(bindtype_, other->bindtype_);
  swap(mobiletype_, other->mobiletype_);
  swap(lasttime_, other->lasttime_);
  swap(penulttime_, other->penulttime_);
  swap(silent_, other->silent_);
  swap(isban_, other->isban_);
  swap(isrobot_, other->isrobot_);
  swap(playtype_, other->playtype_);
  swap(bank_jetton_, other->bank_jetton_);
  swap(blacklist_, other->blacklist_);
  swap(propertyid_, other->propertyid_);
  swap(agencystatus_, other->agencystatus_);
  swap(signinmonth_, other->signinmonth_);
  swap(caninvite_, other->caninvite_);
  swap(bsignin_, other->bsignin_);
  swap(turntablenum_, other->turntablenum_);
  swap(tengames_, other->tengames_);
  swap(todayshare_, other->todayshare_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata db_playerinfo::GetMetadata() const {
  protobuf_db_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void db_query_playerinfo_cond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int db_query_playerinfo_cond::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

db_query_playerinfo_cond::db_query_playerinfo_cond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_db_5fhuman_2eproto::scc_info_db_query_playerinfo_cond.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.db_query_playerinfo_cond)
}
db_query_playerinfo_cond::db_query_playerinfo_cond(const db_query_playerinfo_cond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.db_query_playerinfo_cond)
}

void db_query_playerinfo_cond::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

db_query_playerinfo_cond::~db_query_playerinfo_cond() {
  // @@protoc_insertion_point(destructor:NFMsg.db_query_playerinfo_cond)
  SharedDtor();
}

void db_query_playerinfo_cond::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void db_query_playerinfo_cond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* db_query_playerinfo_cond::descriptor() {
  ::protobuf_db_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const db_query_playerinfo_cond& db_query_playerinfo_cond::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_db_5fhuman_2eproto::scc_info_db_query_playerinfo_cond.base);
  return *internal_default_instance();
}


void db_query_playerinfo_cond::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.db_query_playerinfo_cond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    account_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool db_query_playerinfo_cond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.db_query_playerinfo_cond)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_query_playerinfo_cond.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.db_query_playerinfo_cond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.db_query_playerinfo_cond)
  return false;
#undef DO_
}

void db_query_playerinfo_cond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.db_query_playerinfo_cond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_query_playerinfo_cond.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.db_query_playerinfo_cond)
}

::google::protobuf::uint8* db_query_playerinfo_cond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.db_query_playerinfo_cond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_query_playerinfo_cond.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.db_query_playerinfo_cond)
  return target;
}

size_t db_query_playerinfo_cond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.db_query_playerinfo_cond)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void db_query_playerinfo_cond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.db_query_playerinfo_cond)
  GOOGLE_DCHECK_NE(&from, this);
  const db_query_playerinfo_cond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const db_query_playerinfo_cond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.db_query_playerinfo_cond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.db_query_playerinfo_cond)
    MergeFrom(*source);
  }
}

void db_query_playerinfo_cond::MergeFrom(const db_query_playerinfo_cond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.db_query_playerinfo_cond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account()) {
    set_has_account();
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
}

void db_query_playerinfo_cond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.db_query_playerinfo_cond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void db_query_playerinfo_cond::CopyFrom(const db_query_playerinfo_cond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.db_query_playerinfo_cond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool db_query_playerinfo_cond::IsInitialized() const {
  return true;
}

void db_query_playerinfo_cond::Swap(db_query_playerinfo_cond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void db_query_playerinfo_cond::InternalSwap(db_query_playerinfo_cond* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata db_query_playerinfo_cond::GetMetadata() const {
  protobuf_db_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void db_query_playerinfo::InitAsDefaultInstance() {
  ::NFMsg::_db_query_playerinfo_default_instance_._instance.get_mutable()->db_fields_ = const_cast< ::NFMsg::db_playerinfo*>(
      ::NFMsg::db_playerinfo::internal_default_instance());
  ::NFMsg::_db_query_playerinfo_default_instance_._instance.get_mutable()->db_cond_ = const_cast< ::NFMsg::db_query_playerinfo_cond*>(
      ::NFMsg::db_query_playerinfo_cond::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int db_query_playerinfo::kDyPlayerFieldNumber;
const int db_query_playerinfo::kDbFieldsFieldNumber;
const int db_query_playerinfo::kDbCondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

db_query_playerinfo::db_query_playerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_db_5fhuman_2eproto::scc_info_db_query_playerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.db_query_playerinfo)
}
db_query_playerinfo::db_query_playerinfo(const db_query_playerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dy_player_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dy_player()) {
    dy_player_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dy_player_);
  }
  if (from.has_db_fields()) {
    db_fields_ = new ::NFMsg::db_playerinfo(*from.db_fields_);
  } else {
    db_fields_ = NULL;
  }
  if (from.has_db_cond()) {
    db_cond_ = new ::NFMsg::db_query_playerinfo_cond(*from.db_cond_);
  } else {
    db_cond_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.db_query_playerinfo)
}

void db_query_playerinfo::SharedCtor() {
  dy_player_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&db_fields_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&db_cond_) -
      reinterpret_cast<char*>(&db_fields_)) + sizeof(db_cond_));
}

db_query_playerinfo::~db_query_playerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.db_query_playerinfo)
  SharedDtor();
}

void db_query_playerinfo::SharedDtor() {
  dy_player_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete db_fields_;
  if (this != internal_default_instance()) delete db_cond_;
}

void db_query_playerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* db_query_playerinfo::descriptor() {
  ::protobuf_db_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const db_query_playerinfo& db_query_playerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_db_5fhuman_2eproto::scc_info_db_query_playerinfo.base);
  return *internal_default_instance();
}


void db_query_playerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.db_query_playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      dy_player_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(db_fields_ != NULL);
      db_fields_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(db_cond_ != NULL);
      db_cond_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool db_query_playerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.db_query_playerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string dy_player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dy_player()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dy_player().data(), static_cast<int>(this->dy_player().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.db_query_playerinfo.dy_player");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.db_playerinfo db_fields = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_db_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.db_query_playerinfo_cond db_cond = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_db_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.db_query_playerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.db_query_playerinfo)
  return false;
#undef DO_
}

void db_query_playerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.db_query_playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string dy_player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dy_player().data(), static_cast<int>(this->dy_player().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_query_playerinfo.dy_player");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->dy_player(), output);
  }

  // optional .NFMsg.db_playerinfo db_fields = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_db_fields(), output);
  }

  // optional .NFMsg.db_query_playerinfo_cond db_cond = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_db_cond(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.db_query_playerinfo)
}

::google::protobuf::uint8* db_query_playerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.db_query_playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string dy_player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dy_player().data(), static_cast<int>(this->dy_player().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.db_query_playerinfo.dy_player");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->dy_player(), target);
  }

  // optional .NFMsg.db_playerinfo db_fields = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_db_fields(), deterministic, target);
  }

  // optional .NFMsg.db_query_playerinfo_cond db_cond = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_db_cond(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.db_query_playerinfo)
  return target;
}

size_t db_query_playerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.db_query_playerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string dy_player = 1;
    if (has_dy_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dy_player());
    }

    // optional .NFMsg.db_playerinfo db_fields = 2;
    if (has_db_fields()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *db_fields_);
    }

    // optional .NFMsg.db_query_playerinfo_cond db_cond = 3;
    if (has_db_cond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *db_cond_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void db_query_playerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.db_query_playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const db_query_playerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const db_query_playerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.db_query_playerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.db_query_playerinfo)
    MergeFrom(*source);
  }
}

void db_query_playerinfo::MergeFrom(const db_query_playerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.db_query_playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dy_player();
      dy_player_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dy_player_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_db_fields()->::NFMsg::db_playerinfo::MergeFrom(from.db_fields());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_db_cond()->::NFMsg::db_query_playerinfo_cond::MergeFrom(from.db_cond());
    }
  }
}

void db_query_playerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.db_query_playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void db_query_playerinfo::CopyFrom(const db_query_playerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.db_query_playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool db_query_playerinfo::IsInitialized() const {
  return true;
}

void db_query_playerinfo::Swap(db_query_playerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void db_query_playerinfo::InternalSwap(db_query_playerinfo* other) {
  using std::swap;
  dy_player_.Swap(&other->dy_player_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(db_fields_, other->db_fields_);
  swap(db_cond_, other->db_cond_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata db_query_playerinfo::GetMetadata() const {
  protobuf_db_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_db_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::db_playerinfo* Arena::CreateMaybeMessage< ::NFMsg::db_playerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::db_playerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::db_query_playerinfo_cond* Arena::CreateMaybeMessage< ::NFMsg::db_query_playerinfo_cond >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::db_query_playerinfo_cond >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::db_query_playerinfo* Arena::CreateMaybeMessage< ::NFMsg::db_query_playerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::db_query_playerinfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
