// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_server.proto

#ifndef PROTOBUF_INCLUDED_db_5fserver_2eproto
#define PROTOBUF_INCLUDED_db_5fserver_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "server_msg.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_db_5fserver_2eproto 

namespace protobuf_db_5fserver_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_db_5fserver_2eproto
namespace NFMsg {
class db_query_server;
class db_query_serverDefaultTypeInternal;
extern db_query_serverDefaultTypeInternal _db_query_server_default_instance_;
class db_query_server_detail;
class db_query_server_detailDefaultTypeInternal;
extern db_query_server_detailDefaultTypeInternal _db_query_server_detail_default_instance_;
class db_server_detail;
class db_server_detailDefaultTypeInternal;
extern db_server_detailDefaultTypeInternal _db_server_detail_default_instance_;
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> ::NFMsg::db_query_server* Arena::CreateMaybeMessage<::NFMsg::db_query_server>(Arena*);
template<> ::NFMsg::db_query_server_detail* Arena::CreateMaybeMessage<::NFMsg::db_query_server_detail>(Arena*);
template<> ::NFMsg::db_server_detail* Arena::CreateMaybeMessage<::NFMsg::db_server_detail>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace NFMsg {

// ===================================================================

class db_query_server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.db_query_server) */ {
 public:
  db_query_server();
  virtual ~db_query_server();

  db_query_server(const db_query_server& from);

  inline db_query_server& operator=(const db_query_server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  db_query_server(db_query_server&& from) noexcept
    : db_query_server() {
    *this = ::std::move(from);
  }

  inline db_query_server& operator=(db_query_server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const db_query_server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const db_query_server* internal_default_instance() {
    return reinterpret_cast<const db_query_server*>(
               &_db_query_server_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(db_query_server* other);
  friend void swap(db_query_server& a, db_query_server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline db_query_server* New() const final {
    return CreateMaybeMessage<db_query_server>(NULL);
  }

  db_query_server* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<db_query_server>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const db_query_server& from);
  void MergeFrom(const db_query_server& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(db_query_server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dy_server = 1;
  void clear_dy_server();
  static const int kDyServerFieldNumber = 1;
  const ::std::string& dy_server() const;
  void set_dy_server(const ::std::string& value);
  #if LANG_CXX11
  void set_dy_server(::std::string&& value);
  #endif
  void set_dy_server(const char* value);
  void set_dy_server(const char* value, size_t size);
  ::std::string* mutable_dy_server();
  ::std::string* release_dy_server();
  void set_allocated_dy_server(::std::string* dy_server);

  // .NFMsg.ServerInfoReport db_fields = 2;
  bool has_db_fields() const;
  void clear_db_fields();
  static const int kDbFieldsFieldNumber = 2;
  private:
  const ::NFMsg::ServerInfoReport& _internal_db_fields() const;
  public:
  const ::NFMsg::ServerInfoReport& db_fields() const;
  ::NFMsg::ServerInfoReport* release_db_fields();
  ::NFMsg::ServerInfoReport* mutable_db_fields();
  void set_allocated_db_fields(::NFMsg::ServerInfoReport* db_fields);

  // @@protoc_insertion_point(class_scope:NFMsg.db_query_server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dy_server_;
  ::NFMsg::ServerInfoReport* db_fields_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_db_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class db_server_detail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.db_server_detail) */ {
 public:
  db_server_detail();
  virtual ~db_server_detail();

  db_server_detail(const db_server_detail& from);

  inline db_server_detail& operator=(const db_server_detail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  db_server_detail(db_server_detail&& from) noexcept
    : db_server_detail() {
    *this = ::std::move(from);
  }

  inline db_server_detail& operator=(db_server_detail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const db_server_detail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const db_server_detail* internal_default_instance() {
    return reinterpret_cast<const db_server_detail*>(
               &_db_server_detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(db_server_detail* other);
  friend void swap(db_server_detail& a, db_server_detail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline db_server_detail* New() const final {
    return CreateMaybeMessage<db_server_detail>(NULL);
  }

  db_server_detail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<db_server_detail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const db_server_detail& from);
  void MergeFrom(const db_server_detail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(db_server_detail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 server_id = 2;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // int32 server_cur_online = 3;
  void clear_server_cur_online();
  static const int kServerCurOnlineFieldNumber = 3;
  ::google::protobuf::int32 server_cur_online() const;
  void set_server_cur_online(::google::protobuf::int32 value);

  // uint32 server_state = 4;
  void clear_server_state();
  static const int kServerStateFieldNumber = 4;
  ::google::protobuf::uint32 server_state() const;
  void set_server_state(::google::protobuf::uint32 value);

  // uint64 total_mem = 5;
  void clear_total_mem();
  static const int kTotalMemFieldNumber = 5;
  ::google::protobuf::uint64 total_mem() const;
  void set_total_mem(::google::protobuf::uint64 value);

  // uint64 free_mem = 6;
  void clear_free_mem();
  static const int kFreeMemFieldNumber = 6;
  ::google::protobuf::uint64 free_mem() const;
  void set_free_mem(::google::protobuf::uint64 value);

  // uint64 used_mem = 7;
  void clear_used_mem();
  static const int kUsedMemFieldNumber = 7;
  ::google::protobuf::uint64 used_mem() const;
  void set_used_mem(::google::protobuf::uint64 value);

  // double proc_cpu = 8;
  void clear_proc_cpu();
  static const int kProcCpuFieldNumber = 8;
  double proc_cpu() const;
  void set_proc_cpu(double value);

  // uint64 proc_mem = 9;
  void clear_proc_mem();
  static const int kProcMemFieldNumber = 9;
  ::google::protobuf::uint64 proc_mem() const;
  void set_proc_mem(::google::protobuf::uint64 value);

  // uint32 proc_thread = 10;
  void clear_proc_thread();
  static const int kProcThreadFieldNumber = 10;
  ::google::protobuf::uint32 proc_thread() const;
  void set_proc_thread(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.db_server_detail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 server_cur_online_;
  ::google::protobuf::uint32 server_state_;
  ::google::protobuf::uint64 total_mem_;
  ::google::protobuf::uint64 free_mem_;
  ::google::protobuf::uint64 used_mem_;
  double proc_cpu_;
  ::google::protobuf::uint64 proc_mem_;
  ::google::protobuf::uint32 proc_thread_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_db_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class db_query_server_detail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.db_query_server_detail) */ {
 public:
  db_query_server_detail();
  virtual ~db_query_server_detail();

  db_query_server_detail(const db_query_server_detail& from);

  inline db_query_server_detail& operator=(const db_query_server_detail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  db_query_server_detail(db_query_server_detail&& from) noexcept
    : db_query_server_detail() {
    *this = ::std::move(from);
  }

  inline db_query_server_detail& operator=(db_query_server_detail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const db_query_server_detail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const db_query_server_detail* internal_default_instance() {
    return reinterpret_cast<const db_query_server_detail*>(
               &_db_query_server_detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(db_query_server_detail* other);
  friend void swap(db_query_server_detail& a, db_query_server_detail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline db_query_server_detail* New() const final {
    return CreateMaybeMessage<db_query_server_detail>(NULL);
  }

  db_query_server_detail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<db_query_server_detail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const db_query_server_detail& from);
  void MergeFrom(const db_query_server_detail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(db_query_server_detail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dy_server = 1;
  void clear_dy_server();
  static const int kDyServerFieldNumber = 1;
  const ::std::string& dy_server() const;
  void set_dy_server(const ::std::string& value);
  #if LANG_CXX11
  void set_dy_server(::std::string&& value);
  #endif
  void set_dy_server(const char* value);
  void set_dy_server(const char* value, size_t size);
  ::std::string* mutable_dy_server();
  ::std::string* release_dy_server();
  void set_allocated_dy_server(::std::string* dy_server);

  // .NFMsg.db_server_detail db_fields = 2;
  bool has_db_fields() const;
  void clear_db_fields();
  static const int kDbFieldsFieldNumber = 2;
  private:
  const ::NFMsg::db_server_detail& _internal_db_fields() const;
  public:
  const ::NFMsg::db_server_detail& db_fields() const;
  ::NFMsg::db_server_detail* release_db_fields();
  ::NFMsg::db_server_detail* mutable_db_fields();
  void set_allocated_db_fields(::NFMsg::db_server_detail* db_fields);

  // @@protoc_insertion_point(class_scope:NFMsg.db_query_server_detail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dy_server_;
  ::NFMsg::db_server_detail* db_fields_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_db_5fserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// db_query_server

// string dy_server = 1;
inline void db_query_server::clear_dy_server() {
  dy_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& db_query_server::dy_server() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_query_server.dy_server)
  return dy_server_.GetNoArena();
}
inline void db_query_server::set_dy_server(const ::std::string& value) {
  
  dy_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.db_query_server.dy_server)
}
#if LANG_CXX11
inline void db_query_server::set_dy_server(::std::string&& value) {
  
  dy_server_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.db_query_server.dy_server)
}
#endif
inline void db_query_server::set_dy_server(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dy_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.db_query_server.dy_server)
}
inline void db_query_server::set_dy_server(const char* value, size_t size) {
  
  dy_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.db_query_server.dy_server)
}
inline ::std::string* db_query_server::mutable_dy_server() {
  
  // @@protoc_insertion_point(field_mutable:NFMsg.db_query_server.dy_server)
  return dy_server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* db_query_server::release_dy_server() {
  // @@protoc_insertion_point(field_release:NFMsg.db_query_server.dy_server)
  
  return dy_server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void db_query_server::set_allocated_dy_server(::std::string* dy_server) {
  if (dy_server != NULL) {
    
  } else {
    
  }
  dy_server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dy_server);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.db_query_server.dy_server)
}

// .NFMsg.ServerInfoReport db_fields = 2;
inline bool db_query_server::has_db_fields() const {
  return this != internal_default_instance() && db_fields_ != NULL;
}
inline const ::NFMsg::ServerInfoReport& db_query_server::_internal_db_fields() const {
  return *db_fields_;
}
inline const ::NFMsg::ServerInfoReport& db_query_server::db_fields() const {
  const ::NFMsg::ServerInfoReport* p = db_fields_;
  // @@protoc_insertion_point(field_get:NFMsg.db_query_server.db_fields)
  return p != NULL ? *p : *reinterpret_cast<const ::NFMsg::ServerInfoReport*>(
      &::NFMsg::_ServerInfoReport_default_instance_);
}
inline ::NFMsg::ServerInfoReport* db_query_server::release_db_fields() {
  // @@protoc_insertion_point(field_release:NFMsg.db_query_server.db_fields)
  
  ::NFMsg::ServerInfoReport* temp = db_fields_;
  db_fields_ = NULL;
  return temp;
}
inline ::NFMsg::ServerInfoReport* db_query_server::mutable_db_fields() {
  
  if (db_fields_ == NULL) {
    auto* p = CreateMaybeMessage<::NFMsg::ServerInfoReport>(GetArenaNoVirtual());
    db_fields_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NFMsg.db_query_server.db_fields)
  return db_fields_;
}
inline void db_query_server::set_allocated_db_fields(::NFMsg::ServerInfoReport* db_fields) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(db_fields_);
  }
  if (db_fields) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      db_fields = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, db_fields, submessage_arena);
    }
    
  } else {
    
  }
  db_fields_ = db_fields;
  // @@protoc_insertion_point(field_set_allocated:NFMsg.db_query_server.db_fields)
}

// -------------------------------------------------------------------

// db_server_detail

// int32 id = 1;
inline void db_server_detail::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 db_server_detail::id() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.id)
  return id_;
}
inline void db_server_detail::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.id)
}

// int32 server_id = 2;
inline void db_server_detail::clear_server_id() {
  server_id_ = 0;
}
inline ::google::protobuf::int32 db_server_detail::server_id() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.server_id)
  return server_id_;
}
inline void db_server_detail::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.server_id)
}

// int32 server_cur_online = 3;
inline void db_server_detail::clear_server_cur_online() {
  server_cur_online_ = 0;
}
inline ::google::protobuf::int32 db_server_detail::server_cur_online() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.server_cur_online)
  return server_cur_online_;
}
inline void db_server_detail::set_server_cur_online(::google::protobuf::int32 value) {
  
  server_cur_online_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.server_cur_online)
}

// uint32 server_state = 4;
inline void db_server_detail::clear_server_state() {
  server_state_ = 0u;
}
inline ::google::protobuf::uint32 db_server_detail::server_state() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.server_state)
  return server_state_;
}
inline void db_server_detail::set_server_state(::google::protobuf::uint32 value) {
  
  server_state_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.server_state)
}

// uint64 total_mem = 5;
inline void db_server_detail::clear_total_mem() {
  total_mem_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 db_server_detail::total_mem() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.total_mem)
  return total_mem_;
}
inline void db_server_detail::set_total_mem(::google::protobuf::uint64 value) {
  
  total_mem_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.total_mem)
}

// uint64 free_mem = 6;
inline void db_server_detail::clear_free_mem() {
  free_mem_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 db_server_detail::free_mem() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.free_mem)
  return free_mem_;
}
inline void db_server_detail::set_free_mem(::google::protobuf::uint64 value) {
  
  free_mem_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.free_mem)
}

// uint64 used_mem = 7;
inline void db_server_detail::clear_used_mem() {
  used_mem_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 db_server_detail::used_mem() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.used_mem)
  return used_mem_;
}
inline void db_server_detail::set_used_mem(::google::protobuf::uint64 value) {
  
  used_mem_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.used_mem)
}

// double proc_cpu = 8;
inline void db_server_detail::clear_proc_cpu() {
  proc_cpu_ = 0;
}
inline double db_server_detail::proc_cpu() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.proc_cpu)
  return proc_cpu_;
}
inline void db_server_detail::set_proc_cpu(double value) {
  
  proc_cpu_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.proc_cpu)
}

// uint64 proc_mem = 9;
inline void db_server_detail::clear_proc_mem() {
  proc_mem_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 db_server_detail::proc_mem() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.proc_mem)
  return proc_mem_;
}
inline void db_server_detail::set_proc_mem(::google::protobuf::uint64 value) {
  
  proc_mem_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.proc_mem)
}

// uint32 proc_thread = 10;
inline void db_server_detail::clear_proc_thread() {
  proc_thread_ = 0u;
}
inline ::google::protobuf::uint32 db_server_detail::proc_thread() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_server_detail.proc_thread)
  return proc_thread_;
}
inline void db_server_detail::set_proc_thread(::google::protobuf::uint32 value) {
  
  proc_thread_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.db_server_detail.proc_thread)
}

// -------------------------------------------------------------------

// db_query_server_detail

// string dy_server = 1;
inline void db_query_server_detail::clear_dy_server() {
  dy_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& db_query_server_detail::dy_server() const {
  // @@protoc_insertion_point(field_get:NFMsg.db_query_server_detail.dy_server)
  return dy_server_.GetNoArena();
}
inline void db_query_server_detail::set_dy_server(const ::std::string& value) {
  
  dy_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.db_query_server_detail.dy_server)
}
#if LANG_CXX11
inline void db_query_server_detail::set_dy_server(::std::string&& value) {
  
  dy_server_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.db_query_server_detail.dy_server)
}
#endif
inline void db_query_server_detail::set_dy_server(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dy_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.db_query_server_detail.dy_server)
}
inline void db_query_server_detail::set_dy_server(const char* value, size_t size) {
  
  dy_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.db_query_server_detail.dy_server)
}
inline ::std::string* db_query_server_detail::mutable_dy_server() {
  
  // @@protoc_insertion_point(field_mutable:NFMsg.db_query_server_detail.dy_server)
  return dy_server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* db_query_server_detail::release_dy_server() {
  // @@protoc_insertion_point(field_release:NFMsg.db_query_server_detail.dy_server)
  
  return dy_server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void db_query_server_detail::set_allocated_dy_server(::std::string* dy_server) {
  if (dy_server != NULL) {
    
  } else {
    
  }
  dy_server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dy_server);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.db_query_server_detail.dy_server)
}

// .NFMsg.db_server_detail db_fields = 2;
inline bool db_query_server_detail::has_db_fields() const {
  return this != internal_default_instance() && db_fields_ != NULL;
}
inline void db_query_server_detail::clear_db_fields() {
  if (GetArenaNoVirtual() == NULL && db_fields_ != NULL) {
    delete db_fields_;
  }
  db_fields_ = NULL;
}
inline const ::NFMsg::db_server_detail& db_query_server_detail::_internal_db_fields() const {
  return *db_fields_;
}
inline const ::NFMsg::db_server_detail& db_query_server_detail::db_fields() const {
  const ::NFMsg::db_server_detail* p = db_fields_;
  // @@protoc_insertion_point(field_get:NFMsg.db_query_server_detail.db_fields)
  return p != NULL ? *p : *reinterpret_cast<const ::NFMsg::db_server_detail*>(
      &::NFMsg::_db_server_detail_default_instance_);
}
inline ::NFMsg::db_server_detail* db_query_server_detail::release_db_fields() {
  // @@protoc_insertion_point(field_release:NFMsg.db_query_server_detail.db_fields)
  
  ::NFMsg::db_server_detail* temp = db_fields_;
  db_fields_ = NULL;
  return temp;
}
inline ::NFMsg::db_server_detail* db_query_server_detail::mutable_db_fields() {
  
  if (db_fields_ == NULL) {
    auto* p = CreateMaybeMessage<::NFMsg::db_server_detail>(GetArenaNoVirtual());
    db_fields_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NFMsg.db_query_server_detail.db_fields)
  return db_fields_;
}
inline void db_query_server_detail::set_allocated_db_fields(::NFMsg::db_server_detail* db_fields) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete db_fields_;
  }
  if (db_fields) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      db_fields = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, db_fields, submessage_arena);
    }
    
  } else {
    
  }
  db_fields_ = db_fields;
  // @@protoc_insertion_point(field_set_allocated:NFMsg.db_query_server_detail.db_fields)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NFMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_db_5fserver_2eproto
