// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_human.proto

#include "msg_human.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_st_5fhuman_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_givemoneyrecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_goodsinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_mailinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_noticeinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_playerinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_agencyinfo;
}  // namespace protobuf_st_5fhuman_2eproto
namespace NFMsg {
class cgaccountloginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgaccountlogin>
      _instance;
} _cgaccountlogin_default_instance_;
class gcaccountloginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcaccountlogin>
      _instance;
} _gcaccountlogin_default_instance_;
class cggetplayerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cggetplayerinfo>
      _instance;
} _cggetplayerinfo_default_instance_;
class gcgetplayerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcgetplayerinfo>
      _instance;
} _gcgetplayerinfo_default_instance_;
class cgreconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgreconnect>
      _instance;
} _cgreconnect_default_instance_;
class gcreconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcreconnect>
      _instance;
} _gcreconnect_default_instance_;
class gckitplayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gckitplayer>
      _instance;
} _gckitplayer_default_instance_;
class gcnoticeinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcnoticeinfo>
      _instance;
} _gcnoticeinfo_default_instance_;
class cgheartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgheartbeat>
      _instance;
} _cgheartbeat_default_instance_;
class gcheartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcheartbeat>
      _instance;
} _gcheartbeat_default_instance_;
class cggetinitinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cggetinitinfo>
      _instance;
} _cggetinitinfo_default_instance_;
class gcgetinitinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcgetinitinfo>
      _instance;
} _gcgetinitinfo_default_instance_;
class gcbroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcbroadcast>
      _instance;
} _gcbroadcast_default_instance_;
class cggetmaillistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cggetmaillist>
      _instance;
} _cggetmaillist_default_instance_;
class gcgetmaillistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcgetmaillist>
      _instance;
} _gcgetmaillist_default_instance_;
class cgreadmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgreadmail>
      _instance;
} _cgreadmail_default_instance_;
class gcreadmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcreadmail>
      _instance;
} _gcreadmail_default_instance_;
class cggetmailgoodsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cggetmailgoods>
      _instance;
} _cggetmailgoods_default_instance_;
class gcgetmailgoodsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcgetmailgoods>
      _instance;
} _gcgetmailgoods_default_instance_;
class cgdeletemailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgdeletemail>
      _instance;
} _cgdeletemail_default_instance_;
class gcdeletemailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcdeletemail>
      _instance;
} _gcdeletemail_default_instance_;
class cgplayerstatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgplayerstatus>
      _instance;
} _cgplayerstatus_default_instance_;
class gcplayerstatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcplayerstatus>
      _instance;
} _gcplayerstatus_default_instance_;
class cgupdateplayerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgupdateplayerinfo>
      _instance;
} _cgupdateplayerinfo_default_instance_;
class gcupdateplayerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcupdateplayerinfo>
      _instance;
} _gcupdateplayerinfo_default_instance_;
class gcupdategoodslistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcupdategoodslist>
      _instance;
} _gcupdategoodslist_default_instance_;
class cgagencyoptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgagencyopt>
      _instance;
} _cgagencyopt_default_instance_;
class gcagencyoptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcagencyopt>
      _instance;
} _gcagencyopt_default_instance_;
class cgentertableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgentertable>
      _instance;
} _cgentertable_default_instance_;
class gcentertableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcentertable>
      _instance;
} _gcentertable_default_instance_;
class cggetagencyinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cggetagencyinfo>
      _instance;
} _cggetagencyinfo_default_instance_;
class gcgetagencyinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcgetagencyinfo>
      _instance;
} _gcgetagencyinfo_default_instance_;
class cginvitebindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cginvitebind>
      _instance;
} _cginvitebind_default_instance_;
class gcinvitebindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcinvitebind>
      _instance;
} _gcinvitebind_default_instance_;
class cggivemoneyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cggivemoney>
      _instance;
} _cggivemoney_default_instance_;
class gcgivemoneyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcgivemoney>
      _instance;
} _gcgivemoney_default_instance_;
class cgapplygroupmasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgapplygroupmaster>
      _instance;
} _cgapplygroupmaster_default_instance_;
class gcapplygroupmasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcapplygroupmaster>
      _instance;
} _gcapplygroupmaster_default_instance_;
class cggivemoneyrecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cggivemoneyrecord>
      _instance;
} _cggivemoneyrecord_default_instance_;
class gcgivemoneyrecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcgivemoneyrecord>
      _instance;
} _gcgivemoneyrecord_default_instance_;
class cgregistrationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgregistration>
      _instance;
} _cgregistration_default_instance_;
class gcregistrationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcregistration>
      _instance;
} _gcregistration_default_instance_;
class cgluckturntableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgluckturntable>
      _instance;
} _cgluckturntable_default_instance_;
class gcluckturntableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcluckturntable>
      _instance;
} _gcluckturntable_default_instance_;
class cgupdateplayermoneyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgupdateplayermoney>
      _instance;
} _cgupdateplayermoney_default_instance_;
class gcupdateplayermoneyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcupdateplayermoney>
      _instance;
} _gcupdateplayermoney_default_instance_;
class cgaltersomeplayerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgaltersomeplayerinfo>
      _instance;
} _cgaltersomeplayerinfo_default_instance_;
class gcaltersomeplayerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcaltersomeplayerinfo>
      _instance;
} _gcaltersomeplayerinfo_default_instance_;
}  // namespace NFMsg
namespace protobuf_msg_5fhuman_2eproto {
static void InitDefaultscgaccountlogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgaccountlogin_default_instance_;
    new (ptr) ::NFMsg::cgaccountlogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgaccountlogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgaccountlogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgaccountlogin}, {}};

static void InitDefaultsgcaccountlogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcaccountlogin_default_instance_;
    new (ptr) ::NFMsg::gcaccountlogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcaccountlogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcaccountlogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcaccountlogin}, {
      &protobuf_st_5fhuman_2eproto::scc_info_playerinfo.base,}};

static void InitDefaultscggetplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cggetplayerinfo_default_instance_;
    new (ptr) ::NFMsg::cggetplayerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cggetplayerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cggetplayerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscggetplayerinfo}, {}};

static void InitDefaultsgcgetplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcgetplayerinfo_default_instance_;
    new (ptr) ::NFMsg::gcgetplayerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcgetplayerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcgetplayerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcgetplayerinfo}, {
      &protobuf_st_5fhuman_2eproto::scc_info_playerinfo.base,}};

static void InitDefaultscgreconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgreconnect_default_instance_;
    new (ptr) ::NFMsg::cgreconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgreconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgreconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgreconnect}, {}};

static void InitDefaultsgcreconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcreconnect_default_instance_;
    new (ptr) ::NFMsg::gcreconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcreconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcreconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcreconnect}, {}};

static void InitDefaultsgckitplayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gckitplayer_default_instance_;
    new (ptr) ::NFMsg::gckitplayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gckitplayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gckitplayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgckitplayer}, {}};

static void InitDefaultsgcnoticeinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcnoticeinfo_default_instance_;
    new (ptr) ::NFMsg::gcnoticeinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcnoticeinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcnoticeinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcnoticeinfo}, {
      &protobuf_st_5fhuman_2eproto::scc_info_noticeinfo.base,}};

static void InitDefaultscgheartbeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgheartbeat_default_instance_;
    new (ptr) ::NFMsg::cgheartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgheartbeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgheartbeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgheartbeat}, {}};

static void InitDefaultsgcheartbeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcheartbeat_default_instance_;
    new (ptr) ::NFMsg::gcheartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcheartbeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcheartbeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcheartbeat}, {}};

static void InitDefaultscggetinitinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cggetinitinfo_default_instance_;
    new (ptr) ::NFMsg::cggetinitinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cggetinitinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cggetinitinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscggetinitinfo}, {}};

static void InitDefaultsgcgetinitinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcgetinitinfo_default_instance_;
    new (ptr) ::NFMsg::gcgetinitinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcgetinitinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcgetinitinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcgetinitinfo}, {}};

static void InitDefaultsgcbroadcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcbroadcast_default_instance_;
    new (ptr) ::NFMsg::gcbroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcbroadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcbroadcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcbroadcast}, {}};

static void InitDefaultscggetmaillist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cggetmaillist_default_instance_;
    new (ptr) ::NFMsg::cggetmaillist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cggetmaillist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cggetmaillist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscggetmaillist}, {}};

static void InitDefaultsgcgetmaillist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcgetmaillist_default_instance_;
    new (ptr) ::NFMsg::gcgetmaillist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcgetmaillist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcgetmaillist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcgetmaillist}, {
      &protobuf_st_5fhuman_2eproto::scc_info_mailinfo.base,}};

static void InitDefaultscgreadmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgreadmail_default_instance_;
    new (ptr) ::NFMsg::cgreadmail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgreadmail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgreadmail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgreadmail}, {}};

static void InitDefaultsgcreadmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcreadmail_default_instance_;
    new (ptr) ::NFMsg::gcreadmail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcreadmail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcreadmail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcreadmail}, {}};

static void InitDefaultscggetmailgoods() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cggetmailgoods_default_instance_;
    new (ptr) ::NFMsg::cggetmailgoods();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cggetmailgoods::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cggetmailgoods =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscggetmailgoods}, {}};

static void InitDefaultsgcgetmailgoods() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcgetmailgoods_default_instance_;
    new (ptr) ::NFMsg::gcgetmailgoods();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcgetmailgoods::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcgetmailgoods =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcgetmailgoods}, {
      &protobuf_st_5fhuman_2eproto::scc_info_goodsinfo.base,}};

static void InitDefaultscgdeletemail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgdeletemail_default_instance_;
    new (ptr) ::NFMsg::cgdeletemail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgdeletemail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgdeletemail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgdeletemail}, {}};

static void InitDefaultsgcdeletemail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcdeletemail_default_instance_;
    new (ptr) ::NFMsg::gcdeletemail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcdeletemail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcdeletemail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcdeletemail}, {}};

static void InitDefaultscgplayerstatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgplayerstatus_default_instance_;
    new (ptr) ::NFMsg::cgplayerstatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgplayerstatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgplayerstatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgplayerstatus}, {}};

static void InitDefaultsgcplayerstatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcplayerstatus_default_instance_;
    new (ptr) ::NFMsg::gcplayerstatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcplayerstatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcplayerstatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcplayerstatus}, {}};

static void InitDefaultscgupdateplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgupdateplayerinfo_default_instance_;
    new (ptr) ::NFMsg::cgupdateplayerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgupdateplayerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgupdateplayerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgupdateplayerinfo}, {}};

static void InitDefaultsgcupdateplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcupdateplayerinfo_default_instance_;
    new (ptr) ::NFMsg::gcupdateplayerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcupdateplayerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcupdateplayerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcupdateplayerinfo}, {}};

static void InitDefaultsgcupdategoodslist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcupdategoodslist_default_instance_;
    new (ptr) ::NFMsg::gcupdategoodslist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcupdategoodslist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcupdategoodslist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcupdategoodslist}, {}};

static void InitDefaultscgagencyopt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgagencyopt_default_instance_;
    new (ptr) ::NFMsg::cgagencyopt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgagencyopt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgagencyopt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgagencyopt}, {}};

static void InitDefaultsgcagencyopt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcagencyopt_default_instance_;
    new (ptr) ::NFMsg::gcagencyopt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcagencyopt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcagencyopt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcagencyopt}, {}};

static void InitDefaultscgentertable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgentertable_default_instance_;
    new (ptr) ::NFMsg::cgentertable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgentertable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgentertable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgentertable}, {}};

static void InitDefaultsgcentertable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcentertable_default_instance_;
    new (ptr) ::NFMsg::gcentertable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcentertable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcentertable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcentertable}, {}};

static void InitDefaultscggetagencyinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cggetagencyinfo_default_instance_;
    new (ptr) ::NFMsg::cggetagencyinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cggetagencyinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cggetagencyinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscggetagencyinfo}, {}};

static void InitDefaultsgcgetagencyinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcgetagencyinfo_default_instance_;
    new (ptr) ::NFMsg::gcgetagencyinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcgetagencyinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcgetagencyinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcgetagencyinfo}, {
      &protobuf_st_5fhuman_2eproto::scc_info_agencyinfo.base,}};

static void InitDefaultscginvitebind() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cginvitebind_default_instance_;
    new (ptr) ::NFMsg::cginvitebind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cginvitebind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cginvitebind =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscginvitebind}, {}};

static void InitDefaultsgcinvitebind() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcinvitebind_default_instance_;
    new (ptr) ::NFMsg::gcinvitebind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcinvitebind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcinvitebind =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcinvitebind}, {
      &protobuf_st_5fhuman_2eproto::scc_info_agencyinfo.base,}};

static void InitDefaultscggivemoney() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cggivemoney_default_instance_;
    new (ptr) ::NFMsg::cggivemoney();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cggivemoney::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cggivemoney =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscggivemoney}, {}};

static void InitDefaultsgcgivemoney() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcgivemoney_default_instance_;
    new (ptr) ::NFMsg::gcgivemoney();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcgivemoney::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcgivemoney =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcgivemoney}, {
      &protobuf_st_5fhuman_2eproto::scc_info_givemoneyrecord.base,}};

static void InitDefaultscgapplygroupmaster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgapplygroupmaster_default_instance_;
    new (ptr) ::NFMsg::cgapplygroupmaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgapplygroupmaster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgapplygroupmaster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgapplygroupmaster}, {}};

static void InitDefaultsgcapplygroupmaster() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcapplygroupmaster_default_instance_;
    new (ptr) ::NFMsg::gcapplygroupmaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcapplygroupmaster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcapplygroupmaster =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcapplygroupmaster}, {}};

static void InitDefaultscggivemoneyrecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cggivemoneyrecord_default_instance_;
    new (ptr) ::NFMsg::cggivemoneyrecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cggivemoneyrecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cggivemoneyrecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscggivemoneyrecord}, {}};

static void InitDefaultsgcgivemoneyrecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcgivemoneyrecord_default_instance_;
    new (ptr) ::NFMsg::gcgivemoneyrecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcgivemoneyrecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcgivemoneyrecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcgivemoneyrecord}, {
      &protobuf_st_5fhuman_2eproto::scc_info_givemoneyrecord.base,}};

static void InitDefaultscgregistration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgregistration_default_instance_;
    new (ptr) ::NFMsg::cgregistration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgregistration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgregistration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgregistration}, {}};

static void InitDefaultsgcregistration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcregistration_default_instance_;
    new (ptr) ::NFMsg::gcregistration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcregistration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcregistration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcregistration}, {}};

static void InitDefaultscgluckturntable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgluckturntable_default_instance_;
    new (ptr) ::NFMsg::cgluckturntable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgluckturntable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgluckturntable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgluckturntable}, {}};

static void InitDefaultsgcluckturntable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcluckturntable_default_instance_;
    new (ptr) ::NFMsg::gcluckturntable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcluckturntable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcluckturntable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcluckturntable}, {}};

static void InitDefaultscgupdateplayermoney() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgupdateplayermoney_default_instance_;
    new (ptr) ::NFMsg::cgupdateplayermoney();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgupdateplayermoney::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgupdateplayermoney =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgupdateplayermoney}, {}};

static void InitDefaultsgcupdateplayermoney() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcupdateplayermoney_default_instance_;
    new (ptr) ::NFMsg::gcupdateplayermoney();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcupdateplayermoney::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcupdateplayermoney =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcupdateplayermoney}, {}};

static void InitDefaultscgaltersomeplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgaltersomeplayerinfo_default_instance_;
    new (ptr) ::NFMsg::cgaltersomeplayerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgaltersomeplayerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgaltersomeplayerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgaltersomeplayerinfo}, {}};

static void InitDefaultsgcaltersomeplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcaltersomeplayerinfo_default_instance_;
    new (ptr) ::NFMsg::gcaltersomeplayerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcaltersomeplayerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcaltersomeplayerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcaltersomeplayerinfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_cgaccountlogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcaccountlogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cggetplayerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcgetplayerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgreconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcreconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gckitplayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcnoticeinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgheartbeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcheartbeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cggetinitinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcgetinitinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcbroadcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cggetmaillist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcgetmaillist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgreadmail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcreadmail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cggetmailgoods.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcgetmailgoods.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgdeletemail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcdeletemail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgplayerstatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcplayerstatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgupdateplayerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcupdateplayerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcupdategoodslist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgagencyopt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcagencyopt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgentertable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcentertable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cggetagencyinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcgetagencyinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cginvitebind.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcinvitebind.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cggivemoney.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcgivemoney.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgapplygroupmaster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcapplygroupmaster.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cggivemoneyrecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcgivemoneyrecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgregistration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcregistration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgluckturntable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcluckturntable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgupdateplayermoney.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcupdateplayermoney.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgaltersomeplayerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcaltersomeplayerinfo.base);
}

::google::protobuf::Metadata file_level_metadata[48];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, devname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, macname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, mobileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, phonenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, inviterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, bindtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, pushtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, platformid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, bindnick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, mobiletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, sex_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  13,
  9,
  14,
  15,
  16,
  10,
  11,
  12,
  17,
  18,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, pinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, tableid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, systime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, tabletype_),
  1,
  0,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetplayerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetplayerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetplayerinfo, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetplayerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetplayerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetplayerinfo, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetplayerinfo, pinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreconnect, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, msgbegin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, tableid_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, kittype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, msg_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcnoticeinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcnoticeinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcnoticeinfo, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcnoticeinfo, noticelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcnoticeinfo, friendslist_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgheartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgheartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgheartbeat, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcheartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcheartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcheartbeat, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetinitinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetinitinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetinitinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetinitinfo, channel_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, paytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, mdelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, paylist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, shoplist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetinitinfo, wechatlist_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcbroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcbroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcbroadcast, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcbroadcast, broadtypelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcbroadcast, senderidlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcbroadcast, senderlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcbroadcast, msglist_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmaillist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmaillist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmaillist, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmaillist, pagenum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmaillist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmaillist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmaillist, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmaillist, mlist_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreadmail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreadmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreadmail, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreadmail, mailid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreadmail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreadmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreadmail, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreadmail, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreadmail, mailstate_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmailgoods, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmailgoods, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmailgoods, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetmailgoods, mailid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmailgoods, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmailgoods, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmailgoods, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmailgoods, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmailgoods, mailstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetmailgoods, getlist_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgdeletemail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgdeletemail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgdeletemail, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgdeletemail, mailid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcdeletemail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcdeletemail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcdeletemail, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcdeletemail, mailid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgplayerstatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgplayerstatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgplayerstatus, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgplayerstatus, status_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcplayerstatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcplayerstatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcplayerstatus, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcplayerstatus, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcplayerstatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcplayerstatus, timemark_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayerinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayerinfo, typelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayerinfo, valuelist_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayerinfo, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayerinfo, typelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayerinfo, valuelist_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdategoodslist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdategoodslist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdategoodslist, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdategoodslist, idlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdategoodslist, numlist_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgagencyopt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgagencyopt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgagencyopt, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgagencyopt, opttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgagencyopt, optstr_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcagencyopt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcagencyopt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcagencyopt, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcagencyopt, str_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, tableid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, password_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcentertable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcentertable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcentertable, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetagencyinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetagencyinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggetagencyinfo, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetagencyinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetagencyinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetagencyinfo, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgetagencyinfo, agyinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cginvitebind, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cginvitebind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cginvitebind, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cginvitebind, invitestr_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcinvitebind, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcinvitebind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcinvitebind, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcinvitebind, agyinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoney, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoney, touserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoney, amount_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoney, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoney, record_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgapplygroupmaster, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgapplygroupmaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgapplygroupmaster, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcapplygroupmaster, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcapplygroupmaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcapplygroupmaster, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoneyrecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoneyrecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoneyrecord, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cggivemoneyrecord, page_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoneyrecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoneyrecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoneyrecord, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcgivemoneyrecord, list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgregistration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgregistration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgregistration, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgregistration, optype_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcregistration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcregistration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcregistration, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcregistration, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcregistration, registration1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcregistration, registration2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcregistration, registration3_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgluckturntable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgluckturntable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgluckturntable, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgluckturntable, optype_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, turnresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, turntablenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, bsignin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, tengames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcluckturntable, todayshare_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayermoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayermoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgupdateplayermoney, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayermoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayermoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayermoney, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayermoney, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcupdateplayermoney, money_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaltersomeplayerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaltersomeplayerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaltersomeplayerinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaltersomeplayerinfo, optype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaltersomeplayerinfo, caninvite_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaltersomeplayerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaltersomeplayerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaltersomeplayerinfo, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaltersomeplayerinfo, userid_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 24, sizeof(::NFMsg::cgaccountlogin)},
  { 43, 53, sizeof(::NFMsg::gcaccountlogin)},
  { 58, 64, sizeof(::NFMsg::cggetplayerinfo)},
  { 65, 72, sizeof(::NFMsg::gcgetplayerinfo)},
  { 74, 80, sizeof(::NFMsg::cgreconnect)},
  { 81, 89, sizeof(::NFMsg::gcreconnect)},
  { 92, 100, sizeof(::NFMsg::gckitplayer)},
  { 103, 111, sizeof(::NFMsg::gcnoticeinfo)},
  { 114, 120, sizeof(::NFMsg::cgheartbeat)},
  { 121, 127, sizeof(::NFMsg::gcheartbeat)},
  { 128, 135, sizeof(::NFMsg::cggetinitinfo)},
  { 137, 148, sizeof(::NFMsg::gcgetinitinfo)},
  { 154, 164, sizeof(::NFMsg::gcbroadcast)},
  { 169, 176, sizeof(::NFMsg::cggetmaillist)},
  { 178, 185, sizeof(::NFMsg::gcgetmaillist)},
  { 187, 194, sizeof(::NFMsg::cgreadmail)},
  { 196, 204, sizeof(::NFMsg::gcreadmail)},
  { 207, 214, sizeof(::NFMsg::cggetmailgoods)},
  { 216, 225, sizeof(::NFMsg::gcgetmailgoods)},
  { 229, 236, sizeof(::NFMsg::cgdeletemail)},
  { 238, 245, sizeof(::NFMsg::gcdeletemail)},
  { 247, 254, sizeof(::NFMsg::cgplayerstatus)},
  { 256, 265, sizeof(::NFMsg::gcplayerstatus)},
  { 269, 277, sizeof(::NFMsg::cgupdateplayerinfo)},
  { 280, 288, sizeof(::NFMsg::gcupdateplayerinfo)},
  { 291, 299, sizeof(::NFMsg::gcupdategoodslist)},
  { 302, 310, sizeof(::NFMsg::cgagencyopt)},
  { 313, 320, sizeof(::NFMsg::gcagencyopt)},
  { 322, 330, sizeof(::NFMsg::cgentertable)},
  { 333, 339, sizeof(::NFMsg::gcentertable)},
  { 340, 346, sizeof(::NFMsg::cggetagencyinfo)},
  { 347, 354, sizeof(::NFMsg::gcgetagencyinfo)},
  { 356, 363, sizeof(::NFMsg::cginvitebind)},
  { 365, 372, sizeof(::NFMsg::gcinvitebind)},
  { 374, 382, sizeof(::NFMsg::cggivemoney)},
  { 385, 392, sizeof(::NFMsg::gcgivemoney)},
  { 394, 400, sizeof(::NFMsg::cgapplygroupmaster)},
  { 401, 407, sizeof(::NFMsg::gcapplygroupmaster)},
  { 408, 415, sizeof(::NFMsg::cggivemoneyrecord)},
  { 417, 424, sizeof(::NFMsg::gcgivemoneyrecord)},
  { 426, 433, sizeof(::NFMsg::cgregistration)},
  { 435, 445, sizeof(::NFMsg::gcregistration)},
  { 450, 457, sizeof(::NFMsg::cgluckturntable)},
  { 459, 471, sizeof(::NFMsg::gcluckturntable)},
  { 478, 484, sizeof(::NFMsg::cgupdateplayermoney)},
  { 485, 493, sizeof(::NFMsg::gcupdateplayermoney)},
  { 496, 504, sizeof(::NFMsg::cgaltersomeplayerinfo)},
  { 507, 514, sizeof(::NFMsg::gcaltersomeplayerinfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgaccountlogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcaccountlogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cggetplayerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcgetplayerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgreconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcreconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gckitplayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcnoticeinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgheartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcheartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cggetinitinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcgetinitinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcbroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cggetmaillist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcgetmaillist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgreadmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcreadmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cggetmailgoods_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcgetmailgoods_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgdeletemail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcdeletemail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgplayerstatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcplayerstatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgupdateplayerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcupdateplayerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcupdategoodslist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgagencyopt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcagencyopt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgentertable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcentertable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cggetagencyinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcgetagencyinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cginvitebind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcinvitebind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cggivemoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcgivemoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgapplygroupmaster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcapplygroupmaster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cggivemoneyrecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcgivemoneyrecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgregistration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcregistration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgluckturntable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcluckturntable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgupdateplayermoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcupdateplayermoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgaltersomeplayerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcaltersomeplayerinfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg_human.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 48);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017msg_human.proto\022\005NFMsg\032\016st_human.proto"
      "\032\rst_shop.proto\"\325\002\n\016cgaccountlogin\022\017\n\007ac"
      "count\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\014\n\004imei\030\004 "
      "\001(\t\022\020\n\010nickname\030\005 \001(\t\022\017\n\007devname\030\006 \001(\t\022\017"
      "\n\007macname\030\007 \001(\t\022\017\n\007channel\030\010 \001(\t\022\020\n\010prov"
      "ince\030\t \001(\t\022\014\n\004city\030\n \001(\t\022\020\n\010mobileid\030\013 \001"
      "(\005\022\020\n\010phonenum\030\014 \001(\t\022\021\n\tinviterid\030\r \001(\005\022"
      "\020\n\010bindtype\030\016 \001(\005\022\020\n\010pushtype\030\017 \001(\005\022\013\n\003c"
      "id\030\020 \001(\t\022\022\n\nplatformid\030\021 \001(\t\022\020\n\010bindnick"
      "\030\022 \001(\t\022\022\n\nmobiletype\030\023 \001(\005\022\013\n\003sex\030\024 \001(\005\""
      "w\n\016gcaccountlogin\022\016\n\006result\030\001 \001(\005\022 \n\005pin"
      "fo\030\002 \001(\0132\021.NFMsg.playerinfo\022\017\n\007tableid\030\003"
      " \001(\005\022\017\n\007systime\030\004 \001(\005\022\021\n\ttabletype\030\005 \001(\005"
      "\"!\n\017cggetplayerinfo\022\016\n\006userid\030\001 \001(\005\"C\n\017g"
      "cgetplayerinfo\022\016\n\006result\030\001 \001(\005\022 \n\005pinfo\030"
      "\002 \001(\0132\021.NFMsg.playerinfo\"\035\n\013cgreconnect\022"
      "\016\n\006userid\030\001 \001(\005\"@\n\013gcreconnect\022\016\n\006result"
      "\030\001 \001(\005\022\020\n\010msgbegin\030\002 \001(\t\022\017\n\007tableid\030\003 \001("
      "\005\";\n\013gckitplayer\022\016\n\006result\030\001 \001(\005\022\017\n\007kitt"
      "ype\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"Z\n\014gcnoticeinfo\022\016"
      "\n\006result\030\001 \001(\005\022%\n\nnoticelist\030\002 \003(\0132\021.NFM"
      "sg.noticeinfo\022\023\n\013friendslist\030\003 \003(\005\"\035\n\013cg"
      "heartbeat\022\016\n\006userid\030\001 \001(\005\"\035\n\013gcheartbeat"
      "\022\016\n\006result\030\001 \001(\005\"0\n\rcggetinitinfo\022\016\n\006use"
      "rid\030\001 \001(\005\022\017\n\007channel\030\002 \001(\t\"x\n\rgcgetiniti"
      "nfo\022\016\n\006result\030\001 \001(\005\022\017\n\007paytype\030\002 \003(\005\022\017\n\007"
      "mdelist\030\004 \003(\005\022\017\n\007paylist\030\005 \003(\005\022\020\n\010shopli"
      "st\030\006 \003(\005\022\022\n\nwechatlist\030\007 \003(\t\"o\n\013gcbroadc"
      "ast\022\016\n\006result\030\001 \001(\005\022\025\n\rbroadtypelist\030\002 \003"
      "(\005\022\024\n\014senderidlist\030\003 \003(\005\022\022\n\nsenderlist\030\004"
      " \003(\t\022\017\n\007msglist\030\005 \003(\t\"0\n\rcggetmaillist\022\016"
      "\n\006userid\030\001 \001(\005\022\017\n\007pagenum\030\002 \001(\005\"\?\n\rgcget"
      "maillist\022\016\n\006result\030\001 \001(\005\022\036\n\005mlist\030\003 \003(\0132"
      "\017.NFMsg.mailinfo\",\n\ncgreadmail\022\016\n\006userid"
      "\030\001 \001(\005\022\016\n\006mailid\030\002 \001(\005\"\?\n\ngcreadmail\022\016\n\006"
      "result\030\001 \001(\005\022\016\n\006mailid\030\002 \001(\005\022\021\n\tmailstat"
      "e\030\003 \001(\005\"0\n\016cggetmailgoods\022\016\n\006userid\030\001 \001("
      "\005\022\016\n\006mailid\030\002 \001(\005\"f\n\016gcgetmailgoods\022\016\n\006r"
      "esult\030\001 \001(\005\022\016\n\006mailid\030\002 \001(\005\022\021\n\tmailstate"
      "\030\003 \001(\005\022!\n\007getlist\030\004 \003(\0132\020.NFMsg.goodsinf"
      "o\".\n\014cgdeletemail\022\016\n\006userid\030\001 \001(\005\022\016\n\006mai"
      "lid\030\002 \001(\005\".\n\014gcdeletemail\022\016\n\006result\030\001 \001("
      "\005\022\016\n\006mailid\030\002 \001(\005\"0\n\016cgplayerstatus\022\016\n\006u"
      "serid\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\"R\n\016gcplayers"
      "tatus\022\016\n\006result\030\001 \001(\005\022\016\n\006userid\030\002 \001(\005\022\016\n"
      "\006status\030\003 \001(\005\022\020\n\010timemark\030\004 \001(\005\"I\n\022cgupd"
      "ateplayerinfo\022\016\n\006userid\030\001 \001(\005\022\020\n\010typelis"
      "t\030\002 \003(\t\022\021\n\tvaluelist\030\003 \003(\t\"I\n\022gcupdatepl"
      "ayerinfo\022\016\n\006result\030\001 \001(\005\022\020\n\010typelist\030\002 \003"
      "(\t\022\021\n\tvaluelist\030\003 \003(\t\"D\n\021gcupdategoodsli"
      "st\022\016\n\006result\030\001 \001(\005\022\016\n\006idlist\030\002 \003(\005\022\017\n\007nu"
      "mlist\030\003 \003(\005\">\n\013cgagencyopt\022\016\n\006userid\030\001 \001"
      "(\005\022\017\n\007opttype\030\002 \001(\005\022\016\n\006optstr\030\003 \001(\t\"*\n\013g"
      "cagencyopt\022\016\n\006result\030\001 \001(\005\022\013\n\003str\030\002 \001(\t\""
      "A\n\014cgentertable\022\016\n\006userid\030\001 \001(\005\022\017\n\007table"
      "id\030\002 \001(\005\022\020\n\010password\030\003 \001(\t\"\036\n\014gcentertab"
      "le\022\016\n\006result\030\001 \001(\005\"!\n\017cggetagencyinfo\022\016\n"
      "\006userid\030\001 \001(\005\"E\n\017gcgetagencyinfo\022\016\n\006resu"
      "lt\030\001 \001(\005\022\"\n\007agyinfo\030\002 \001(\0132\021.NFMsg.agency"
      "info\"1\n\014cginvitebind\022\016\n\006userid\030\001 \001(\005\022\021\n\t"
      "invitestr\030\002 \001(\t\"B\n\014gcinvitebind\022\016\n\006resul"
      "t\030\001 \001(\005\022\"\n\007agyinfo\030\002 \001(\0132\021.NFMsg.agencyi"
      "nfo\"\?\n\013cggivemoney\022\016\n\006userid\030\001 \001(\005\022\020\n\010to"
      "userid\030\002 \001(\005\022\016\n\006amount\030\003 \001(\005\"E\n\013gcgivemo"
      "ney\022\016\n\006result\030\001 \001(\005\022&\n\006record\030\002 \001(\0132\026.NF"
      "Msg.givemoneyrecord\"$\n\022cgapplygroupmaste"
      "r\022\016\n\006userid\030\001 \001(\005\"$\n\022gcapplygroupmaster\022"
      "\016\n\006result\030\001 \001(\005\"1\n\021cggivemoneyrecord\022\016\n\006"
      "userid\030\001 \001(\005\022\014\n\004page\030\002 \001(\005\"I\n\021gcgivemone"
      "yrecord\022\016\n\006result\030\001 \001(\005\022$\n\004list\030\002 \003(\0132\026."
      "NFMsg.givemoneyrecord\"0\n\016cgregistration\022"
      "\016\n\006userid\030\001 \001(\005\022\016\n\006optype\030\002 \001(\005\"u\n\016gcreg"
      "istration\022\016\n\006result\030\001 \001(\005\022\016\n\006userid\030\002 \001("
      "\005\022\025\n\rregistration1\030\003 \001(\t\022\025\n\rregistration"
      "2\030\004 \001(\t\022\025\n\rregistration3\030\005 \001(\t\"1\n\017cgluck"
      "turntable\022\016\n\006userid\030\001 \001(\005\022\016\n\006optype\030\002 \001("
      "\005\"\222\001\n\017gcluckturntable\022\016\n\006result\030\001 \001(\005\022\016\n"
      "\006userid\030\002 \001(\005\022\022\n\nturnresult\030\003 \001(\005\022\024\n\014tur"
      "ntablenum\030\004 \001(\005\022\017\n\007bsignin\030\005 \001(\005\022\020\n\010teng"
      "ames\030\006 \001(\005\022\022\n\ntodayshare\030\007 \001(\005\"%\n\023cgupda"
      "teplayermoney\022\016\n\006userid\030\001 \001(\005\"D\n\023gcupdat"
      "eplayermoney\022\016\n\006result\030\001 \001(\005\022\016\n\006userid\030\002"
      " \001(\005\022\r\n\005money\030\003 \001(\005\"J\n\025cgaltersomeplayer"
      "info\022\016\n\006userid\030\001 \001(\005\022\016\n\006optype\030\002 \001(\005\022\021\n\t"
      "caninvite\030\003 \001(\005\"7\n\025gcaltersomeplayerinfo"
      "\022\016\n\006result\030\001 \001(\005\022\016\n\006userid\030\002 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3432);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_human.proto", &protobuf_RegisterTypes);
  ::protobuf_st_5fhuman_2eproto::AddDescriptors();
  ::protobuf_st_5fshop_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_5fhuman_2eproto
namespace NFMsg {

// ===================================================================

void cgaccountlogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgaccountlogin::kAccountFieldNumber;
const int cgaccountlogin::kPasswordFieldNumber;
const int cgaccountlogin::kImeiFieldNumber;
const int cgaccountlogin::kNicknameFieldNumber;
const int cgaccountlogin::kDevnameFieldNumber;
const int cgaccountlogin::kMacnameFieldNumber;
const int cgaccountlogin::kChannelFieldNumber;
const int cgaccountlogin::kProvinceFieldNumber;
const int cgaccountlogin::kCityFieldNumber;
const int cgaccountlogin::kMobileidFieldNumber;
const int cgaccountlogin::kPhonenumFieldNumber;
const int cgaccountlogin::kInviteridFieldNumber;
const int cgaccountlogin::kBindtypeFieldNumber;
const int cgaccountlogin::kPushtypeFieldNumber;
const int cgaccountlogin::kCidFieldNumber;
const int cgaccountlogin::kPlatformidFieldNumber;
const int cgaccountlogin::kBindnickFieldNumber;
const int cgaccountlogin::kMobiletypeFieldNumber;
const int cgaccountlogin::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgaccountlogin::cgaccountlogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgaccountlogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgaccountlogin)
}
cgaccountlogin::cgaccountlogin(const cgaccountlogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devname()) {
    devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
  }
  macname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macname()) {
    macname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macname_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cid()) {
    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platformid()) {
    platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
  }
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bindnick()) {
    bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
  }
  ::memcpy(&mobileid_, &from.mobileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&mobileid_)) + sizeof(sex_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgaccountlogin)
}

void cgaccountlogin::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mobileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sex_) -
      reinterpret_cast<char*>(&mobileid_)) + sizeof(sex_));
}

cgaccountlogin::~cgaccountlogin() {
  // @@protoc_insertion_point(destructor:NFMsg.cgaccountlogin)
  SharedDtor();
}

void cgaccountlogin::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cgaccountlogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgaccountlogin::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgaccountlogin& cgaccountlogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgaccountlogin.base);
  return *internal_default_instance();
}


void cgaccountlogin::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      imei_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      devname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      macname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      channel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      province_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      city_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      phonenum_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      cid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      platformid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      bindnick_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 57344u) {
    ::memset(&mobileid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bindtype_) -
        reinterpret_cast<char*>(&mobileid_)) + sizeof(bindtype_));
  }
  if (cached_has_bits & 458752u) {
    ::memset(&pushtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sex_) -
        reinterpret_cast<char*>(&pushtype_)) + sizeof(sex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgaccountlogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgaccountlogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string devname = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devname().data(), static_cast<int>(this->devname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.devname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string macname = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macname().data(), static_cast<int>(this->macname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.macname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string province = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), static_cast<int>(this->province().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.city");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mobileid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_mobileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phonenum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenum().data(), static_cast<int>(this->phonenum().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.phonenum");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 inviterid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_inviterid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inviterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bindtype = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_bindtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bindtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pushtype = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_pushtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cid = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cid().data(), static_cast<int>(this->cid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.cid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string platformid = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platformid().data(), static_cast<int>(this->platformid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.platformid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bindnick = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bindnick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bindnick().data(), static_cast<int>(this->bindnick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.bindnick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mobiletype = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_mobiletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobiletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgaccountlogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgaccountlogin)
  return false;
#undef DO_
}

void cgaccountlogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string imei = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->imei(), output);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional string devname = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.devname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->devname(), output);
  }

  // optional string macname = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macname().data(), static_cast<int>(this->macname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.macname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->macname(), output);
  }

  // optional string channel = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->channel(), output);
  }

  // optional string province = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->province(), output);
  }

  // optional string city = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->city(), output);
  }

  // optional int32 mobileid = 11;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mobileid(), output);
  }

  // optional string phonenum = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.phonenum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->phonenum(), output);
  }

  // optional int32 inviterid = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->inviterid(), output);
  }

  // optional int32 bindtype = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->bindtype(), output);
  }

  // optional int32 pushtype = 15;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->pushtype(), output);
  }

  // optional string cid = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.cid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->cid(), output);
  }

  // optional string platformid = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.platformid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->platformid(), output);
  }

  // optional string bindnick = 18;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.bindnick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->bindnick(), output);
  }

  // optional int32 mobiletype = 19;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->mobiletype(), output);
  }

  // optional int32 sex = 20;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->sex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgaccountlogin)
}

::google::protobuf::uint8* cgaccountlogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string imei = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->imei(), target);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional string devname = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.devname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->devname(), target);
  }

  // optional string macname = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macname().data(), static_cast<int>(this->macname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.macname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->macname(), target);
  }

  // optional string channel = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->channel(), target);
  }

  // optional string province = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->province(), target);
  }

  // optional string city = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->city(), target);
  }

  // optional int32 mobileid = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mobileid(), target);
  }

  // optional string phonenum = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.phonenum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->phonenum(), target);
  }

  // optional int32 inviterid = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->inviterid(), target);
  }

  // optional int32 bindtype = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->bindtype(), target);
  }

  // optional int32 pushtype = 15;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->pushtype(), target);
  }

  // optional string cid = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.cid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->cid(), target);
  }

  // optional string platformid = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.platformid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->platformid(), target);
  }

  // optional string bindnick = 18;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.bindnick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->bindnick(), target);
  }

  // optional int32 mobiletype = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->mobiletype(), target);
  }

  // optional int32 sex = 20;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->sex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgaccountlogin)
  return target;
}

size_t cgaccountlogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgaccountlogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string imei = 4;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string nickname = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string devname = 6;
    if (has_devname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devname());
    }

    // optional string macname = 7;
    if (has_macname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macname());
    }

    // optional string channel = 8;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional string province = 9;
    if (has_province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string city = 10;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string phonenum = 12;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

    // optional string cid = 16;
    if (has_cid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cid());
    }

    // optional string platformid = 17;
    if (has_platformid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platformid());
    }

    // optional string bindnick = 18;
    if (has_bindnick()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bindnick());
    }

    // optional int32 mobileid = 11;
    if (has_mobileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobileid());
    }

    // optional int32 inviterid = 13;
    if (has_inviterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inviterid());
    }

    // optional int32 bindtype = 14;
    if (has_bindtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bindtype());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional int32 pushtype = 15;
    if (has_pushtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pushtype());
    }

    // optional int32 mobiletype = 19;
    if (has_mobiletype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobiletype());
    }

    // optional int32 sex = 20;
    if (has_sex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgaccountlogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  const cgaccountlogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgaccountlogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgaccountlogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgaccountlogin)
    MergeFrom(*source);
  }
}

void cgaccountlogin::MergeFrom(const cgaccountlogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_devname();
      devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_macname();
      macname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macname_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_cid();
      cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_platformid();
      platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_bindnick();
      bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
    }
    if (cached_has_bits & 0x00002000u) {
      mobileid_ = from.mobileid_;
    }
    if (cached_has_bits & 0x00004000u) {
      inviterid_ = from.inviterid_;
    }
    if (cached_has_bits & 0x00008000u) {
      bindtype_ = from.bindtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      pushtype_ = from.pushtype_;
    }
    if (cached_has_bits & 0x00020000u) {
      mobiletype_ = from.mobiletype_;
    }
    if (cached_has_bits & 0x00040000u) {
      sex_ = from.sex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgaccountlogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgaccountlogin::CopyFrom(const cgaccountlogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgaccountlogin::IsInitialized() const {
  return true;
}

void cgaccountlogin::Swap(cgaccountlogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgaccountlogin::InternalSwap(cgaccountlogin* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devname_.Swap(&other->devname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  macname_.Swap(&other->macname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  province_.Swap(&other->province_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phonenum_.Swap(&other->phonenum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cid_.Swap(&other->cid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platformid_.Swap(&other->platformid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bindnick_.Swap(&other->bindnick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mobileid_, other->mobileid_);
  swap(inviterid_, other->inviterid_);
  swap(bindtype_, other->bindtype_);
  swap(pushtype_, other->pushtype_);
  swap(mobiletype_, other->mobiletype_);
  swap(sex_, other->sex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgaccountlogin::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcaccountlogin::InitAsDefaultInstance() {
  ::NFMsg::_gcaccountlogin_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::NFMsg::playerinfo*>(
      ::NFMsg::playerinfo::internal_default_instance());
}
void gcaccountlogin::clear_pinfo() {
  if (pinfo_ != NULL) pinfo_->Clear();
  clear_has_pinfo();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcaccountlogin::kResultFieldNumber;
const int gcaccountlogin::kPinfoFieldNumber;
const int gcaccountlogin::kTableidFieldNumber;
const int gcaccountlogin::kSystimeFieldNumber;
const int gcaccountlogin::kTabletypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcaccountlogin::gcaccountlogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcaccountlogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcaccountlogin)
}
gcaccountlogin::gcaccountlogin(const gcaccountlogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::NFMsg::playerinfo(*from.pinfo_);
  } else {
    pinfo_ = NULL;
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&tabletype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(tabletype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcaccountlogin)
}

void gcaccountlogin::SharedCtor() {
  ::memset(&pinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tabletype_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(tabletype_));
}

gcaccountlogin::~gcaccountlogin() {
  // @@protoc_insertion_point(destructor:NFMsg.gcaccountlogin)
  SharedDtor();
}

void gcaccountlogin::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void gcaccountlogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcaccountlogin::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcaccountlogin& gcaccountlogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcaccountlogin.base);
  return *internal_default_instance();
}


void gcaccountlogin::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != NULL);
    pinfo_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tabletype_) -
        reinterpret_cast<char*>(&result_)) + sizeof(tabletype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcaccountlogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcaccountlogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.playerinfo pinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tableid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tableid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tableid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 systime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_systime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &systime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tabletype = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_tabletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tabletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcaccountlogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcaccountlogin)
  return false;
#undef DO_
}

void gcaccountlogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .NFMsg.playerinfo pinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pinfo(), output);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tableid(), output);
  }

  // optional int32 systime = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->systime(), output);
  }

  // optional int32 tabletype = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tabletype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcaccountlogin)
}

::google::protobuf::uint8* gcaccountlogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .NFMsg.playerinfo pinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pinfo(), deterministic, target);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tableid(), target);
  }

  // optional int32 systime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->systime(), target);
  }

  // optional int32 tabletype = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tabletype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcaccountlogin)
  return target;
}

size_t gcaccountlogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcaccountlogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .NFMsg.playerinfo pinfo = 2;
    if (has_pinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pinfo_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 tableid = 3;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tableid());
    }

    // optional int32 systime = 4;
    if (has_systime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->systime());
    }

    // optional int32 tabletype = 5;
    if (has_tabletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tabletype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcaccountlogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  const gcaccountlogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcaccountlogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcaccountlogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcaccountlogin)
    MergeFrom(*source);
  }
}

void gcaccountlogin::MergeFrom(const gcaccountlogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pinfo()->::NFMsg::playerinfo::MergeFrom(from.pinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      tableid_ = from.tableid_;
    }
    if (cached_has_bits & 0x00000008u) {
      systime_ = from.systime_;
    }
    if (cached_has_bits & 0x00000010u) {
      tabletype_ = from.tabletype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcaccountlogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcaccountlogin::CopyFrom(const gcaccountlogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcaccountlogin::IsInitialized() const {
  return true;
}

void gcaccountlogin::Swap(gcaccountlogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcaccountlogin::InternalSwap(gcaccountlogin* other) {
  using std::swap;
  swap(pinfo_, other->pinfo_);
  swap(result_, other->result_);
  swap(tableid_, other->tableid_);
  swap(systime_, other->systime_);
  swap(tabletype_, other->tabletype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcaccountlogin::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cggetplayerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cggetplayerinfo::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cggetplayerinfo::cggetplayerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cggetplayerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cggetplayerinfo)
}
cggetplayerinfo::cggetplayerinfo(const cggetplayerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cggetplayerinfo)
}

void cggetplayerinfo::SharedCtor() {
  userid_ = 0;
}

cggetplayerinfo::~cggetplayerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.cggetplayerinfo)
  SharedDtor();
}

void cggetplayerinfo::SharedDtor() {
}

void cggetplayerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cggetplayerinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cggetplayerinfo& cggetplayerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cggetplayerinfo.base);
  return *internal_default_instance();
}


void cggetplayerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cggetplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cggetplayerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cggetplayerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cggetplayerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cggetplayerinfo)
  return false;
#undef DO_
}

void cggetplayerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cggetplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cggetplayerinfo)
}

::google::protobuf::uint8* cggetplayerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cggetplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cggetplayerinfo)
  return target;
}

size_t cggetplayerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cggetplayerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cggetplayerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cggetplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const cggetplayerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cggetplayerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cggetplayerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cggetplayerinfo)
    MergeFrom(*source);
  }
}

void cggetplayerinfo::MergeFrom(const cggetplayerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cggetplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cggetplayerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cggetplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cggetplayerinfo::CopyFrom(const cggetplayerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cggetplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cggetplayerinfo::IsInitialized() const {
  return true;
}

void cggetplayerinfo::Swap(cggetplayerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cggetplayerinfo::InternalSwap(cggetplayerinfo* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cggetplayerinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcgetplayerinfo::InitAsDefaultInstance() {
  ::NFMsg::_gcgetplayerinfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::NFMsg::playerinfo*>(
      ::NFMsg::playerinfo::internal_default_instance());
}
void gcgetplayerinfo::clear_pinfo() {
  if (pinfo_ != NULL) pinfo_->Clear();
  clear_has_pinfo();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcgetplayerinfo::kResultFieldNumber;
const int gcgetplayerinfo::kPinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcgetplayerinfo::gcgetplayerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcgetplayerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcgetplayerinfo)
}
gcgetplayerinfo::gcgetplayerinfo(const gcgetplayerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::NFMsg::playerinfo(*from.pinfo_);
  } else {
    pinfo_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcgetplayerinfo)
}

void gcgetplayerinfo::SharedCtor() {
  ::memset(&pinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(result_));
}

gcgetplayerinfo::~gcgetplayerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.gcgetplayerinfo)
  SharedDtor();
}

void gcgetplayerinfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void gcgetplayerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcgetplayerinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcgetplayerinfo& gcgetplayerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcgetplayerinfo.base);
  return *internal_default_instance();
}


void gcgetplayerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcgetplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != NULL);
    pinfo_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcgetplayerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcgetplayerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.playerinfo pinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcgetplayerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcgetplayerinfo)
  return false;
#undef DO_
}

void gcgetplayerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcgetplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .NFMsg.playerinfo pinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcgetplayerinfo)
}

::google::protobuf::uint8* gcgetplayerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcgetplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .NFMsg.playerinfo pinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pinfo(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcgetplayerinfo)
  return target;
}

size_t gcgetplayerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcgetplayerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .NFMsg.playerinfo pinfo = 2;
    if (has_pinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pinfo_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcgetplayerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcgetplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const gcgetplayerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcgetplayerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcgetplayerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcgetplayerinfo)
    MergeFrom(*source);
  }
}

void gcgetplayerinfo::MergeFrom(const gcgetplayerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcgetplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pinfo()->::NFMsg::playerinfo::MergeFrom(from.pinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcgetplayerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcgetplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcgetplayerinfo::CopyFrom(const gcgetplayerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcgetplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcgetplayerinfo::IsInitialized() const {
  return true;
}

void gcgetplayerinfo::Swap(gcgetplayerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcgetplayerinfo::InternalSwap(gcgetplayerinfo* other) {
  using std::swap;
  swap(pinfo_, other->pinfo_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcgetplayerinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgreconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgreconnect::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgreconnect::cgreconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgreconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgreconnect)
}
cgreconnect::cgreconnect(const cgreconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgreconnect)
}

void cgreconnect::SharedCtor() {
  userid_ = 0;
}

cgreconnect::~cgreconnect() {
  // @@protoc_insertion_point(destructor:NFMsg.cgreconnect)
  SharedDtor();
}

void cgreconnect::SharedDtor() {
}

void cgreconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgreconnect::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgreconnect& cgreconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgreconnect.base);
  return *internal_default_instance();
}


void cgreconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgreconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgreconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgreconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgreconnect)
  return false;
#undef DO_
}

void cgreconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgreconnect)
}

::google::protobuf::uint8* cgreconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgreconnect)
  return target;
}

size_t cgreconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgreconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgreconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const cgreconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgreconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgreconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgreconnect)
    MergeFrom(*source);
  }
}

void cgreconnect::MergeFrom(const cgreconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cgreconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgreconnect::CopyFrom(const cgreconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgreconnect::IsInitialized() const {
  return true;
}

void cgreconnect::Swap(cgreconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgreconnect::InternalSwap(cgreconnect* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgreconnect::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcreconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcreconnect::kResultFieldNumber;
const int gcreconnect::kMsgbeginFieldNumber;
const int gcreconnect::kTableidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcreconnect::gcreconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcreconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcreconnect)
}
gcreconnect::gcreconnect(const gcreconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgbegin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msgbegin()) {
    msgbegin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbegin_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&tableid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(tableid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcreconnect)
}

void gcreconnect::SharedCtor() {
  msgbegin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(tableid_));
}

gcreconnect::~gcreconnect() {
  // @@protoc_insertion_point(destructor:NFMsg.gcreconnect)
  SharedDtor();
}

void gcreconnect::SharedDtor() {
  msgbegin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void gcreconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcreconnect::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcreconnect& gcreconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcreconnect.base);
  return *internal_default_instance();
}


void gcreconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msgbegin_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tableid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(tableid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcreconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcreconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msgbegin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgbegin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgbegin().data(), static_cast<int>(this->msgbegin().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcreconnect.msgbegin");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tableid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tableid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tableid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcreconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcreconnect)
  return false;
#undef DO_
}

void gcreconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string msgbegin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgbegin().data(), static_cast<int>(this->msgbegin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcreconnect.msgbegin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msgbegin(), output);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tableid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcreconnect)
}

::google::protobuf::uint8* gcreconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string msgbegin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgbegin().data(), static_cast<int>(this->msgbegin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcreconnect.msgbegin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msgbegin(), target);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tableid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcreconnect)
  return target;
}

size_t gcreconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcreconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msgbegin = 2;
    if (has_msgbegin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msgbegin());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 tableid = 3;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tableid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcreconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const gcreconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcreconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcreconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcreconnect)
    MergeFrom(*source);
  }
}

void gcreconnect::MergeFrom(const gcreconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msgbegin();
      msgbegin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbegin_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      tableid_ = from.tableid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcreconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcreconnect::CopyFrom(const gcreconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcreconnect::IsInitialized() const {
  return true;
}

void gcreconnect::Swap(gcreconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcreconnect::InternalSwap(gcreconnect* other) {
  using std::swap;
  msgbegin_.Swap(&other->msgbegin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(tableid_, other->tableid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcreconnect::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gckitplayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gckitplayer::kResultFieldNumber;
const int gckitplayer::kKittypeFieldNumber;
const int gckitplayer::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gckitplayer::gckitplayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gckitplayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gckitplayer)
}
gckitplayer::gckitplayer(const gckitplayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&kittype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(kittype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gckitplayer)
}

void gckitplayer::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kittype_) -
      reinterpret_cast<char*>(&result_)) + sizeof(kittype_));
}

gckitplayer::~gckitplayer() {
  // @@protoc_insertion_point(destructor:NFMsg.gckitplayer)
  SharedDtor();
}

void gckitplayer::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void gckitplayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gckitplayer::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gckitplayer& gckitplayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gckitplayer.base);
  return *internal_default_instance();
}


void gckitplayer::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gckitplayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&kittype_) -
        reinterpret_cast<char*>(&result_)) + sizeof(kittype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gckitplayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gckitplayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 kittype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_kittype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kittype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gckitplayer.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gckitplayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gckitplayer)
  return false;
#undef DO_
}

void gckitplayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gckitplayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 kittype = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->kittype(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gckitplayer.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gckitplayer)
}

::google::protobuf::uint8* gckitplayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gckitplayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 kittype = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->kittype(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gckitplayer.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gckitplayer)
  return target;
}

size_t gckitplayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gckitplayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 kittype = 2;
    if (has_kittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kittype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gckitplayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gckitplayer)
  GOOGLE_DCHECK_NE(&from, this);
  const gckitplayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gckitplayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gckitplayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gckitplayer)
    MergeFrom(*source);
  }
}

void gckitplayer::MergeFrom(const gckitplayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gckitplayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      kittype_ = from.kittype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gckitplayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gckitplayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gckitplayer::CopyFrom(const gckitplayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gckitplayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gckitplayer::IsInitialized() const {
  return true;
}

void gckitplayer::Swap(gckitplayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gckitplayer::InternalSwap(gckitplayer* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(kittype_, other->kittype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gckitplayer::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcnoticeinfo::InitAsDefaultInstance() {
}
void gcnoticeinfo::clear_noticelist() {
  noticelist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcnoticeinfo::kResultFieldNumber;
const int gcnoticeinfo::kNoticelistFieldNumber;
const int gcnoticeinfo::kFriendslistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcnoticeinfo::gcnoticeinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcnoticeinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcnoticeinfo)
}
gcnoticeinfo::gcnoticeinfo(const gcnoticeinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      noticelist_(from.noticelist_),
      friendslist_(from.friendslist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcnoticeinfo)
}

void gcnoticeinfo::SharedCtor() {
  result_ = 0;
}

gcnoticeinfo::~gcnoticeinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.gcnoticeinfo)
  SharedDtor();
}

void gcnoticeinfo::SharedDtor() {
}

void gcnoticeinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcnoticeinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcnoticeinfo& gcnoticeinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcnoticeinfo.base);
  return *internal_default_instance();
}


void gcnoticeinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcnoticeinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  noticelist_.Clear();
  friendslist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcnoticeinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcnoticeinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.noticeinfo noticelist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_noticelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 friendslist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_friendslist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_friendslist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcnoticeinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcnoticeinfo)
  return false;
#undef DO_
}

void gcnoticeinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcnoticeinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .NFMsg.noticeinfo noticelist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->noticelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->noticelist(static_cast<int>(i)),
      output);
  }

  // repeated int32 friendslist = 3;
  for (int i = 0, n = this->friendslist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->friendslist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcnoticeinfo)
}

::google::protobuf::uint8* gcnoticeinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcnoticeinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .NFMsg.noticeinfo noticelist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->noticelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->noticelist(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 friendslist = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->friendslist_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcnoticeinfo)
  return target;
}

size_t gcnoticeinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcnoticeinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NFMsg.noticeinfo noticelist = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->noticelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->noticelist(static_cast<int>(i)));
    }
  }

  // repeated int32 friendslist = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->friendslist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->friendslist_size());
    total_size += data_size;
  }

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcnoticeinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcnoticeinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const gcnoticeinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcnoticeinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcnoticeinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcnoticeinfo)
    MergeFrom(*source);
  }
}

void gcnoticeinfo::MergeFrom(const gcnoticeinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcnoticeinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  noticelist_.MergeFrom(from.noticelist_);
  friendslist_.MergeFrom(from.friendslist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcnoticeinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcnoticeinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcnoticeinfo::CopyFrom(const gcnoticeinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcnoticeinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcnoticeinfo::IsInitialized() const {
  return true;
}

void gcnoticeinfo::Swap(gcnoticeinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcnoticeinfo::InternalSwap(gcnoticeinfo* other) {
  using std::swap;
  CastToBase(&noticelist_)->InternalSwap(CastToBase(&other->noticelist_));
  friendslist_.InternalSwap(&other->friendslist_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcnoticeinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgheartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgheartbeat::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgheartbeat::cgheartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgheartbeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgheartbeat)
}
cgheartbeat::cgheartbeat(const cgheartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgheartbeat)
}

void cgheartbeat::SharedCtor() {
  userid_ = 0;
}

cgheartbeat::~cgheartbeat() {
  // @@protoc_insertion_point(destructor:NFMsg.cgheartbeat)
  SharedDtor();
}

void cgheartbeat::SharedDtor() {
}

void cgheartbeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgheartbeat::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgheartbeat& cgheartbeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgheartbeat.base);
  return *internal_default_instance();
}


void cgheartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgheartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgheartbeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgheartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgheartbeat)
  return false;
#undef DO_
}

void cgheartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgheartbeat)
}

::google::protobuf::uint8* cgheartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgheartbeat)
  return target;
}

size_t cgheartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgheartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgheartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const cgheartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgheartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgheartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgheartbeat)
    MergeFrom(*source);
  }
}

void cgheartbeat::MergeFrom(const cgheartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cgheartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgheartbeat::CopyFrom(const cgheartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgheartbeat::IsInitialized() const {
  return true;
}

void cgheartbeat::Swap(cgheartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgheartbeat::InternalSwap(cgheartbeat* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgheartbeat::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcheartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcheartbeat::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcheartbeat::gcheartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcheartbeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcheartbeat)
}
gcheartbeat::gcheartbeat(const gcheartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcheartbeat)
}

void gcheartbeat::SharedCtor() {
  result_ = 0;
}

gcheartbeat::~gcheartbeat() {
  // @@protoc_insertion_point(destructor:NFMsg.gcheartbeat)
  SharedDtor();
}

void gcheartbeat::SharedDtor() {
}

void gcheartbeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcheartbeat::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcheartbeat& gcheartbeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcheartbeat.base);
  return *internal_default_instance();
}


void gcheartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcheartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcheartbeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcheartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcheartbeat)
  return false;
#undef DO_
}

void gcheartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcheartbeat)
}

::google::protobuf::uint8* gcheartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcheartbeat)
  return target;
}

size_t gcheartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcheartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcheartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const gcheartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcheartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcheartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcheartbeat)
    MergeFrom(*source);
  }
}

void gcheartbeat::MergeFrom(const gcheartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcheartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcheartbeat::CopyFrom(const gcheartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcheartbeat::IsInitialized() const {
  return true;
}

void gcheartbeat::Swap(gcheartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcheartbeat::InternalSwap(gcheartbeat* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcheartbeat::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cggetinitinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cggetinitinfo::kUseridFieldNumber;
const int cggetinitinfo::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cggetinitinfo::cggetinitinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cggetinitinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cggetinitinfo)
}
cggetinitinfo::cggetinitinfo(const cggetinitinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cggetinitinfo)
}

void cggetinitinfo::SharedCtor() {
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

cggetinitinfo::~cggetinitinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.cggetinitinfo)
  SharedDtor();
}

void cggetinitinfo::SharedDtor() {
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cggetinitinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cggetinitinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cggetinitinfo& cggetinitinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cggetinitinfo.base);
  return *internal_default_instance();
}


void cggetinitinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cggetinitinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    channel_.ClearNonDefaultToEmptyNoArena();
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cggetinitinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cggetinitinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cggetinitinfo.channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cggetinitinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cggetinitinfo)
  return false;
#undef DO_
}

void cggetinitinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cggetinitinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cggetinitinfo.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->channel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cggetinitinfo)
}

::google::protobuf::uint8* cggetinitinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cggetinitinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cggetinitinfo.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->channel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cggetinitinfo)
  return target;
}

size_t cggetinitinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cggetinitinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string channel = 2;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cggetinitinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cggetinitinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const cggetinitinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cggetinitinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cggetinitinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cggetinitinfo)
    MergeFrom(*source);
  }
}

void cggetinitinfo::MergeFrom(const cggetinitinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cggetinitinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cggetinitinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cggetinitinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cggetinitinfo::CopyFrom(const cggetinitinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cggetinitinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cggetinitinfo::IsInitialized() const {
  return true;
}

void cggetinitinfo::Swap(cggetinitinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cggetinitinfo::InternalSwap(cggetinitinfo* other) {
  using std::swap;
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cggetinitinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcgetinitinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcgetinitinfo::kResultFieldNumber;
const int gcgetinitinfo::kPaytypeFieldNumber;
const int gcgetinitinfo::kMdelistFieldNumber;
const int gcgetinitinfo::kPaylistFieldNumber;
const int gcgetinitinfo::kShoplistFieldNumber;
const int gcgetinitinfo::kWechatlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcgetinitinfo::gcgetinitinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcgetinitinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcgetinitinfo)
}
gcgetinitinfo::gcgetinitinfo(const gcgetinitinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      paytype_(from.paytype_),
      mdelist_(from.mdelist_),
      paylist_(from.paylist_),
      shoplist_(from.shoplist_),
      wechatlist_(from.wechatlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcgetinitinfo)
}

void gcgetinitinfo::SharedCtor() {
  result_ = 0;
}

gcgetinitinfo::~gcgetinitinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.gcgetinitinfo)
  SharedDtor();
}

void gcgetinitinfo::SharedDtor() {
}

void gcgetinitinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcgetinitinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcgetinitinfo& gcgetinitinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcgetinitinfo.base);
  return *internal_default_instance();
}


void gcgetinitinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcgetinitinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paytype_.Clear();
  mdelist_.Clear();
  paylist_.Clear();
  shoplist_.Clear();
  wechatlist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcgetinitinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcgetinitinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 paytype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_paytype())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_paytype())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 mdelist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_mdelist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mdelist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 paylist = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_paylist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_paylist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 shoplist = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48u, input, this->mutable_shoplist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shoplist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string wechatlist = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_wechatlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wechatlist(this->wechatlist_size() - 1).data(),
            static_cast<int>(this->wechatlist(this->wechatlist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcgetinitinfo.wechatlist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcgetinitinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcgetinitinfo)
  return false;
#undef DO_
}

void gcgetinitinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcgetinitinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated int32 paytype = 2;
  for (int i = 0, n = this->paytype_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->paytype(i), output);
  }

  // repeated int32 mdelist = 4;
  for (int i = 0, n = this->mdelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->mdelist(i), output);
  }

  // repeated int32 paylist = 5;
  for (int i = 0, n = this->paylist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->paylist(i), output);
  }

  // repeated int32 shoplist = 6;
  for (int i = 0, n = this->shoplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->shoplist(i), output);
  }

  // repeated string wechatlist = 7;
  for (int i = 0, n = this->wechatlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wechatlist(i).data(), static_cast<int>(this->wechatlist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcgetinitinfo.wechatlist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->wechatlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcgetinitinfo)
}

::google::protobuf::uint8* gcgetinitinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcgetinitinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated int32 paytype = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->paytype_, target);

  // repeated int32 mdelist = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->mdelist_, target);

  // repeated int32 paylist = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->paylist_, target);

  // repeated int32 shoplist = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(6, this->shoplist_, target);

  // repeated string wechatlist = 7;
  for (int i = 0, n = this->wechatlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wechatlist(i).data(), static_cast<int>(this->wechatlist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcgetinitinfo.wechatlist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->wechatlist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcgetinitinfo)
  return target;
}

size_t gcgetinitinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcgetinitinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 paytype = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->paytype_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->paytype_size());
    total_size += data_size;
  }

  // repeated int32 mdelist = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->mdelist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->mdelist_size());
    total_size += data_size;
  }

  // repeated int32 paylist = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->paylist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->paylist_size());
    total_size += data_size;
  }

  // repeated int32 shoplist = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->shoplist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shoplist_size());
    total_size += data_size;
  }

  // repeated string wechatlist = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->wechatlist_size());
  for (int i = 0, n = this->wechatlist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->wechatlist(i));
  }

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcgetinitinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcgetinitinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const gcgetinitinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcgetinitinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcgetinitinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcgetinitinfo)
    MergeFrom(*source);
  }
}

void gcgetinitinfo::MergeFrom(const gcgetinitinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcgetinitinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paytype_.MergeFrom(from.paytype_);
  mdelist_.MergeFrom(from.mdelist_);
  paylist_.MergeFrom(from.paylist_);
  shoplist_.MergeFrom(from.shoplist_);
  wechatlist_.MergeFrom(from.wechatlist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcgetinitinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcgetinitinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcgetinitinfo::CopyFrom(const gcgetinitinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcgetinitinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcgetinitinfo::IsInitialized() const {
  return true;
}

void gcgetinitinfo::Swap(gcgetinitinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcgetinitinfo::InternalSwap(gcgetinitinfo* other) {
  using std::swap;
  paytype_.InternalSwap(&other->paytype_);
  mdelist_.InternalSwap(&other->mdelist_);
  paylist_.InternalSwap(&other->paylist_);
  shoplist_.InternalSwap(&other->shoplist_);
  wechatlist_.InternalSwap(CastToBase(&other->wechatlist_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcgetinitinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcbroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcbroadcast::kResultFieldNumber;
const int gcbroadcast::kBroadtypelistFieldNumber;
const int gcbroadcast::kSenderidlistFieldNumber;
const int gcbroadcast::kSenderlistFieldNumber;
const int gcbroadcast::kMsglistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcbroadcast::gcbroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcbroadcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcbroadcast)
}
gcbroadcast::gcbroadcast(const gcbroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      broadtypelist_(from.broadtypelist_),
      senderidlist_(from.senderidlist_),
      senderlist_(from.senderlist_),
      msglist_(from.msglist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcbroadcast)
}

void gcbroadcast::SharedCtor() {
  result_ = 0;
}

gcbroadcast::~gcbroadcast() {
  // @@protoc_insertion_point(destructor:NFMsg.gcbroadcast)
  SharedDtor();
}

void gcbroadcast::SharedDtor() {
}

void gcbroadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcbroadcast::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcbroadcast& gcbroadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcbroadcast.base);
  return *internal_default_instance();
}


void gcbroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcbroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  broadtypelist_.Clear();
  senderidlist_.Clear();
  senderlist_.Clear();
  msglist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcbroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcbroadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 broadtypelist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_broadtypelist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_broadtypelist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 senderidlist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_senderidlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_senderidlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string senderlist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_senderlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->senderlist(this->senderlist_size() - 1).data(),
            static_cast<int>(this->senderlist(this->senderlist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcbroadcast.senderlist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string msglist = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_msglist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msglist(this->msglist_size() - 1).data(),
            static_cast<int>(this->msglist(this->msglist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcbroadcast.msglist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcbroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcbroadcast)
  return false;
#undef DO_
}

void gcbroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcbroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated int32 broadtypelist = 2;
  for (int i = 0, n = this->broadtypelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->broadtypelist(i), output);
  }

  // repeated int32 senderidlist = 3;
  for (int i = 0, n = this->senderidlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->senderidlist(i), output);
  }

  // repeated string senderlist = 4;
  for (int i = 0, n = this->senderlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senderlist(i).data(), static_cast<int>(this->senderlist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcbroadcast.senderlist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->senderlist(i), output);
  }

  // repeated string msglist = 5;
  for (int i = 0, n = this->msglist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msglist(i).data(), static_cast<int>(this->msglist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcbroadcast.msglist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->msglist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcbroadcast)
}

::google::protobuf::uint8* gcbroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcbroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated int32 broadtypelist = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->broadtypelist_, target);

  // repeated int32 senderidlist = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->senderidlist_, target);

  // repeated string senderlist = 4;
  for (int i = 0, n = this->senderlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senderlist(i).data(), static_cast<int>(this->senderlist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcbroadcast.senderlist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->senderlist(i), target);
  }

  // repeated string msglist = 5;
  for (int i = 0, n = this->msglist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msglist(i).data(), static_cast<int>(this->msglist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcbroadcast.msglist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->msglist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcbroadcast)
  return target;
}

size_t gcbroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcbroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 broadtypelist = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->broadtypelist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->broadtypelist_size());
    total_size += data_size;
  }

  // repeated int32 senderidlist = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->senderidlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->senderidlist_size());
    total_size += data_size;
  }

  // repeated string senderlist = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->senderlist_size());
  for (int i = 0, n = this->senderlist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->senderlist(i));
  }

  // repeated string msglist = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->msglist_size());
  for (int i = 0, n = this->msglist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->msglist(i));
  }

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcbroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcbroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const gcbroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcbroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcbroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcbroadcast)
    MergeFrom(*source);
  }
}

void gcbroadcast::MergeFrom(const gcbroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcbroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  broadtypelist_.MergeFrom(from.broadtypelist_);
  senderidlist_.MergeFrom(from.senderidlist_);
  senderlist_.MergeFrom(from.senderlist_);
  msglist_.MergeFrom(from.msglist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcbroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcbroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcbroadcast::CopyFrom(const gcbroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcbroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcbroadcast::IsInitialized() const {
  return true;
}

void gcbroadcast::Swap(gcbroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcbroadcast::InternalSwap(gcbroadcast* other) {
  using std::swap;
  broadtypelist_.InternalSwap(&other->broadtypelist_);
  senderidlist_.InternalSwap(&other->senderidlist_);
  senderlist_.InternalSwap(CastToBase(&other->senderlist_));
  msglist_.InternalSwap(CastToBase(&other->msglist_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcbroadcast::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cggetmaillist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cggetmaillist::kUseridFieldNumber;
const int cggetmaillist::kPagenumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cggetmaillist::cggetmaillist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cggetmaillist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cggetmaillist)
}
cggetmaillist::cggetmaillist(const cggetmaillist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pagenum_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(pagenum_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cggetmaillist)
}

void cggetmaillist::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pagenum_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(pagenum_));
}

cggetmaillist::~cggetmaillist() {
  // @@protoc_insertion_point(destructor:NFMsg.cggetmaillist)
  SharedDtor();
}

void cggetmaillist::SharedDtor() {
}

void cggetmaillist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cggetmaillist::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cggetmaillist& cggetmaillist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cggetmaillist.base);
  return *internal_default_instance();
}


void cggetmaillist::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cggetmaillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pagenum_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(pagenum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cggetmaillist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cggetmaillist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pagenum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pagenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pagenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cggetmaillist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cggetmaillist)
  return false;
#undef DO_
}

void cggetmaillist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cggetmaillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 pagenum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pagenum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cggetmaillist)
}

::google::protobuf::uint8* cggetmaillist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cggetmaillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 pagenum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pagenum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cggetmaillist)
  return target;
}

size_t cggetmaillist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cggetmaillist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 pagenum = 2;
    if (has_pagenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pagenum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cggetmaillist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cggetmaillist)
  GOOGLE_DCHECK_NE(&from, this);
  const cggetmaillist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cggetmaillist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cggetmaillist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cggetmaillist)
    MergeFrom(*source);
  }
}

void cggetmaillist::MergeFrom(const cggetmaillist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cggetmaillist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pagenum_ = from.pagenum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cggetmaillist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cggetmaillist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cggetmaillist::CopyFrom(const cggetmaillist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cggetmaillist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cggetmaillist::IsInitialized() const {
  return true;
}

void cggetmaillist::Swap(cggetmaillist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cggetmaillist::InternalSwap(cggetmaillist* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(pagenum_, other->pagenum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cggetmaillist::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcgetmaillist::InitAsDefaultInstance() {
}
void gcgetmaillist::clear_mlist() {
  mlist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcgetmaillist::kResultFieldNumber;
const int gcgetmaillist::kMlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcgetmaillist::gcgetmaillist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcgetmaillist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcgetmaillist)
}
gcgetmaillist::gcgetmaillist(const gcgetmaillist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      mlist_(from.mlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcgetmaillist)
}

void gcgetmaillist::SharedCtor() {
  result_ = 0;
}

gcgetmaillist::~gcgetmaillist() {
  // @@protoc_insertion_point(destructor:NFMsg.gcgetmaillist)
  SharedDtor();
}

void gcgetmaillist::SharedDtor() {
}

void gcgetmaillist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcgetmaillist::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcgetmaillist& gcgetmaillist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcgetmaillist.base);
  return *internal_default_instance();
}


void gcgetmaillist::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcgetmaillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mlist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcgetmaillist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcgetmaillist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.mailinfo mlist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcgetmaillist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcgetmaillist)
  return false;
#undef DO_
}

void gcgetmaillist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcgetmaillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .NFMsg.mailinfo mlist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->mlist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcgetmaillist)
}

::google::protobuf::uint8* gcgetmaillist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcgetmaillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .NFMsg.mailinfo mlist = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->mlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcgetmaillist)
  return target;
}

size_t gcgetmaillist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcgetmaillist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NFMsg.mailinfo mlist = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mlist(static_cast<int>(i)));
    }
  }

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcgetmaillist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcgetmaillist)
  GOOGLE_DCHECK_NE(&from, this);
  const gcgetmaillist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcgetmaillist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcgetmaillist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcgetmaillist)
    MergeFrom(*source);
  }
}

void gcgetmaillist::MergeFrom(const gcgetmaillist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcgetmaillist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mlist_.MergeFrom(from.mlist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcgetmaillist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcgetmaillist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcgetmaillist::CopyFrom(const gcgetmaillist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcgetmaillist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcgetmaillist::IsInitialized() const {
  return true;
}

void gcgetmaillist::Swap(gcgetmaillist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcgetmaillist::InternalSwap(gcgetmaillist* other) {
  using std::swap;
  CastToBase(&mlist_)->InternalSwap(CastToBase(&other->mlist_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcgetmaillist::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgreadmail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgreadmail::kUseridFieldNumber;
const int cgreadmail::kMailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgreadmail::cgreadmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgreadmail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgreadmail)
}
cgreadmail::cgreadmail(const cgreadmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgreadmail)
}

void cgreadmail::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
}

cgreadmail::~cgreadmail() {
  // @@protoc_insertion_point(destructor:NFMsg.cgreadmail)
  SharedDtor();
}

void cgreadmail::SharedDtor() {
}

void cgreadmail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgreadmail::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgreadmail& cgreadmail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgreadmail.base);
  return *internal_default_instance();
}


void cgreadmail::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgreadmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mailid_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgreadmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgreadmail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgreadmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgreadmail)
  return false;
#undef DO_
}

void cgreadmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgreadmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgreadmail)
}

::google::protobuf::uint8* cgreadmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgreadmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgreadmail)
  return target;
}

size_t cgreadmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgreadmail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 mailid = 2;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgreadmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgreadmail)
  GOOGLE_DCHECK_NE(&from, this);
  const cgreadmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgreadmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgreadmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgreadmail)
    MergeFrom(*source);
  }
}

void cgreadmail::MergeFrom(const cgreadmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgreadmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      mailid_ = from.mailid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgreadmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgreadmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgreadmail::CopyFrom(const cgreadmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgreadmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgreadmail::IsInitialized() const {
  return true;
}

void cgreadmail::Swap(cgreadmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgreadmail::InternalSwap(cgreadmail* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(mailid_, other->mailid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgreadmail::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcreadmail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcreadmail::kResultFieldNumber;
const int gcreadmail::kMailidFieldNumber;
const int gcreadmail::kMailstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcreadmail::gcreadmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcreadmail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcreadmail)
}
gcreadmail::gcreadmail(const gcreadmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailstate_) -
    reinterpret_cast<char*>(&result_)) + sizeof(mailstate_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcreadmail)
}

void gcreadmail::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailstate_) -
      reinterpret_cast<char*>(&result_)) + sizeof(mailstate_));
}

gcreadmail::~gcreadmail() {
  // @@protoc_insertion_point(destructor:NFMsg.gcreadmail)
  SharedDtor();
}

void gcreadmail::SharedDtor() {
}

void gcreadmail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcreadmail::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcreadmail& gcreadmail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcreadmail.base);
  return *internal_default_instance();
}


void gcreadmail::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcreadmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mailstate_) -
        reinterpret_cast<char*>(&result_)) + sizeof(mailstate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcreadmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcreadmail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailstate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_mailstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcreadmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcreadmail)
  return false;
#undef DO_
}

void gcreadmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcreadmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mailid(), output);
  }

  // optional int32 mailstate = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mailstate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcreadmail)
}

::google::protobuf::uint8* gcreadmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcreadmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mailid(), target);
  }

  // optional int32 mailstate = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mailstate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcreadmail)
  return target;
}

size_t gcreadmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcreadmail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 mailid = 2;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailid());
    }

    // optional int32 mailstate = 3;
    if (has_mailstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailstate());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcreadmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcreadmail)
  GOOGLE_DCHECK_NE(&from, this);
  const gcreadmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcreadmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcreadmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcreadmail)
    MergeFrom(*source);
  }
}

void gcreadmail::MergeFrom(const gcreadmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcreadmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      mailid_ = from.mailid_;
    }
    if (cached_has_bits & 0x00000004u) {
      mailstate_ = from.mailstate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcreadmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcreadmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcreadmail::CopyFrom(const gcreadmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcreadmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcreadmail::IsInitialized() const {
  return true;
}

void gcreadmail::Swap(gcreadmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcreadmail::InternalSwap(gcreadmail* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(mailid_, other->mailid_);
  swap(mailstate_, other->mailstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcreadmail::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cggetmailgoods::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cggetmailgoods::kUseridFieldNumber;
const int cggetmailgoods::kMailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cggetmailgoods::cggetmailgoods()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cggetmailgoods.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cggetmailgoods)
}
cggetmailgoods::cggetmailgoods(const cggetmailgoods& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cggetmailgoods)
}

void cggetmailgoods::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
}

cggetmailgoods::~cggetmailgoods() {
  // @@protoc_insertion_point(destructor:NFMsg.cggetmailgoods)
  SharedDtor();
}

void cggetmailgoods::SharedDtor() {
}

void cggetmailgoods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cggetmailgoods::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cggetmailgoods& cggetmailgoods::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cggetmailgoods.base);
  return *internal_default_instance();
}


void cggetmailgoods::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cggetmailgoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mailid_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cggetmailgoods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cggetmailgoods)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cggetmailgoods)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cggetmailgoods)
  return false;
#undef DO_
}

void cggetmailgoods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cggetmailgoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cggetmailgoods)
}

::google::protobuf::uint8* cggetmailgoods::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cggetmailgoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cggetmailgoods)
  return target;
}

size_t cggetmailgoods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cggetmailgoods)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 mailid = 2;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cggetmailgoods::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cggetmailgoods)
  GOOGLE_DCHECK_NE(&from, this);
  const cggetmailgoods* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cggetmailgoods>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cggetmailgoods)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cggetmailgoods)
    MergeFrom(*source);
  }
}

void cggetmailgoods::MergeFrom(const cggetmailgoods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cggetmailgoods)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      mailid_ = from.mailid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cggetmailgoods::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cggetmailgoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cggetmailgoods::CopyFrom(const cggetmailgoods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cggetmailgoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cggetmailgoods::IsInitialized() const {
  return true;
}

void cggetmailgoods::Swap(cggetmailgoods* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cggetmailgoods::InternalSwap(cggetmailgoods* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(mailid_, other->mailid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cggetmailgoods::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcgetmailgoods::InitAsDefaultInstance() {
}
void gcgetmailgoods::clear_getlist() {
  getlist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcgetmailgoods::kResultFieldNumber;
const int gcgetmailgoods::kMailidFieldNumber;
const int gcgetmailgoods::kMailstateFieldNumber;
const int gcgetmailgoods::kGetlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcgetmailgoods::gcgetmailgoods()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcgetmailgoods.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcgetmailgoods)
}
gcgetmailgoods::gcgetmailgoods(const gcgetmailgoods& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      getlist_(from.getlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailstate_) -
    reinterpret_cast<char*>(&result_)) + sizeof(mailstate_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcgetmailgoods)
}

void gcgetmailgoods::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailstate_) -
      reinterpret_cast<char*>(&result_)) + sizeof(mailstate_));
}

gcgetmailgoods::~gcgetmailgoods() {
  // @@protoc_insertion_point(destructor:NFMsg.gcgetmailgoods)
  SharedDtor();
}

void gcgetmailgoods::SharedDtor() {
}

void gcgetmailgoods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcgetmailgoods::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcgetmailgoods& gcgetmailgoods::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcgetmailgoods.base);
  return *internal_default_instance();
}


void gcgetmailgoods::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcgetmailgoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  getlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mailstate_) -
        reinterpret_cast<char*>(&result_)) + sizeof(mailstate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcgetmailgoods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcgetmailgoods)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailstate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_mailstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.goodsinfo getlist = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_getlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcgetmailgoods)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcgetmailgoods)
  return false;
#undef DO_
}

void gcgetmailgoods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcgetmailgoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mailid(), output);
  }

  // optional int32 mailstate = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mailstate(), output);
  }

  // repeated .NFMsg.goodsinfo getlist = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->getlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->getlist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcgetmailgoods)
}

::google::protobuf::uint8* gcgetmailgoods::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcgetmailgoods)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mailid(), target);
  }

  // optional int32 mailstate = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mailstate(), target);
  }

  // repeated .NFMsg.goodsinfo getlist = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->getlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->getlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcgetmailgoods)
  return target;
}

size_t gcgetmailgoods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcgetmailgoods)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NFMsg.goodsinfo getlist = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->getlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->getlist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 mailid = 2;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailid());
    }

    // optional int32 mailstate = 3;
    if (has_mailstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailstate());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcgetmailgoods::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcgetmailgoods)
  GOOGLE_DCHECK_NE(&from, this);
  const gcgetmailgoods* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcgetmailgoods>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcgetmailgoods)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcgetmailgoods)
    MergeFrom(*source);
  }
}

void gcgetmailgoods::MergeFrom(const gcgetmailgoods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcgetmailgoods)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  getlist_.MergeFrom(from.getlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      mailid_ = from.mailid_;
    }
    if (cached_has_bits & 0x00000004u) {
      mailstate_ = from.mailstate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcgetmailgoods::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcgetmailgoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcgetmailgoods::CopyFrom(const gcgetmailgoods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcgetmailgoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcgetmailgoods::IsInitialized() const {
  return true;
}

void gcgetmailgoods::Swap(gcgetmailgoods* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcgetmailgoods::InternalSwap(gcgetmailgoods* other) {
  using std::swap;
  CastToBase(&getlist_)->InternalSwap(CastToBase(&other->getlist_));
  swap(result_, other->result_);
  swap(mailid_, other->mailid_);
  swap(mailstate_, other->mailstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcgetmailgoods::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgdeletemail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgdeletemail::kUseridFieldNumber;
const int cgdeletemail::kMailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgdeletemail::cgdeletemail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgdeletemail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgdeletemail)
}
cgdeletemail::cgdeletemail(const cgdeletemail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgdeletemail)
}

void cgdeletemail::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
}

cgdeletemail::~cgdeletemail() {
  // @@protoc_insertion_point(destructor:NFMsg.cgdeletemail)
  SharedDtor();
}

void cgdeletemail::SharedDtor() {
}

void cgdeletemail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgdeletemail::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgdeletemail& cgdeletemail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgdeletemail.base);
  return *internal_default_instance();
}


void cgdeletemail::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgdeletemail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mailid_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(mailid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgdeletemail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgdeletemail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgdeletemail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgdeletemail)
  return false;
#undef DO_
}

void cgdeletemail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgdeletemail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgdeletemail)
}

::google::protobuf::uint8* cgdeletemail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgdeletemail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgdeletemail)
  return target;
}

size_t cgdeletemail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgdeletemail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 mailid = 2;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgdeletemail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgdeletemail)
  GOOGLE_DCHECK_NE(&from, this);
  const cgdeletemail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgdeletemail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgdeletemail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgdeletemail)
    MergeFrom(*source);
  }
}

void cgdeletemail::MergeFrom(const cgdeletemail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgdeletemail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      mailid_ = from.mailid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgdeletemail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgdeletemail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgdeletemail::CopyFrom(const cgdeletemail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgdeletemail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgdeletemail::IsInitialized() const {
  return true;
}

void cgdeletemail::Swap(cgdeletemail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgdeletemail::InternalSwap(cgdeletemail* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(mailid_, other->mailid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgdeletemail::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcdeletemail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcdeletemail::kResultFieldNumber;
const int gcdeletemail::kMailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcdeletemail::gcdeletemail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcdeletemail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcdeletemail)
}
gcdeletemail::gcdeletemail(const gcdeletemail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(mailid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcdeletemail)
}

void gcdeletemail::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(mailid_));
}

gcdeletemail::~gcdeletemail() {
  // @@protoc_insertion_point(destructor:NFMsg.gcdeletemail)
  SharedDtor();
}

void gcdeletemail::SharedDtor() {
}

void gcdeletemail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcdeletemail::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcdeletemail& gcdeletemail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcdeletemail.base);
  return *internal_default_instance();
}


void gcdeletemail::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcdeletemail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mailid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(mailid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcdeletemail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcdeletemail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcdeletemail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcdeletemail)
  return false;
#undef DO_
}

void gcdeletemail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcdeletemail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcdeletemail)
}

::google::protobuf::uint8* gcdeletemail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcdeletemail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcdeletemail)
  return target;
}

size_t gcdeletemail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcdeletemail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 mailid = 2;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcdeletemail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcdeletemail)
  GOOGLE_DCHECK_NE(&from, this);
  const gcdeletemail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcdeletemail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcdeletemail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcdeletemail)
    MergeFrom(*source);
  }
}

void gcdeletemail::MergeFrom(const gcdeletemail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcdeletemail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      mailid_ = from.mailid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcdeletemail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcdeletemail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcdeletemail::CopyFrom(const gcdeletemail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcdeletemail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcdeletemail::IsInitialized() const {
  return true;
}

void gcdeletemail::Swap(gcdeletemail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcdeletemail::InternalSwap(gcdeletemail* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(mailid_, other->mailid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcdeletemail::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgplayerstatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgplayerstatus::kUseridFieldNumber;
const int cgplayerstatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgplayerstatus::cgplayerstatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgplayerstatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgplayerstatus)
}
cgplayerstatus::cgplayerstatus(const cgplayerstatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgplayerstatus)
}

void cgplayerstatus::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(status_));
}

cgplayerstatus::~cgplayerstatus() {
  // @@protoc_insertion_point(destructor:NFMsg.cgplayerstatus)
  SharedDtor();
}

void cgplayerstatus::SharedDtor() {
}

void cgplayerstatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgplayerstatus::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgplayerstatus& cgplayerstatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgplayerstatus.base);
  return *internal_default_instance();
}


void cgplayerstatus::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgplayerstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgplayerstatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgplayerstatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgplayerstatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgplayerstatus)
  return false;
#undef DO_
}

void cgplayerstatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgplayerstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 status = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgplayerstatus)
}

::google::protobuf::uint8* cgplayerstatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgplayerstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgplayerstatus)
  return target;
}

size_t cgplayerstatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgplayerstatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgplayerstatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgplayerstatus)
  GOOGLE_DCHECK_NE(&from, this);
  const cgplayerstatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgplayerstatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgplayerstatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgplayerstatus)
    MergeFrom(*source);
  }
}

void cgplayerstatus::MergeFrom(const cgplayerstatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgplayerstatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgplayerstatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgplayerstatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgplayerstatus::CopyFrom(const cgplayerstatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgplayerstatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgplayerstatus::IsInitialized() const {
  return true;
}

void cgplayerstatus::Swap(cgplayerstatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgplayerstatus::InternalSwap(cgplayerstatus* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgplayerstatus::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcplayerstatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcplayerstatus::kResultFieldNumber;
const int gcplayerstatus::kUseridFieldNumber;
const int gcplayerstatus::kStatusFieldNumber;
const int gcplayerstatus::kTimemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcplayerstatus::gcplayerstatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcplayerstatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcplayerstatus)
}
gcplayerstatus::gcplayerstatus(const gcplayerstatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&timemark_) -
    reinterpret_cast<char*>(&result_)) + sizeof(timemark_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcplayerstatus)
}

void gcplayerstatus::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timemark_) -
      reinterpret_cast<char*>(&result_)) + sizeof(timemark_));
}

gcplayerstatus::~gcplayerstatus() {
  // @@protoc_insertion_point(destructor:NFMsg.gcplayerstatus)
  SharedDtor();
}

void gcplayerstatus::SharedDtor() {
}

void gcplayerstatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcplayerstatus::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcplayerstatus& gcplayerstatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcplayerstatus.base);
  return *internal_default_instance();
}


void gcplayerstatus::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcplayerstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timemark_) -
        reinterpret_cast<char*>(&result_)) + sizeof(timemark_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcplayerstatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcplayerstatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 timemark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timemark();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timemark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcplayerstatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcplayerstatus)
  return false;
#undef DO_
}

void gcplayerstatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcplayerstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional int32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // optional int32 timemark = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timemark(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcplayerstatus)
}

::google::protobuf::uint8* gcplayerstatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcplayerstatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional int32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // optional int32 timemark = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timemark(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcplayerstatus)
  return target;
}

size_t gcplayerstatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcplayerstatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional int32 timemark = 4;
    if (has_timemark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timemark());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcplayerstatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcplayerstatus)
  GOOGLE_DCHECK_NE(&from, this);
  const gcplayerstatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcplayerstatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcplayerstatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcplayerstatus)
    MergeFrom(*source);
  }
}

void gcplayerstatus::MergeFrom(const gcplayerstatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcplayerstatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000008u) {
      timemark_ = from.timemark_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcplayerstatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcplayerstatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcplayerstatus::CopyFrom(const gcplayerstatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcplayerstatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcplayerstatus::IsInitialized() const {
  return true;
}

void gcplayerstatus::Swap(gcplayerstatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcplayerstatus::InternalSwap(gcplayerstatus* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(userid_, other->userid_);
  swap(status_, other->status_);
  swap(timemark_, other->timemark_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcplayerstatus::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgupdateplayerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgupdateplayerinfo::kUseridFieldNumber;
const int cgupdateplayerinfo::kTypelistFieldNumber;
const int cgupdateplayerinfo::kValuelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgupdateplayerinfo::cgupdateplayerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgupdateplayerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgupdateplayerinfo)
}
cgupdateplayerinfo::cgupdateplayerinfo(const cgupdateplayerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      typelist_(from.typelist_),
      valuelist_(from.valuelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgupdateplayerinfo)
}

void cgupdateplayerinfo::SharedCtor() {
  userid_ = 0;
}

cgupdateplayerinfo::~cgupdateplayerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.cgupdateplayerinfo)
  SharedDtor();
}

void cgupdateplayerinfo::SharedDtor() {
}

void cgupdateplayerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgupdateplayerinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgupdateplayerinfo& cgupdateplayerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgupdateplayerinfo.base);
  return *internal_default_instance();
}


void cgupdateplayerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgupdateplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typelist_.Clear();
  valuelist_.Clear();
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgupdateplayerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgupdateplayerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string typelist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_typelist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->typelist(this->typelist_size() - 1).data(),
            static_cast<int>(this->typelist(this->typelist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgupdateplayerinfo.typelist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valuelist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valuelist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->valuelist(this->valuelist_size() - 1).data(),
            static_cast<int>(this->valuelist(this->valuelist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgupdateplayerinfo.valuelist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgupdateplayerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgupdateplayerinfo)
  return false;
#undef DO_
}

void cgupdateplayerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgupdateplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // repeated string typelist = 2;
  for (int i = 0, n = this->typelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typelist(i).data(), static_cast<int>(this->typelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgupdateplayerinfo.typelist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->typelist(i), output);
  }

  // repeated string valuelist = 3;
  for (int i = 0, n = this->valuelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuelist(i).data(), static_cast<int>(this->valuelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgupdateplayerinfo.valuelist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->valuelist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgupdateplayerinfo)
}

::google::protobuf::uint8* cgupdateplayerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgupdateplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // repeated string typelist = 2;
  for (int i = 0, n = this->typelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typelist(i).data(), static_cast<int>(this->typelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgupdateplayerinfo.typelist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->typelist(i), target);
  }

  // repeated string valuelist = 3;
  for (int i = 0, n = this->valuelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuelist(i).data(), static_cast<int>(this->valuelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgupdateplayerinfo.valuelist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->valuelist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgupdateplayerinfo)
  return target;
}

size_t cgupdateplayerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgupdateplayerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string typelist = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->typelist_size());
  for (int i = 0, n = this->typelist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->typelist(i));
  }

  // repeated string valuelist = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valuelist_size());
  for (int i = 0, n = this->valuelist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valuelist(i));
  }

  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgupdateplayerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgupdateplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const cgupdateplayerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgupdateplayerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgupdateplayerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgupdateplayerinfo)
    MergeFrom(*source);
  }
}

void cgupdateplayerinfo::MergeFrom(const cgupdateplayerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgupdateplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typelist_.MergeFrom(from.typelist_);
  valuelist_.MergeFrom(from.valuelist_);
  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cgupdateplayerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgupdateplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgupdateplayerinfo::CopyFrom(const cgupdateplayerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgupdateplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgupdateplayerinfo::IsInitialized() const {
  return true;
}

void cgupdateplayerinfo::Swap(cgupdateplayerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgupdateplayerinfo::InternalSwap(cgupdateplayerinfo* other) {
  using std::swap;
  typelist_.InternalSwap(CastToBase(&other->typelist_));
  valuelist_.InternalSwap(CastToBase(&other->valuelist_));
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgupdateplayerinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcupdateplayerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcupdateplayerinfo::kResultFieldNumber;
const int gcupdateplayerinfo::kTypelistFieldNumber;
const int gcupdateplayerinfo::kValuelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcupdateplayerinfo::gcupdateplayerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcupdateplayerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcupdateplayerinfo)
}
gcupdateplayerinfo::gcupdateplayerinfo(const gcupdateplayerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      typelist_(from.typelist_),
      valuelist_(from.valuelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcupdateplayerinfo)
}

void gcupdateplayerinfo::SharedCtor() {
  result_ = 0;
}

gcupdateplayerinfo::~gcupdateplayerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.gcupdateplayerinfo)
  SharedDtor();
}

void gcupdateplayerinfo::SharedDtor() {
}

void gcupdateplayerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcupdateplayerinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcupdateplayerinfo& gcupdateplayerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcupdateplayerinfo.base);
  return *internal_default_instance();
}


void gcupdateplayerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcupdateplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typelist_.Clear();
  valuelist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcupdateplayerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcupdateplayerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string typelist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_typelist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->typelist(this->typelist_size() - 1).data(),
            static_cast<int>(this->typelist(this->typelist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcupdateplayerinfo.typelist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string valuelist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_valuelist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->valuelist(this->valuelist_size() - 1).data(),
            static_cast<int>(this->valuelist(this->valuelist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcupdateplayerinfo.valuelist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcupdateplayerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcupdateplayerinfo)
  return false;
#undef DO_
}

void gcupdateplayerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcupdateplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated string typelist = 2;
  for (int i = 0, n = this->typelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typelist(i).data(), static_cast<int>(this->typelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcupdateplayerinfo.typelist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->typelist(i), output);
  }

  // repeated string valuelist = 3;
  for (int i = 0, n = this->valuelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuelist(i).data(), static_cast<int>(this->valuelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcupdateplayerinfo.valuelist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->valuelist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcupdateplayerinfo)
}

::google::protobuf::uint8* gcupdateplayerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcupdateplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated string typelist = 2;
  for (int i = 0, n = this->typelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typelist(i).data(), static_cast<int>(this->typelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcupdateplayerinfo.typelist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->typelist(i), target);
  }

  // repeated string valuelist = 3;
  for (int i = 0, n = this->valuelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->valuelist(i).data(), static_cast<int>(this->valuelist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcupdateplayerinfo.valuelist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->valuelist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcupdateplayerinfo)
  return target;
}

size_t gcupdateplayerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcupdateplayerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string typelist = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->typelist_size());
  for (int i = 0, n = this->typelist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->typelist(i));
  }

  // repeated string valuelist = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->valuelist_size());
  for (int i = 0, n = this->valuelist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->valuelist(i));
  }

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcupdateplayerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcupdateplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const gcupdateplayerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcupdateplayerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcupdateplayerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcupdateplayerinfo)
    MergeFrom(*source);
  }
}

void gcupdateplayerinfo::MergeFrom(const gcupdateplayerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcupdateplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typelist_.MergeFrom(from.typelist_);
  valuelist_.MergeFrom(from.valuelist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcupdateplayerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcupdateplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcupdateplayerinfo::CopyFrom(const gcupdateplayerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcupdateplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcupdateplayerinfo::IsInitialized() const {
  return true;
}

void gcupdateplayerinfo::Swap(gcupdateplayerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcupdateplayerinfo::InternalSwap(gcupdateplayerinfo* other) {
  using std::swap;
  typelist_.InternalSwap(CastToBase(&other->typelist_));
  valuelist_.InternalSwap(CastToBase(&other->valuelist_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcupdateplayerinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcupdategoodslist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcupdategoodslist::kResultFieldNumber;
const int gcupdategoodslist::kIdlistFieldNumber;
const int gcupdategoodslist::kNumlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcupdategoodslist::gcupdategoodslist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcupdategoodslist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcupdategoodslist)
}
gcupdategoodslist::gcupdategoodslist(const gcupdategoodslist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      idlist_(from.idlist_),
      numlist_(from.numlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcupdategoodslist)
}

void gcupdategoodslist::SharedCtor() {
  result_ = 0;
}

gcupdategoodslist::~gcupdategoodslist() {
  // @@protoc_insertion_point(destructor:NFMsg.gcupdategoodslist)
  SharedDtor();
}

void gcupdategoodslist::SharedDtor() {
}

void gcupdategoodslist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcupdategoodslist::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcupdategoodslist& gcupdategoodslist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcupdategoodslist.base);
  return *internal_default_instance();
}


void gcupdategoodslist::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcupdategoodslist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  idlist_.Clear();
  numlist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcupdategoodslist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcupdategoodslist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 idlist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_idlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_idlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 numlist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_numlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_numlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcupdategoodslist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcupdategoodslist)
  return false;
#undef DO_
}

void gcupdategoodslist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcupdategoodslist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated int32 idlist = 2;
  for (int i = 0, n = this->idlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->idlist(i), output);
  }

  // repeated int32 numlist = 3;
  for (int i = 0, n = this->numlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->numlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcupdategoodslist)
}

::google::protobuf::uint8* gcupdategoodslist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcupdategoodslist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated int32 idlist = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->idlist_, target);

  // repeated int32 numlist = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->numlist_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcupdategoodslist)
  return target;
}

size_t gcupdategoodslist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcupdategoodslist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 idlist = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->idlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->idlist_size());
    total_size += data_size;
  }

  // repeated int32 numlist = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->numlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->numlist_size());
    total_size += data_size;
  }

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcupdategoodslist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcupdategoodslist)
  GOOGLE_DCHECK_NE(&from, this);
  const gcupdategoodslist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcupdategoodslist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcupdategoodslist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcupdategoodslist)
    MergeFrom(*source);
  }
}

void gcupdategoodslist::MergeFrom(const gcupdategoodslist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcupdategoodslist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  idlist_.MergeFrom(from.idlist_);
  numlist_.MergeFrom(from.numlist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcupdategoodslist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcupdategoodslist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcupdategoodslist::CopyFrom(const gcupdategoodslist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcupdategoodslist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcupdategoodslist::IsInitialized() const {
  return true;
}

void gcupdategoodslist::Swap(gcupdategoodslist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcupdategoodslist::InternalSwap(gcupdategoodslist* other) {
  using std::swap;
  idlist_.InternalSwap(&other->idlist_);
  numlist_.InternalSwap(&other->numlist_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcupdategoodslist::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgagencyopt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgagencyopt::kUseridFieldNumber;
const int cgagencyopt::kOpttypeFieldNumber;
const int cgagencyopt::kOptstrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgagencyopt::cgagencyopt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgagencyopt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgagencyopt)
}
cgagencyopt::cgagencyopt(const cgagencyopt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  optstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_optstr()) {
    optstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optstr_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&opttype_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(opttype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgagencyopt)
}

void cgagencyopt::SharedCtor() {
  optstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opttype_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(opttype_));
}

cgagencyopt::~cgagencyopt() {
  // @@protoc_insertion_point(destructor:NFMsg.cgagencyopt)
  SharedDtor();
}

void cgagencyopt::SharedDtor() {
  optstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cgagencyopt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgagencyopt::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgagencyopt& cgagencyopt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgagencyopt.base);
  return *internal_default_instance();
}


void cgagencyopt::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgagencyopt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    optstr_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&opttype_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(opttype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgagencyopt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgagencyopt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 opttype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opttype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string optstr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optstr().data(), static_cast<int>(this->optstr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgagencyopt.optstr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgagencyopt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgagencyopt)
  return false;
#undef DO_
}

void cgagencyopt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgagencyopt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 opttype = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->opttype(), output);
  }

  // optional string optstr = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optstr().data(), static_cast<int>(this->optstr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgagencyopt.optstr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->optstr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgagencyopt)
}

::google::protobuf::uint8* cgagencyopt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgagencyopt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 opttype = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->opttype(), target);
  }

  // optional string optstr = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optstr().data(), static_cast<int>(this->optstr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgagencyopt.optstr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->optstr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgagencyopt)
  return target;
}

size_t cgagencyopt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgagencyopt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string optstr = 3;
    if (has_optstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optstr());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 opttype = 2;
    if (has_opttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opttype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgagencyopt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgagencyopt)
  GOOGLE_DCHECK_NE(&from, this);
  const cgagencyopt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgagencyopt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgagencyopt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgagencyopt)
    MergeFrom(*source);
  }
}

void cgagencyopt::MergeFrom(const cgagencyopt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgagencyopt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_optstr();
      optstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optstr_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      opttype_ = from.opttype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgagencyopt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgagencyopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgagencyopt::CopyFrom(const cgagencyopt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgagencyopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgagencyopt::IsInitialized() const {
  return true;
}

void cgagencyopt::Swap(cgagencyopt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgagencyopt::InternalSwap(cgagencyopt* other) {
  using std::swap;
  optstr_.Swap(&other->optstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(opttype_, other->opttype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgagencyopt::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcagencyopt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcagencyopt::kResultFieldNumber;
const int gcagencyopt::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcagencyopt::gcagencyopt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcagencyopt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcagencyopt)
}
gcagencyopt::gcagencyopt(const gcagencyopt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str()) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcagencyopt)
}

void gcagencyopt::SharedCtor() {
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

gcagencyopt::~gcagencyopt() {
  // @@protoc_insertion_point(destructor:NFMsg.gcagencyopt)
  SharedDtor();
}

void gcagencyopt::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void gcagencyopt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcagencyopt::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcagencyopt& gcagencyopt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcagencyopt.base);
  return *internal_default_instance();
}


void gcagencyopt::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcagencyopt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    str_.ClearNonDefaultToEmptyNoArena();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcagencyopt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcagencyopt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcagencyopt.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcagencyopt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcagencyopt)
  return false;
#undef DO_
}

void gcagencyopt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcagencyopt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string str = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcagencyopt.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcagencyopt)
}

::google::protobuf::uint8* gcagencyopt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcagencyopt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string str = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcagencyopt.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcagencyopt)
  return target;
}

size_t gcagencyopt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcagencyopt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string str = 2;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcagencyopt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcagencyopt)
  GOOGLE_DCHECK_NE(&from, this);
  const gcagencyopt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcagencyopt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcagencyopt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcagencyopt)
    MergeFrom(*source);
  }
}

void gcagencyopt::MergeFrom(const gcagencyopt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcagencyopt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_str();
      str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcagencyopt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcagencyopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcagencyopt::CopyFrom(const gcagencyopt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcagencyopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcagencyopt::IsInitialized() const {
  return true;
}

void gcagencyopt::Swap(gcagencyopt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcagencyopt::InternalSwap(gcagencyopt* other) {
  using std::swap;
  str_.Swap(&other->str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcagencyopt::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgentertable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgentertable::kUseridFieldNumber;
const int cgentertable::kTableidFieldNumber;
const int cgentertable::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgentertable::cgentertable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgentertable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgentertable)
}
cgentertable::cgentertable(const cgentertable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tableid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(tableid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgentertable)
}

void cgentertable::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(tableid_));
}

cgentertable::~cgentertable() {
  // @@protoc_insertion_point(destructor:NFMsg.cgentertable)
  SharedDtor();
}

void cgentertable::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cgentertable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgentertable::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgentertable& cgentertable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgentertable.base);
  return *internal_default_instance();
}


void cgentertable::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    password_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tableid_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(tableid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgentertable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgentertable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tableid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tableid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tableid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgentertable.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgentertable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgentertable)
  return false;
#undef DO_
}

void cgentertable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 tableid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tableid(), output);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgentertable.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgentertable)
}

::google::protobuf::uint8* cgentertable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 tableid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tableid(), target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgentertable.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgentertable)
  return target;
}

size_t cgentertable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgentertable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 tableid = 2;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tableid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgentertable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgentertable)
  GOOGLE_DCHECK_NE(&from, this);
  const cgentertable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgentertable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgentertable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgentertable)
    MergeFrom(*source);
  }
}

void cgentertable::MergeFrom(const cgentertable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgentertable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      tableid_ = from.tableid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgentertable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgentertable::CopyFrom(const cgentertable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgentertable::IsInitialized() const {
  return true;
}

void cgentertable::Swap(cgentertable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgentertable::InternalSwap(cgentertable* other) {
  using std::swap;
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(tableid_, other->tableid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgentertable::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcentertable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcentertable::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcentertable::gcentertable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcentertable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcentertable)
}
gcentertable::gcentertable(const gcentertable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcentertable)
}

void gcentertable::SharedCtor() {
  result_ = 0;
}

gcentertable::~gcentertable() {
  // @@protoc_insertion_point(destructor:NFMsg.gcentertable)
  SharedDtor();
}

void gcentertable::SharedDtor() {
}

void gcentertable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcentertable::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcentertable& gcentertable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcentertable.base);
  return *internal_default_instance();
}


void gcentertable::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcentertable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcentertable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcentertable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcentertable)
  return false;
#undef DO_
}

void gcentertable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcentertable)
}

::google::protobuf::uint8* gcentertable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcentertable)
  return target;
}

size_t gcentertable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcentertable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcentertable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcentertable)
  GOOGLE_DCHECK_NE(&from, this);
  const gcentertable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcentertable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcentertable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcentertable)
    MergeFrom(*source);
  }
}

void gcentertable::MergeFrom(const gcentertable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcentertable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcentertable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcentertable::CopyFrom(const gcentertable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcentertable::IsInitialized() const {
  return true;
}

void gcentertable::Swap(gcentertable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcentertable::InternalSwap(gcentertable* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcentertable::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cggetagencyinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cggetagencyinfo::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cggetagencyinfo::cggetagencyinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cggetagencyinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cggetagencyinfo)
}
cggetagencyinfo::cggetagencyinfo(const cggetagencyinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cggetagencyinfo)
}

void cggetagencyinfo::SharedCtor() {
  userid_ = 0;
}

cggetagencyinfo::~cggetagencyinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.cggetagencyinfo)
  SharedDtor();
}

void cggetagencyinfo::SharedDtor() {
}

void cggetagencyinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cggetagencyinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cggetagencyinfo& cggetagencyinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cggetagencyinfo.base);
  return *internal_default_instance();
}


void cggetagencyinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cggetagencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cggetagencyinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cggetagencyinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cggetagencyinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cggetagencyinfo)
  return false;
#undef DO_
}

void cggetagencyinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cggetagencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cggetagencyinfo)
}

::google::protobuf::uint8* cggetagencyinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cggetagencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cggetagencyinfo)
  return target;
}

size_t cggetagencyinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cggetagencyinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cggetagencyinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cggetagencyinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const cggetagencyinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cggetagencyinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cggetagencyinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cggetagencyinfo)
    MergeFrom(*source);
  }
}

void cggetagencyinfo::MergeFrom(const cggetagencyinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cggetagencyinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cggetagencyinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cggetagencyinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cggetagencyinfo::CopyFrom(const cggetagencyinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cggetagencyinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cggetagencyinfo::IsInitialized() const {
  return true;
}

void cggetagencyinfo::Swap(cggetagencyinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cggetagencyinfo::InternalSwap(cggetagencyinfo* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cggetagencyinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcgetagencyinfo::InitAsDefaultInstance() {
  ::NFMsg::_gcgetagencyinfo_default_instance_._instance.get_mutable()->agyinfo_ = const_cast< ::NFMsg::agencyinfo*>(
      ::NFMsg::agencyinfo::internal_default_instance());
}
void gcgetagencyinfo::clear_agyinfo() {
  if (agyinfo_ != NULL) agyinfo_->Clear();
  clear_has_agyinfo();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcgetagencyinfo::kResultFieldNumber;
const int gcgetagencyinfo::kAgyinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcgetagencyinfo::gcgetagencyinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcgetagencyinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcgetagencyinfo)
}
gcgetagencyinfo::gcgetagencyinfo(const gcgetagencyinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_agyinfo()) {
    agyinfo_ = new ::NFMsg::agencyinfo(*from.agyinfo_);
  } else {
    agyinfo_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcgetagencyinfo)
}

void gcgetagencyinfo::SharedCtor() {
  ::memset(&agyinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&agyinfo_)) + sizeof(result_));
}

gcgetagencyinfo::~gcgetagencyinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.gcgetagencyinfo)
  SharedDtor();
}

void gcgetagencyinfo::SharedDtor() {
  if (this != internal_default_instance()) delete agyinfo_;
}

void gcgetagencyinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcgetagencyinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcgetagencyinfo& gcgetagencyinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcgetagencyinfo.base);
  return *internal_default_instance();
}


void gcgetagencyinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcgetagencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(agyinfo_ != NULL);
    agyinfo_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcgetagencyinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcgetagencyinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.agencyinfo agyinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_agyinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcgetagencyinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcgetagencyinfo)
  return false;
#undef DO_
}

void gcgetagencyinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcgetagencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .NFMsg.agencyinfo agyinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_agyinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcgetagencyinfo)
}

::google::protobuf::uint8* gcgetagencyinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcgetagencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .NFMsg.agencyinfo agyinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_agyinfo(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcgetagencyinfo)
  return target;
}

size_t gcgetagencyinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcgetagencyinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .NFMsg.agencyinfo agyinfo = 2;
    if (has_agyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *agyinfo_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcgetagencyinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcgetagencyinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const gcgetagencyinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcgetagencyinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcgetagencyinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcgetagencyinfo)
    MergeFrom(*source);
  }
}

void gcgetagencyinfo::MergeFrom(const gcgetagencyinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcgetagencyinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_agyinfo()->::NFMsg::agencyinfo::MergeFrom(from.agyinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcgetagencyinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcgetagencyinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcgetagencyinfo::CopyFrom(const gcgetagencyinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcgetagencyinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcgetagencyinfo::IsInitialized() const {
  return true;
}

void gcgetagencyinfo::Swap(gcgetagencyinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcgetagencyinfo::InternalSwap(gcgetagencyinfo* other) {
  using std::swap;
  swap(agyinfo_, other->agyinfo_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcgetagencyinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cginvitebind::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cginvitebind::kUseridFieldNumber;
const int cginvitebind::kInvitestrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cginvitebind::cginvitebind()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cginvitebind.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cginvitebind)
}
cginvitebind::cginvitebind(const cginvitebind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  invitestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_invitestr()) {
    invitestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitestr_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cginvitebind)
}

void cginvitebind::SharedCtor() {
  invitestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

cginvitebind::~cginvitebind() {
  // @@protoc_insertion_point(destructor:NFMsg.cginvitebind)
  SharedDtor();
}

void cginvitebind::SharedDtor() {
  invitestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cginvitebind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cginvitebind::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cginvitebind& cginvitebind::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cginvitebind.base);
  return *internal_default_instance();
}


void cginvitebind::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cginvitebind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    invitestr_.ClearNonDefaultToEmptyNoArena();
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cginvitebind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cginvitebind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string invitestr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitestr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitestr().data(), static_cast<int>(this->invitestr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cginvitebind.invitestr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cginvitebind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cginvitebind)
  return false;
#undef DO_
}

void cginvitebind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cginvitebind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string invitestr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitestr().data(), static_cast<int>(this->invitestr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cginvitebind.invitestr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->invitestr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cginvitebind)
}

::google::protobuf::uint8* cginvitebind::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cginvitebind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string invitestr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitestr().data(), static_cast<int>(this->invitestr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cginvitebind.invitestr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->invitestr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cginvitebind)
  return target;
}

size_t cginvitebind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cginvitebind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string invitestr = 2;
    if (has_invitestr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitestr());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cginvitebind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cginvitebind)
  GOOGLE_DCHECK_NE(&from, this);
  const cginvitebind* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cginvitebind>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cginvitebind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cginvitebind)
    MergeFrom(*source);
  }
}

void cginvitebind::MergeFrom(const cginvitebind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cginvitebind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_invitestr();
      invitestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitestr_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cginvitebind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cginvitebind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cginvitebind::CopyFrom(const cginvitebind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cginvitebind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cginvitebind::IsInitialized() const {
  return true;
}

void cginvitebind::Swap(cginvitebind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cginvitebind::InternalSwap(cginvitebind* other) {
  using std::swap;
  invitestr_.Swap(&other->invitestr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cginvitebind::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcinvitebind::InitAsDefaultInstance() {
  ::NFMsg::_gcinvitebind_default_instance_._instance.get_mutable()->agyinfo_ = const_cast< ::NFMsg::agencyinfo*>(
      ::NFMsg::agencyinfo::internal_default_instance());
}
void gcinvitebind::clear_agyinfo() {
  if (agyinfo_ != NULL) agyinfo_->Clear();
  clear_has_agyinfo();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcinvitebind::kResultFieldNumber;
const int gcinvitebind::kAgyinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcinvitebind::gcinvitebind()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcinvitebind.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcinvitebind)
}
gcinvitebind::gcinvitebind(const gcinvitebind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_agyinfo()) {
    agyinfo_ = new ::NFMsg::agencyinfo(*from.agyinfo_);
  } else {
    agyinfo_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcinvitebind)
}

void gcinvitebind::SharedCtor() {
  ::memset(&agyinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&agyinfo_)) + sizeof(result_));
}

gcinvitebind::~gcinvitebind() {
  // @@protoc_insertion_point(destructor:NFMsg.gcinvitebind)
  SharedDtor();
}

void gcinvitebind::SharedDtor() {
  if (this != internal_default_instance()) delete agyinfo_;
}

void gcinvitebind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcinvitebind::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcinvitebind& gcinvitebind::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcinvitebind.base);
  return *internal_default_instance();
}


void gcinvitebind::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcinvitebind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(agyinfo_ != NULL);
    agyinfo_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcinvitebind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcinvitebind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.agencyinfo agyinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_agyinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcinvitebind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcinvitebind)
  return false;
#undef DO_
}

void gcinvitebind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcinvitebind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .NFMsg.agencyinfo agyinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_agyinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcinvitebind)
}

::google::protobuf::uint8* gcinvitebind::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcinvitebind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .NFMsg.agencyinfo agyinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_agyinfo(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcinvitebind)
  return target;
}

size_t gcinvitebind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcinvitebind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .NFMsg.agencyinfo agyinfo = 2;
    if (has_agyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *agyinfo_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcinvitebind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcinvitebind)
  GOOGLE_DCHECK_NE(&from, this);
  const gcinvitebind* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcinvitebind>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcinvitebind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcinvitebind)
    MergeFrom(*source);
  }
}

void gcinvitebind::MergeFrom(const gcinvitebind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcinvitebind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_agyinfo()->::NFMsg::agencyinfo::MergeFrom(from.agyinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcinvitebind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcinvitebind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcinvitebind::CopyFrom(const gcinvitebind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcinvitebind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcinvitebind::IsInitialized() const {
  return true;
}

void gcinvitebind::Swap(gcinvitebind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcinvitebind::InternalSwap(gcinvitebind* other) {
  using std::swap;
  swap(agyinfo_, other->agyinfo_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcinvitebind::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cggivemoney::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cggivemoney::kUseridFieldNumber;
const int cggivemoney::kTouseridFieldNumber;
const int cggivemoney::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cggivemoney::cggivemoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cggivemoney.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cggivemoney)
}
cggivemoney::cggivemoney(const cggivemoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cggivemoney)
}

void cggivemoney::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(amount_));
}

cggivemoney::~cggivemoney() {
  // @@protoc_insertion_point(destructor:NFMsg.cggivemoney)
  SharedDtor();
}

void cggivemoney::SharedDtor() {
}

void cggivemoney::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cggivemoney::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cggivemoney& cggivemoney::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cggivemoney.base);
  return *internal_default_instance();
}


void cggivemoney::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cggivemoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cggivemoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cggivemoney)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 touserid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_touserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &touserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cggivemoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cggivemoney)
  return false;
#undef DO_
}

void cggivemoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cggivemoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 touserid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->touserid(), output);
  }

  // optional int32 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cggivemoney)
}

::google::protobuf::uint8* cggivemoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cggivemoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 touserid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->touserid(), target);
  }

  // optional int32 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cggivemoney)
  return target;
}

size_t cggivemoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cggivemoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 touserid = 2;
    if (has_touserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->touserid());
    }

    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cggivemoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cggivemoney)
  GOOGLE_DCHECK_NE(&from, this);
  const cggivemoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cggivemoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cggivemoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cggivemoney)
    MergeFrom(*source);
  }
}

void cggivemoney::MergeFrom(const cggivemoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cggivemoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      touserid_ = from.touserid_;
    }
    if (cached_has_bits & 0x00000004u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cggivemoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cggivemoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cggivemoney::CopyFrom(const cggivemoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cggivemoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cggivemoney::IsInitialized() const {
  return true;
}

void cggivemoney::Swap(cggivemoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cggivemoney::InternalSwap(cggivemoney* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(touserid_, other->touserid_);
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cggivemoney::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcgivemoney::InitAsDefaultInstance() {
  ::NFMsg::_gcgivemoney_default_instance_._instance.get_mutable()->record_ = const_cast< ::NFMsg::givemoneyrecord*>(
      ::NFMsg::givemoneyrecord::internal_default_instance());
}
void gcgivemoney::clear_record() {
  if (record_ != NULL) record_->Clear();
  clear_has_record();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcgivemoney::kResultFieldNumber;
const int gcgivemoney::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcgivemoney::gcgivemoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcgivemoney.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcgivemoney)
}
gcgivemoney::gcgivemoney(const gcgivemoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_record()) {
    record_ = new ::NFMsg::givemoneyrecord(*from.record_);
  } else {
    record_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcgivemoney)
}

void gcgivemoney::SharedCtor() {
  ::memset(&record_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&record_)) + sizeof(result_));
}

gcgivemoney::~gcgivemoney() {
  // @@protoc_insertion_point(destructor:NFMsg.gcgivemoney)
  SharedDtor();
}

void gcgivemoney::SharedDtor() {
  if (this != internal_default_instance()) delete record_;
}

void gcgivemoney::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcgivemoney::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcgivemoney& gcgivemoney::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcgivemoney.base);
  return *internal_default_instance();
}


void gcgivemoney::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcgivemoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(record_ != NULL);
    record_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcgivemoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcgivemoney)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.givemoneyrecord record = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcgivemoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcgivemoney)
  return false;
#undef DO_
}

void gcgivemoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcgivemoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .NFMsg.givemoneyrecord record = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_record(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcgivemoney)
}

::google::protobuf::uint8* gcgivemoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcgivemoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .NFMsg.givemoneyrecord record = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_record(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcgivemoney)
  return target;
}

size_t gcgivemoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcgivemoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .NFMsg.givemoneyrecord record = 2;
    if (has_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *record_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcgivemoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcgivemoney)
  GOOGLE_DCHECK_NE(&from, this);
  const gcgivemoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcgivemoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcgivemoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcgivemoney)
    MergeFrom(*source);
  }
}

void gcgivemoney::MergeFrom(const gcgivemoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcgivemoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_record()->::NFMsg::givemoneyrecord::MergeFrom(from.record());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcgivemoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcgivemoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcgivemoney::CopyFrom(const gcgivemoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcgivemoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcgivemoney::IsInitialized() const {
  return true;
}

void gcgivemoney::Swap(gcgivemoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcgivemoney::InternalSwap(gcgivemoney* other) {
  using std::swap;
  swap(record_, other->record_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcgivemoney::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgapplygroupmaster::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgapplygroupmaster::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgapplygroupmaster::cgapplygroupmaster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgapplygroupmaster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgapplygroupmaster)
}
cgapplygroupmaster::cgapplygroupmaster(const cgapplygroupmaster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgapplygroupmaster)
}

void cgapplygroupmaster::SharedCtor() {
  userid_ = 0;
}

cgapplygroupmaster::~cgapplygroupmaster() {
  // @@protoc_insertion_point(destructor:NFMsg.cgapplygroupmaster)
  SharedDtor();
}

void cgapplygroupmaster::SharedDtor() {
}

void cgapplygroupmaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgapplygroupmaster::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgapplygroupmaster& cgapplygroupmaster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgapplygroupmaster.base);
  return *internal_default_instance();
}


void cgapplygroupmaster::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgapplygroupmaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgapplygroupmaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgapplygroupmaster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgapplygroupmaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgapplygroupmaster)
  return false;
#undef DO_
}

void cgapplygroupmaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgapplygroupmaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgapplygroupmaster)
}

::google::protobuf::uint8* cgapplygroupmaster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgapplygroupmaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgapplygroupmaster)
  return target;
}

size_t cgapplygroupmaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgapplygroupmaster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgapplygroupmaster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgapplygroupmaster)
  GOOGLE_DCHECK_NE(&from, this);
  const cgapplygroupmaster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgapplygroupmaster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgapplygroupmaster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgapplygroupmaster)
    MergeFrom(*source);
  }
}

void cgapplygroupmaster::MergeFrom(const cgapplygroupmaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgapplygroupmaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cgapplygroupmaster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgapplygroupmaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgapplygroupmaster::CopyFrom(const cgapplygroupmaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgapplygroupmaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgapplygroupmaster::IsInitialized() const {
  return true;
}

void cgapplygroupmaster::Swap(cgapplygroupmaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgapplygroupmaster::InternalSwap(cgapplygroupmaster* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgapplygroupmaster::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcapplygroupmaster::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcapplygroupmaster::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcapplygroupmaster::gcapplygroupmaster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcapplygroupmaster.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcapplygroupmaster)
}
gcapplygroupmaster::gcapplygroupmaster(const gcapplygroupmaster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcapplygroupmaster)
}

void gcapplygroupmaster::SharedCtor() {
  result_ = 0;
}

gcapplygroupmaster::~gcapplygroupmaster() {
  // @@protoc_insertion_point(destructor:NFMsg.gcapplygroupmaster)
  SharedDtor();
}

void gcapplygroupmaster::SharedDtor() {
}

void gcapplygroupmaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcapplygroupmaster::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcapplygroupmaster& gcapplygroupmaster::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcapplygroupmaster.base);
  return *internal_default_instance();
}


void gcapplygroupmaster::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcapplygroupmaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcapplygroupmaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcapplygroupmaster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcapplygroupmaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcapplygroupmaster)
  return false;
#undef DO_
}

void gcapplygroupmaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcapplygroupmaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcapplygroupmaster)
}

::google::protobuf::uint8* gcapplygroupmaster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcapplygroupmaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcapplygroupmaster)
  return target;
}

size_t gcapplygroupmaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcapplygroupmaster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcapplygroupmaster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcapplygroupmaster)
  GOOGLE_DCHECK_NE(&from, this);
  const gcapplygroupmaster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcapplygroupmaster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcapplygroupmaster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcapplygroupmaster)
    MergeFrom(*source);
  }
}

void gcapplygroupmaster::MergeFrom(const gcapplygroupmaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcapplygroupmaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcapplygroupmaster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcapplygroupmaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcapplygroupmaster::CopyFrom(const gcapplygroupmaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcapplygroupmaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcapplygroupmaster::IsInitialized() const {
  return true;
}

void gcapplygroupmaster::Swap(gcapplygroupmaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcapplygroupmaster::InternalSwap(gcapplygroupmaster* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcapplygroupmaster::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cggivemoneyrecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cggivemoneyrecord::kUseridFieldNumber;
const int cggivemoneyrecord::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cggivemoneyrecord::cggivemoneyrecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cggivemoneyrecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cggivemoneyrecord)
}
cggivemoneyrecord::cggivemoneyrecord(const cggivemoneyrecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(page_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cggivemoneyrecord)
}

void cggivemoneyrecord::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(page_));
}

cggivemoneyrecord::~cggivemoneyrecord() {
  // @@protoc_insertion_point(destructor:NFMsg.cggivemoneyrecord)
  SharedDtor();
}

void cggivemoneyrecord::SharedDtor() {
}

void cggivemoneyrecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cggivemoneyrecord::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cggivemoneyrecord& cggivemoneyrecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cggivemoneyrecord.base);
  return *internal_default_instance();
}


void cggivemoneyrecord::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cggivemoneyrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&page_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(page_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cggivemoneyrecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cggivemoneyrecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 page = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_page();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cggivemoneyrecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cggivemoneyrecord)
  return false;
#undef DO_
}

void cggivemoneyrecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cggivemoneyrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 page = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cggivemoneyrecord)
}

::google::protobuf::uint8* cggivemoneyrecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cggivemoneyrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 page = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cggivemoneyrecord)
  return target;
}

size_t cggivemoneyrecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cggivemoneyrecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 page = 2;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cggivemoneyrecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cggivemoneyrecord)
  GOOGLE_DCHECK_NE(&from, this);
  const cggivemoneyrecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cggivemoneyrecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cggivemoneyrecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cggivemoneyrecord)
    MergeFrom(*source);
  }
}

void cggivemoneyrecord::MergeFrom(const cggivemoneyrecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cggivemoneyrecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      page_ = from.page_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cggivemoneyrecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cggivemoneyrecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cggivemoneyrecord::CopyFrom(const cggivemoneyrecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cggivemoneyrecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cggivemoneyrecord::IsInitialized() const {
  return true;
}

void cggivemoneyrecord::Swap(cggivemoneyrecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cggivemoneyrecord::InternalSwap(cggivemoneyrecord* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(page_, other->page_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cggivemoneyrecord::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcgivemoneyrecord::InitAsDefaultInstance() {
}
void gcgivemoneyrecord::clear_list() {
  list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcgivemoneyrecord::kResultFieldNumber;
const int gcgivemoneyrecord::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcgivemoneyrecord::gcgivemoneyrecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcgivemoneyrecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcgivemoneyrecord)
}
gcgivemoneyrecord::gcgivemoneyrecord(const gcgivemoneyrecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcgivemoneyrecord)
}

void gcgivemoneyrecord::SharedCtor() {
  result_ = 0;
}

gcgivemoneyrecord::~gcgivemoneyrecord() {
  // @@protoc_insertion_point(destructor:NFMsg.gcgivemoneyrecord)
  SharedDtor();
}

void gcgivemoneyrecord::SharedDtor() {
}

void gcgivemoneyrecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcgivemoneyrecord::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcgivemoneyrecord& gcgivemoneyrecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcgivemoneyrecord.base);
  return *internal_default_instance();
}


void gcgivemoneyrecord::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcgivemoneyrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcgivemoneyrecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcgivemoneyrecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.givemoneyrecord list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcgivemoneyrecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcgivemoneyrecord)
  return false;
#undef DO_
}

void gcgivemoneyrecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcgivemoneyrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .NFMsg.givemoneyrecord list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcgivemoneyrecord)
}

::google::protobuf::uint8* gcgivemoneyrecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcgivemoneyrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .NFMsg.givemoneyrecord list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcgivemoneyrecord)
  return target;
}

size_t gcgivemoneyrecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcgivemoneyrecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NFMsg.givemoneyrecord list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcgivemoneyrecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcgivemoneyrecord)
  GOOGLE_DCHECK_NE(&from, this);
  const gcgivemoneyrecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcgivemoneyrecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcgivemoneyrecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcgivemoneyrecord)
    MergeFrom(*source);
  }
}

void gcgivemoneyrecord::MergeFrom(const gcgivemoneyrecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcgivemoneyrecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcgivemoneyrecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcgivemoneyrecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcgivemoneyrecord::CopyFrom(const gcgivemoneyrecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcgivemoneyrecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcgivemoneyrecord::IsInitialized() const {
  return true;
}

void gcgivemoneyrecord::Swap(gcgivemoneyrecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcgivemoneyrecord::InternalSwap(gcgivemoneyrecord* other) {
  using std::swap;
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcgivemoneyrecord::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgregistration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgregistration::kUseridFieldNumber;
const int cgregistration::kOptypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgregistration::cgregistration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgregistration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgregistration)
}
cgregistration::cgregistration(const cgregistration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optype_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(optype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgregistration)
}

void cgregistration::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optype_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(optype_));
}

cgregistration::~cgregistration() {
  // @@protoc_insertion_point(destructor:NFMsg.cgregistration)
  SharedDtor();
}

void cgregistration::SharedDtor() {
}

void cgregistration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgregistration::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgregistration& cgregistration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgregistration.base);
  return *internal_default_instance();
}


void cgregistration::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgregistration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optype_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(optype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgregistration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgregistration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 optype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_optype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgregistration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgregistration)
  return false;
#undef DO_
}

void cgregistration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgregistration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 optype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->optype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgregistration)
}

::google::protobuf::uint8* cgregistration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgregistration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 optype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->optype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgregistration)
  return target;
}

size_t cgregistration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgregistration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 optype = 2;
    if (has_optype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgregistration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgregistration)
  GOOGLE_DCHECK_NE(&from, this);
  const cgregistration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgregistration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgregistration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgregistration)
    MergeFrom(*source);
  }
}

void cgregistration::MergeFrom(const cgregistration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgregistration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      optype_ = from.optype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgregistration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgregistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgregistration::CopyFrom(const cgregistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgregistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgregistration::IsInitialized() const {
  return true;
}

void cgregistration::Swap(cgregistration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgregistration::InternalSwap(cgregistration* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(optype_, other->optype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgregistration::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcregistration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcregistration::kResultFieldNumber;
const int gcregistration::kUseridFieldNumber;
const int gcregistration::kRegistration1FieldNumber;
const int gcregistration::kRegistration2FieldNumber;
const int gcregistration::kRegistration3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcregistration::gcregistration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcregistration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcregistration)
}
gcregistration::gcregistration(const gcregistration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  registration1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_registration1()) {
    registration1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration1_);
  }
  registration2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_registration2()) {
    registration2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration2_);
  }
  registration3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_registration3()) {
    registration3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration3_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcregistration)
}

void gcregistration::SharedCtor() {
  registration1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(userid_));
}

gcregistration::~gcregistration() {
  // @@protoc_insertion_point(destructor:NFMsg.gcregistration)
  SharedDtor();
}

void gcregistration::SharedDtor() {
  registration1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void gcregistration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcregistration::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcregistration& gcregistration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcregistration.base);
  return *internal_default_instance();
}


void gcregistration::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcregistration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      registration1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      registration2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      registration3_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcregistration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcregistration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string registration1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->registration1().data(), static_cast<int>(this->registration1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcregistration.registration1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string registration2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->registration2().data(), static_cast<int>(this->registration2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcregistration.registration2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string registration3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->registration3().data(), static_cast<int>(this->registration3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcregistration.registration3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcregistration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcregistration)
  return false;
#undef DO_
}

void gcregistration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcregistration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string registration1 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration1().data(), static_cast<int>(this->registration1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcregistration.registration1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->registration1(), output);
  }

  // optional string registration2 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration2().data(), static_cast<int>(this->registration2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcregistration.registration2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->registration2(), output);
  }

  // optional string registration3 = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration3().data(), static_cast<int>(this->registration3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcregistration.registration3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->registration3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcregistration)
}

::google::protobuf::uint8* gcregistration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcregistration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string registration1 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration1().data(), static_cast<int>(this->registration1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcregistration.registration1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->registration1(), target);
  }

  // optional string registration2 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration2().data(), static_cast<int>(this->registration2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcregistration.registration2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->registration2(), target);
  }

  // optional string registration3 = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->registration3().data(), static_cast<int>(this->registration3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcregistration.registration3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->registration3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcregistration)
  return target;
}

size_t gcregistration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcregistration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string registration1 = 3;
    if (has_registration1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->registration1());
    }

    // optional string registration2 = 4;
    if (has_registration2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->registration2());
    }

    // optional string registration3 = 5;
    if (has_registration3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->registration3());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcregistration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcregistration)
  GOOGLE_DCHECK_NE(&from, this);
  const gcregistration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcregistration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcregistration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcregistration)
    MergeFrom(*source);
  }
}

void gcregistration::MergeFrom(const gcregistration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcregistration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_registration1();
      registration1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_registration2();
      registration2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration2_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_registration3();
      registration3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration3_);
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000010u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcregistration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcregistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcregistration::CopyFrom(const gcregistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcregistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcregistration::IsInitialized() const {
  return true;
}

void gcregistration::Swap(gcregistration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcregistration::InternalSwap(gcregistration* other) {
  using std::swap;
  registration1_.Swap(&other->registration1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registration2_.Swap(&other->registration2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registration3_.Swap(&other->registration3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcregistration::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgluckturntable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgluckturntable::kUseridFieldNumber;
const int cgluckturntable::kOptypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgluckturntable::cgluckturntable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgluckturntable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgluckturntable)
}
cgluckturntable::cgluckturntable(const cgluckturntable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&optype_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(optype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgluckturntable)
}

void cgluckturntable::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optype_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(optype_));
}

cgluckturntable::~cgluckturntable() {
  // @@protoc_insertion_point(destructor:NFMsg.cgluckturntable)
  SharedDtor();
}

void cgluckturntable::SharedDtor() {
}

void cgluckturntable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgluckturntable::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgluckturntable& cgluckturntable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgluckturntable.base);
  return *internal_default_instance();
}


void cgluckturntable::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgluckturntable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&optype_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(optype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgluckturntable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgluckturntable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 optype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_optype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgluckturntable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgluckturntable)
  return false;
#undef DO_
}

void cgluckturntable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgluckturntable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 optype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->optype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgluckturntable)
}

::google::protobuf::uint8* cgluckturntable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgluckturntable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 optype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->optype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgluckturntable)
  return target;
}

size_t cgluckturntable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgluckturntable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 optype = 2;
    if (has_optype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgluckturntable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgluckturntable)
  GOOGLE_DCHECK_NE(&from, this);
  const cgluckturntable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgluckturntable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgluckturntable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgluckturntable)
    MergeFrom(*source);
  }
}

void cgluckturntable::MergeFrom(const cgluckturntable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgluckturntable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      optype_ = from.optype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgluckturntable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgluckturntable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgluckturntable::CopyFrom(const cgluckturntable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgluckturntable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgluckturntable::IsInitialized() const {
  return true;
}

void cgluckturntable::Swap(cgluckturntable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgluckturntable::InternalSwap(cgluckturntable* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(optype_, other->optype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgluckturntable::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcluckturntable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcluckturntable::kResultFieldNumber;
const int gcluckturntable::kUseridFieldNumber;
const int gcluckturntable::kTurnresultFieldNumber;
const int gcluckturntable::kTurntablenumFieldNumber;
const int gcluckturntable::kBsigninFieldNumber;
const int gcluckturntable::kTengamesFieldNumber;
const int gcluckturntable::kTodayshareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcluckturntable::gcluckturntable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcluckturntable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcluckturntable)
}
gcluckturntable::gcluckturntable(const gcluckturntable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&todayshare_) -
    reinterpret_cast<char*>(&result_)) + sizeof(todayshare_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcluckturntable)
}

void gcluckturntable::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&todayshare_) -
      reinterpret_cast<char*>(&result_)) + sizeof(todayshare_));
}

gcluckturntable::~gcluckturntable() {
  // @@protoc_insertion_point(destructor:NFMsg.gcluckturntable)
  SharedDtor();
}

void gcluckturntable::SharedDtor() {
}

void gcluckturntable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcluckturntable::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcluckturntable& gcluckturntable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcluckturntable.base);
  return *internal_default_instance();
}


void gcluckturntable::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcluckturntable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&todayshare_) -
        reinterpret_cast<char*>(&result_)) + sizeof(todayshare_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcluckturntable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcluckturntable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 turnresult = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_turnresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 turntablenum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_turntablenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turntablenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bsignin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_bsignin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bsignin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tengames = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_tengames();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tengames_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 todayshare = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_todayshare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &todayshare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcluckturntable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcluckturntable)
  return false;
#undef DO_
}

void gcluckturntable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcluckturntable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional int32 turnresult = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->turnresult(), output);
  }

  // optional int32 turntablenum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->turntablenum(), output);
  }

  // optional int32 bsignin = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bsignin(), output);
  }

  // optional int32 tengames = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->tengames(), output);
  }

  // optional int32 todayshare = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->todayshare(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcluckturntable)
}

::google::protobuf::uint8* gcluckturntable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcluckturntable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional int32 turnresult = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->turnresult(), target);
  }

  // optional int32 turntablenum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->turntablenum(), target);
  }

  // optional int32 bsignin = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bsignin(), target);
  }

  // optional int32 tengames = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->tengames(), target);
  }

  // optional int32 todayshare = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->todayshare(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcluckturntable)
  return target;
}

size_t gcluckturntable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcluckturntable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 turnresult = 3;
    if (has_turnresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->turnresult());
    }

    // optional int32 turntablenum = 4;
    if (has_turntablenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->turntablenum());
    }

    // optional int32 bsignin = 5;
    if (has_bsignin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bsignin());
    }

    // optional int32 tengames = 6;
    if (has_tengames()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tengames());
    }

    // optional int32 todayshare = 7;
    if (has_todayshare()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->todayshare());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcluckturntable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcluckturntable)
  GOOGLE_DCHECK_NE(&from, this);
  const gcluckturntable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcluckturntable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcluckturntable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcluckturntable)
    MergeFrom(*source);
  }
}

void gcluckturntable::MergeFrom(const gcluckturntable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcluckturntable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      turnresult_ = from.turnresult_;
    }
    if (cached_has_bits & 0x00000008u) {
      turntablenum_ = from.turntablenum_;
    }
    if (cached_has_bits & 0x00000010u) {
      bsignin_ = from.bsignin_;
    }
    if (cached_has_bits & 0x00000020u) {
      tengames_ = from.tengames_;
    }
    if (cached_has_bits & 0x00000040u) {
      todayshare_ = from.todayshare_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcluckturntable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcluckturntable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcluckturntable::CopyFrom(const gcluckturntable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcluckturntable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcluckturntable::IsInitialized() const {
  return true;
}

void gcluckturntable::Swap(gcluckturntable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcluckturntable::InternalSwap(gcluckturntable* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(userid_, other->userid_);
  swap(turnresult_, other->turnresult_);
  swap(turntablenum_, other->turntablenum_);
  swap(bsignin_, other->bsignin_);
  swap(tengames_, other->tengames_);
  swap(todayshare_, other->todayshare_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcluckturntable::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgupdateplayermoney::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgupdateplayermoney::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgupdateplayermoney::cgupdateplayermoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgupdateplayermoney.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgupdateplayermoney)
}
cgupdateplayermoney::cgupdateplayermoney(const cgupdateplayermoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgupdateplayermoney)
}

void cgupdateplayermoney::SharedCtor() {
  userid_ = 0;
}

cgupdateplayermoney::~cgupdateplayermoney() {
  // @@protoc_insertion_point(destructor:NFMsg.cgupdateplayermoney)
  SharedDtor();
}

void cgupdateplayermoney::SharedDtor() {
}

void cgupdateplayermoney::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgupdateplayermoney::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgupdateplayermoney& cgupdateplayermoney::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgupdateplayermoney.base);
  return *internal_default_instance();
}


void cgupdateplayermoney::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgupdateplayermoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgupdateplayermoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgupdateplayermoney)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgupdateplayermoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgupdateplayermoney)
  return false;
#undef DO_
}

void cgupdateplayermoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgupdateplayermoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgupdateplayermoney)
}

::google::protobuf::uint8* cgupdateplayermoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgupdateplayermoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgupdateplayermoney)
  return target;
}

size_t cgupdateplayermoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgupdateplayermoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgupdateplayermoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgupdateplayermoney)
  GOOGLE_DCHECK_NE(&from, this);
  const cgupdateplayermoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgupdateplayermoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgupdateplayermoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgupdateplayermoney)
    MergeFrom(*source);
  }
}

void cgupdateplayermoney::MergeFrom(const cgupdateplayermoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgupdateplayermoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cgupdateplayermoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgupdateplayermoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgupdateplayermoney::CopyFrom(const cgupdateplayermoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgupdateplayermoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgupdateplayermoney::IsInitialized() const {
  return true;
}

void cgupdateplayermoney::Swap(cgupdateplayermoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgupdateplayermoney::InternalSwap(cgupdateplayermoney* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgupdateplayermoney::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcupdateplayermoney::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcupdateplayermoney::kResultFieldNumber;
const int gcupdateplayermoney::kUseridFieldNumber;
const int gcupdateplayermoney::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcupdateplayermoney::gcupdateplayermoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcupdateplayermoney.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcupdateplayermoney)
}
gcupdateplayermoney::gcupdateplayermoney(const gcupdateplayermoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&result_)) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcupdateplayermoney)
}

void gcupdateplayermoney::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&result_)) + sizeof(money_));
}

gcupdateplayermoney::~gcupdateplayermoney() {
  // @@protoc_insertion_point(destructor:NFMsg.gcupdateplayermoney)
  SharedDtor();
}

void gcupdateplayermoney::SharedDtor() {
}

void gcupdateplayermoney::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcupdateplayermoney::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcupdateplayermoney& gcupdateplayermoney::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcupdateplayermoney.base);
  return *internal_default_instance();
}


void gcupdateplayermoney::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcupdateplayermoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&money_) -
        reinterpret_cast<char*>(&result_)) + sizeof(money_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcupdateplayermoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcupdateplayermoney)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcupdateplayermoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcupdateplayermoney)
  return false;
#undef DO_
}

void gcupdateplayermoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcupdateplayermoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional int32 money = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcupdateplayermoney)
}

::google::protobuf::uint8* gcupdateplayermoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcupdateplayermoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional int32 money = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcupdateplayermoney)
  return target;
}

size_t gcupdateplayermoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcupdateplayermoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 money = 3;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcupdateplayermoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcupdateplayermoney)
  GOOGLE_DCHECK_NE(&from, this);
  const gcupdateplayermoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcupdateplayermoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcupdateplayermoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcupdateplayermoney)
    MergeFrom(*source);
  }
}

void gcupdateplayermoney::MergeFrom(const gcupdateplayermoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcupdateplayermoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcupdateplayermoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcupdateplayermoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcupdateplayermoney::CopyFrom(const gcupdateplayermoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcupdateplayermoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcupdateplayermoney::IsInitialized() const {
  return true;
}

void gcupdateplayermoney::Swap(gcupdateplayermoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcupdateplayermoney::InternalSwap(gcupdateplayermoney* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(userid_, other->userid_);
  swap(money_, other->money_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcupdateplayermoney::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgaltersomeplayerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgaltersomeplayerinfo::kUseridFieldNumber;
const int cgaltersomeplayerinfo::kOptypeFieldNumber;
const int cgaltersomeplayerinfo::kCaninviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgaltersomeplayerinfo::cgaltersomeplayerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgaltersomeplayerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgaltersomeplayerinfo)
}
cgaltersomeplayerinfo::cgaltersomeplayerinfo(const cgaltersomeplayerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&caninvite_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(caninvite_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgaltersomeplayerinfo)
}

void cgaltersomeplayerinfo::SharedCtor() {
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&caninvite_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(caninvite_));
}

cgaltersomeplayerinfo::~cgaltersomeplayerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.cgaltersomeplayerinfo)
  SharedDtor();
}

void cgaltersomeplayerinfo::SharedDtor() {
}

void cgaltersomeplayerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgaltersomeplayerinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgaltersomeplayerinfo& cgaltersomeplayerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgaltersomeplayerinfo.base);
  return *internal_default_instance();
}


void cgaltersomeplayerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgaltersomeplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&caninvite_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(caninvite_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgaltersomeplayerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgaltersomeplayerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 optype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_optype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caninvite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_caninvite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caninvite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgaltersomeplayerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgaltersomeplayerinfo)
  return false;
#undef DO_
}

void cgaltersomeplayerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgaltersomeplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 optype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->optype(), output);
  }

  // optional int32 caninvite = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->caninvite(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgaltersomeplayerinfo)
}

::google::protobuf::uint8* cgaltersomeplayerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgaltersomeplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 optype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->optype(), target);
  }

  // optional int32 caninvite = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->caninvite(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgaltersomeplayerinfo)
  return target;
}

size_t cgaltersomeplayerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgaltersomeplayerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 optype = 2;
    if (has_optype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optype());
    }

    // optional int32 caninvite = 3;
    if (has_caninvite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caninvite());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgaltersomeplayerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgaltersomeplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const cgaltersomeplayerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgaltersomeplayerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgaltersomeplayerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgaltersomeplayerinfo)
    MergeFrom(*source);
  }
}

void cgaltersomeplayerinfo::MergeFrom(const cgaltersomeplayerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgaltersomeplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      optype_ = from.optype_;
    }
    if (cached_has_bits & 0x00000004u) {
      caninvite_ = from.caninvite_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgaltersomeplayerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgaltersomeplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgaltersomeplayerinfo::CopyFrom(const cgaltersomeplayerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgaltersomeplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgaltersomeplayerinfo::IsInitialized() const {
  return true;
}

void cgaltersomeplayerinfo::Swap(cgaltersomeplayerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgaltersomeplayerinfo::InternalSwap(cgaltersomeplayerinfo* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(optype_, other->optype_);
  swap(caninvite_, other->caninvite_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgaltersomeplayerinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcaltersomeplayerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcaltersomeplayerinfo::kResultFieldNumber;
const int gcaltersomeplayerinfo::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcaltersomeplayerinfo::gcaltersomeplayerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcaltersomeplayerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcaltersomeplayerinfo)
}
gcaltersomeplayerinfo::gcaltersomeplayerinfo(const gcaltersomeplayerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcaltersomeplayerinfo)
}

void gcaltersomeplayerinfo::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(userid_));
}

gcaltersomeplayerinfo::~gcaltersomeplayerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.gcaltersomeplayerinfo)
  SharedDtor();
}

void gcaltersomeplayerinfo::SharedDtor() {
}

void gcaltersomeplayerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcaltersomeplayerinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcaltersomeplayerinfo& gcaltersomeplayerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcaltersomeplayerinfo.base);
  return *internal_default_instance();
}


void gcaltersomeplayerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcaltersomeplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcaltersomeplayerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcaltersomeplayerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcaltersomeplayerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcaltersomeplayerinfo)
  return false;
#undef DO_
}

void gcaltersomeplayerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcaltersomeplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcaltersomeplayerinfo)
}

::google::protobuf::uint8* gcaltersomeplayerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcaltersomeplayerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcaltersomeplayerinfo)
  return target;
}

size_t gcaltersomeplayerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcaltersomeplayerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcaltersomeplayerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcaltersomeplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const gcaltersomeplayerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcaltersomeplayerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcaltersomeplayerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcaltersomeplayerinfo)
    MergeFrom(*source);
  }
}

void gcaltersomeplayerinfo::MergeFrom(const gcaltersomeplayerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcaltersomeplayerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcaltersomeplayerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcaltersomeplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcaltersomeplayerinfo::CopyFrom(const gcaltersomeplayerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcaltersomeplayerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcaltersomeplayerinfo::IsInitialized() const {
  return true;
}

void gcaltersomeplayerinfo::Swap(gcaltersomeplayerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcaltersomeplayerinfo::InternalSwap(gcaltersomeplayerinfo* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcaltersomeplayerinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgaccountlogin* Arena::CreateMaybeMessage< ::NFMsg::cgaccountlogin >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgaccountlogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcaccountlogin* Arena::CreateMaybeMessage< ::NFMsg::gcaccountlogin >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcaccountlogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cggetplayerinfo* Arena::CreateMaybeMessage< ::NFMsg::cggetplayerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cggetplayerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcgetplayerinfo* Arena::CreateMaybeMessage< ::NFMsg::gcgetplayerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcgetplayerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgreconnect* Arena::CreateMaybeMessage< ::NFMsg::cgreconnect >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgreconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcreconnect* Arena::CreateMaybeMessage< ::NFMsg::gcreconnect >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcreconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gckitplayer* Arena::CreateMaybeMessage< ::NFMsg::gckitplayer >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gckitplayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcnoticeinfo* Arena::CreateMaybeMessage< ::NFMsg::gcnoticeinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcnoticeinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgheartbeat* Arena::CreateMaybeMessage< ::NFMsg::cgheartbeat >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgheartbeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcheartbeat* Arena::CreateMaybeMessage< ::NFMsg::gcheartbeat >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcheartbeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cggetinitinfo* Arena::CreateMaybeMessage< ::NFMsg::cggetinitinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cggetinitinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcgetinitinfo* Arena::CreateMaybeMessage< ::NFMsg::gcgetinitinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcgetinitinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcbroadcast* Arena::CreateMaybeMessage< ::NFMsg::gcbroadcast >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcbroadcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cggetmaillist* Arena::CreateMaybeMessage< ::NFMsg::cggetmaillist >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cggetmaillist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcgetmaillist* Arena::CreateMaybeMessage< ::NFMsg::gcgetmaillist >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcgetmaillist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgreadmail* Arena::CreateMaybeMessage< ::NFMsg::cgreadmail >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgreadmail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcreadmail* Arena::CreateMaybeMessage< ::NFMsg::gcreadmail >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcreadmail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cggetmailgoods* Arena::CreateMaybeMessage< ::NFMsg::cggetmailgoods >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cggetmailgoods >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcgetmailgoods* Arena::CreateMaybeMessage< ::NFMsg::gcgetmailgoods >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcgetmailgoods >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgdeletemail* Arena::CreateMaybeMessage< ::NFMsg::cgdeletemail >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgdeletemail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcdeletemail* Arena::CreateMaybeMessage< ::NFMsg::gcdeletemail >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcdeletemail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgplayerstatus* Arena::CreateMaybeMessage< ::NFMsg::cgplayerstatus >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgplayerstatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcplayerstatus* Arena::CreateMaybeMessage< ::NFMsg::gcplayerstatus >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcplayerstatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgupdateplayerinfo* Arena::CreateMaybeMessage< ::NFMsg::cgupdateplayerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgupdateplayerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcupdateplayerinfo* Arena::CreateMaybeMessage< ::NFMsg::gcupdateplayerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcupdateplayerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcupdategoodslist* Arena::CreateMaybeMessage< ::NFMsg::gcupdategoodslist >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcupdategoodslist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgagencyopt* Arena::CreateMaybeMessage< ::NFMsg::cgagencyopt >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgagencyopt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcagencyopt* Arena::CreateMaybeMessage< ::NFMsg::gcagencyopt >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcagencyopt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgentertable* Arena::CreateMaybeMessage< ::NFMsg::cgentertable >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgentertable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcentertable* Arena::CreateMaybeMessage< ::NFMsg::gcentertable >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcentertable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cggetagencyinfo* Arena::CreateMaybeMessage< ::NFMsg::cggetagencyinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cggetagencyinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcgetagencyinfo* Arena::CreateMaybeMessage< ::NFMsg::gcgetagencyinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcgetagencyinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cginvitebind* Arena::CreateMaybeMessage< ::NFMsg::cginvitebind >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cginvitebind >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcinvitebind* Arena::CreateMaybeMessage< ::NFMsg::gcinvitebind >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcinvitebind >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cggivemoney* Arena::CreateMaybeMessage< ::NFMsg::cggivemoney >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cggivemoney >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcgivemoney* Arena::CreateMaybeMessage< ::NFMsg::gcgivemoney >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcgivemoney >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgapplygroupmaster* Arena::CreateMaybeMessage< ::NFMsg::cgapplygroupmaster >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgapplygroupmaster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcapplygroupmaster* Arena::CreateMaybeMessage< ::NFMsg::gcapplygroupmaster >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcapplygroupmaster >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cggivemoneyrecord* Arena::CreateMaybeMessage< ::NFMsg::cggivemoneyrecord >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cggivemoneyrecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcgivemoneyrecord* Arena::CreateMaybeMessage< ::NFMsg::gcgivemoneyrecord >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcgivemoneyrecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgregistration* Arena::CreateMaybeMessage< ::NFMsg::cgregistration >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgregistration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcregistration* Arena::CreateMaybeMessage< ::NFMsg::gcregistration >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcregistration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgluckturntable* Arena::CreateMaybeMessage< ::NFMsg::cgluckturntable >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgluckturntable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcluckturntable* Arena::CreateMaybeMessage< ::NFMsg::gcluckturntable >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcluckturntable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgupdateplayermoney* Arena::CreateMaybeMessage< ::NFMsg::cgupdateplayermoney >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgupdateplayermoney >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcupdateplayermoney* Arena::CreateMaybeMessage< ::NFMsg::gcupdateplayermoney >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcupdateplayermoney >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgaltersomeplayerinfo* Arena::CreateMaybeMessage< ::NFMsg::cgaltersomeplayerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgaltersomeplayerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcaltersomeplayerinfo* Arena::CreateMaybeMessage< ::NFMsg::gcaltersomeplayerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcaltersomeplayerinfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
