// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_human.proto

#include "msg_human.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_msg_5fhuman_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_playerinfo;
}  // namespace protobuf_msg_5fhuman_2eproto
namespace NFMsg {
class accountinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<accountinfo>
      _instance;
} _accountinfo_default_instance_;
class playerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<playerinfo>
      _instance;
} _playerinfo_default_instance_;
class cgaccountloginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgaccountlogin>
      _instance;
} _cgaccountlogin_default_instance_;
class gcaccountloginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcaccountlogin>
      _instance;
} _gcaccountlogin_default_instance_;
class cgreconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgreconnect>
      _instance;
} _cgreconnect_default_instance_;
class gcreconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcreconnect>
      _instance;
} _gcreconnect_default_instance_;
class cgheartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgheartbeat>
      _instance;
} _cgheartbeat_default_instance_;
class gcheartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcheartbeat>
      _instance;
} _gcheartbeat_default_instance_;
class gckitplayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gckitplayer>
      _instance;
} _gckitplayer_default_instance_;
class cgentertableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cgentertable>
      _instance;
} _cgentertable_default_instance_;
class gcentertableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gcentertable>
      _instance;
} _gcentertable_default_instance_;
}  // namespace NFMsg
namespace protobuf_msg_5fhuman_2eproto {
static void InitDefaultsaccountinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_accountinfo_default_instance_;
    new (ptr) ::NFMsg::accountinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::accountinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_accountinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsaccountinfo}, {}};

static void InitDefaultsplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_playerinfo_default_instance_;
    new (ptr) ::NFMsg::playerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::playerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_playerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsplayerinfo}, {}};

static void InitDefaultscgaccountlogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgaccountlogin_default_instance_;
    new (ptr) ::NFMsg::cgaccountlogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgaccountlogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgaccountlogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgaccountlogin}, {}};

static void InitDefaultsgcaccountlogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcaccountlogin_default_instance_;
    new (ptr) ::NFMsg::gcaccountlogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcaccountlogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gcaccountlogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgcaccountlogin}, {
      &protobuf_msg_5fhuman_2eproto::scc_info_playerinfo.base,}};

static void InitDefaultscgreconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgreconnect_default_instance_;
    new (ptr) ::NFMsg::cgreconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgreconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgreconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgreconnect}, {}};

static void InitDefaultsgcreconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcreconnect_default_instance_;
    new (ptr) ::NFMsg::gcreconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcreconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcreconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcreconnect}, {}};

static void InitDefaultscgheartbeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgheartbeat_default_instance_;
    new (ptr) ::NFMsg::cgheartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgheartbeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgheartbeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgheartbeat}, {}};

static void InitDefaultsgcheartbeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcheartbeat_default_instance_;
    new (ptr) ::NFMsg::gcheartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcheartbeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcheartbeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcheartbeat}, {}};

static void InitDefaultsgckitplayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gckitplayer_default_instance_;
    new (ptr) ::NFMsg::gckitplayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gckitplayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gckitplayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgckitplayer}, {}};

static void InitDefaultscgentertable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_cgentertable_default_instance_;
    new (ptr) ::NFMsg::cgentertable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::cgentertable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cgentertable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscgentertable}, {}};

static void InitDefaultsgcentertable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_gcentertable_default_instance_;
    new (ptr) ::NFMsg::gcentertable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::gcentertable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_gcentertable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgcentertable}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_accountinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_playerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgaccountlogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcaccountlogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgreconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcreconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgheartbeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcheartbeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gckitplayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cgentertable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gcentertable.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, userid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, regdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, phonenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, viplevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, jetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, popularity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, idenstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bindtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bindnick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, platformid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, devname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, mobiletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, lasttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, penulttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, isban_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, isrobot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, playtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bankjetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, blacklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, propertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, location_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, location_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bank_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bank_jetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, agent1_),
  28,
  0,
  1,
  2,
  3,
  4,
  29,
  30,
  5,
  6,
  31,
  32,
  33,
  7,
  34,
  35,
  8,
  9,
  10,
  36,
  37,
  38,
  11,
  12,
  13,
  14,
  15,
  39,
  40,
  41,
  42,
  43,
  16,
  17,
  18,
  19,
  44,
  45,
  20,
  21,
  22,
  23,
  46,
  47,
  48,
  24,
  25,
  26,
  27,
  49,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, devname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, macname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, mobileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, phonenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, inviterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, bindtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, pushtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, platformid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, bindnick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, mobiletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, authcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgaccountlogin, email_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  15,
  9,
  16,
  17,
  18,
  10,
  11,
  12,
  19,
  20,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, pinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, tableid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, systime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcaccountlogin, tabletype_),
  1,
  0,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgreconnect, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, msgbegin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcreconnect, tableid_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgheartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgheartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgheartbeat, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcheartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcheartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcheartbeat, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, kittype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gckitplayer, msg_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, tableid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::cgentertable, password_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcentertable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcentertable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::gcentertable, result_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::NFMsg::accountinfo)},
  { 11, 66, sizeof(::NFMsg::playerinfo)},
  { 116, 142, sizeof(::NFMsg::cgaccountlogin)},
  { 163, 173, sizeof(::NFMsg::gcaccountlogin)},
  { 178, 184, sizeof(::NFMsg::cgreconnect)},
  { 185, 193, sizeof(::NFMsg::gcreconnect)},
  { 196, 202, sizeof(::NFMsg::cgheartbeat)},
  { 203, 209, sizeof(::NFMsg::gcheartbeat)},
  { 210, 218, sizeof(::NFMsg::gckitplayer)},
  { 221, 229, sizeof(::NFMsg::cgentertable)},
  { 232, 238, sizeof(::NFMsg::gcentertable)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_accountinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_playerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgaccountlogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcaccountlogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgreconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcreconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgheartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcheartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gckitplayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_cgentertable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_gcentertable_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg_human.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017msg_human.proto\022\005NFMsg\"@\n\013accountinfo\022"
      "\017\n\007account\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\016\n\006us"
      "erid\030\003 \001(\004\"\342\006\n\nplayerinfo\022\016\n\006userid\030\001 \001("
      "\005\022\013\n\003cid\030\002 \001(\t\022\017\n\007account\030\003 \001(\t\022\020\n\010passw"
      "ord\030\004 \001(\t\022\020\n\010nickname\030\005 \001(\t\022\017\n\007regdate\030\007"
      " \001(\t\022\013\n\003sex\030\010 \001(\005\022\013\n\003age\030\t \001(\005\022\r\n\005email\030"
      "\n \001(\t\022\020\n\010phonenum\030\013 \001(\t\022\013\n\003exp\030\014 \001(\005\022\r\n\005"
      "level\030\r \001(\005\022\020\n\010viplevel\030\016 \001(\005\022\016\n\006jetton\030"
      "\017 \001(\t\022\014\n\004gold\030\020 \001(\005\022\r\n\005money\030\021 \001(\005\022\017\n\007ch"
      "annel\030\022 \001(\t\022\020\n\010province\030\023 \001(\t\022\014\n\004city\030\024 "
      "\001(\t\022\022\n\npopularity\030\025 \001(\005\022\022\n\nidenstatus\030\026 "
      "\001(\005\022\020\n\010bindtype\030\027 \001(\005\022\020\n\010bindnick\030\030 \001(\t\022"
      "\022\n\nplatformid\030\031 \001(\t\022\014\n\004imei\030\032 \001(\t\022\017\n\007dev"
      "name\030\033 \001(\t\022\n\n\002ip\030\034 \001(\t\022\022\n\nmobiletype\030\035 \001"
      "(\005\022\020\n\010lasttime\030\036 \001(\005\022\022\n\npenulttime\030\037 \001(\005"
      "\022\016\n\006silent\030  \001(\005\022\r\n\005isban\030! \001(\005\022\016\n\006face_"
      "1\030\" \001(\t\022\016\n\006face_2\030# \001(\t\022\016\n\006face_3\030$ \001(\t\022"
      "\016\n\006face_4\030% \001(\t\022\017\n\007isrobot\030& \001(\005\022\020\n\010play"
      "type\030\' \001(\005\022\023\n\013description\030( \001(\t\022\020\n\010locat"
      "ion\030) \001(\t\022\022\n\nbankjetton\030* \001(\t\022\r\n\005title\030+"
      " \001(\t\022\021\n\tblacklist\030, \001(\005\022\022\n\npropertyid\030- "
      "\001(\005\022\016\n\006ticket\030. \001(\005\022\022\n\nlocation_x\030/ \001(\t\022"
      "\022\n\nlocation_y\0300 \001(\t\022\025\n\rbank_password\0301 \001"
      "(\t\022\023\n\013bank_jetton\0302 \001(\t\022\016\n\006agent1\0303 \001(\005\""
      "\366\002\n\016cgaccountlogin\022\017\n\007account\030\001 \001(\t\022\020\n\010p"
      "assword\030\002 \001(\t\022\014\n\004imei\030\004 \001(\t\022\020\n\010nickname\030"
      "\005 \001(\t\022\017\n\007devname\030\006 \001(\t\022\017\n\007macname\030\007 \001(\t\022"
      "\017\n\007channel\030\010 \001(\t\022\020\n\010province\030\t \001(\t\022\014\n\004ci"
      "ty\030\n \001(\t\022\020\n\010mobileid\030\013 \001(\005\022\020\n\010phonenum\030\014"
      " \001(\t\022\021\n\tinviterid\030\r \001(\005\022\020\n\010bindtype\030\016 \001("
      "\005\022\020\n\010pushtype\030\017 \001(\005\022\013\n\003cid\030\020 \001(\t\022\022\n\nplat"
      "formid\030\021 \001(\t\022\020\n\010bindnick\030\022 \001(\t\022\022\n\nmobile"
      "type\030\023 \001(\005\022\013\n\003sex\030\024 \001(\005\022\020\n\010authcode\030\025 \001("
      "\t\022\r\n\005email\030\026 \001(\t\"w\n\016gcaccountlogin\022\016\n\006re"
      "sult\030\001 \001(\005\022 \n\005pinfo\030\002 \001(\0132\021.NFMsg.player"
      "info\022\017\n\007tableid\030\003 \001(\005\022\017\n\007systime\030\004 \001(\005\022\021"
      "\n\ttabletype\030\005 \001(\005\"\035\n\013cgreconnect\022\016\n\006user"
      "id\030\001 \001(\005\"@\n\013gcreconnect\022\016\n\006result\030\001 \001(\005\022"
      "\020\n\010msgbegin\030\002 \001(\t\022\017\n\007tableid\030\003 \001(\005\"\035\n\013cg"
      "heartbeat\022\016\n\006userid\030\001 \001(\005\"\035\n\013gcheartbeat"
      "\022\016\n\006result\030\001 \001(\005\";\n\013gckitplayer\022\016\n\006resul"
      "t\030\001 \001(\005\022\017\n\007kittype\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"A\n"
      "\014cgentertable\022\016\n\006userid\030\001 \001(\005\022\017\n\007tableid"
      "\030\002 \001(\005\022\020\n\010password\030\003 \001(\t\"\036\n\014gcentertable"
      "\022\016\n\006result\030\001 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1776);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_human.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_5fhuman_2eproto
namespace NFMsg {

// ===================================================================

void accountinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int accountinfo::kAccountFieldNumber;
const int accountinfo::kPasswordFieldNumber;
const int accountinfo::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

accountinfo::accountinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_accountinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.accountinfo)
}
accountinfo::accountinfo(const accountinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.accountinfo)
}

void accountinfo::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
}

accountinfo::~accountinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.accountinfo)
  SharedDtor();
}

void accountinfo::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void accountinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* accountinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const accountinfo& accountinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_accountinfo.base);
  return *internal_default_instance();
}


void accountinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.accountinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool accountinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.accountinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.accountinfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.accountinfo.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 userid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.accountinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.accountinfo)
  return false;
#undef DO_
}

void accountinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.accountinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional uint64 userid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.accountinfo)
}

::google::protobuf::uint8* accountinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.accountinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional uint64 userid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.accountinfo)
  return target;
}

size_t accountinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.accountinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional uint64 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void accountinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.accountinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const accountinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const accountinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.accountinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.accountinfo)
    MergeFrom(*source);
  }
}

void accountinfo::MergeFrom(const accountinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.accountinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void accountinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.accountinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void accountinfo::CopyFrom(const accountinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.accountinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool accountinfo::IsInitialized() const {
  return true;
}

void accountinfo::Swap(accountinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void accountinfo::InternalSwap(accountinfo* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata accountinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void playerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int playerinfo::kUseridFieldNumber;
const int playerinfo::kCidFieldNumber;
const int playerinfo::kAccountFieldNumber;
const int playerinfo::kPasswordFieldNumber;
const int playerinfo::kNicknameFieldNumber;
const int playerinfo::kRegdateFieldNumber;
const int playerinfo::kSexFieldNumber;
const int playerinfo::kAgeFieldNumber;
const int playerinfo::kEmailFieldNumber;
const int playerinfo::kPhonenumFieldNumber;
const int playerinfo::kExpFieldNumber;
const int playerinfo::kLevelFieldNumber;
const int playerinfo::kViplevelFieldNumber;
const int playerinfo::kJettonFieldNumber;
const int playerinfo::kGoldFieldNumber;
const int playerinfo::kMoneyFieldNumber;
const int playerinfo::kChannelFieldNumber;
const int playerinfo::kProvinceFieldNumber;
const int playerinfo::kCityFieldNumber;
const int playerinfo::kPopularityFieldNumber;
const int playerinfo::kIdenstatusFieldNumber;
const int playerinfo::kBindtypeFieldNumber;
const int playerinfo::kBindnickFieldNumber;
const int playerinfo::kPlatformidFieldNumber;
const int playerinfo::kImeiFieldNumber;
const int playerinfo::kDevnameFieldNumber;
const int playerinfo::kIpFieldNumber;
const int playerinfo::kMobiletypeFieldNumber;
const int playerinfo::kLasttimeFieldNumber;
const int playerinfo::kPenulttimeFieldNumber;
const int playerinfo::kSilentFieldNumber;
const int playerinfo::kIsbanFieldNumber;
const int playerinfo::kFace1FieldNumber;
const int playerinfo::kFace2FieldNumber;
const int playerinfo::kFace3FieldNumber;
const int playerinfo::kFace4FieldNumber;
const int playerinfo::kIsrobotFieldNumber;
const int playerinfo::kPlaytypeFieldNumber;
const int playerinfo::kDescriptionFieldNumber;
const int playerinfo::kLocationFieldNumber;
const int playerinfo::kBankjettonFieldNumber;
const int playerinfo::kTitleFieldNumber;
const int playerinfo::kBlacklistFieldNumber;
const int playerinfo::kPropertyidFieldNumber;
const int playerinfo::kTicketFieldNumber;
const int playerinfo::kLocationXFieldNumber;
const int playerinfo::kLocationYFieldNumber;
const int playerinfo::kBankPasswordFieldNumber;
const int playerinfo::kBankJettonFieldNumber;
const int playerinfo::kAgent1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

playerinfo::playerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_playerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.playerinfo)
}
playerinfo::playerinfo(const playerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cid()) {
    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_regdate()) {
    regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jetton()) {
    jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jetton_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bindnick()) {
    bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
  }
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platformid()) {
    platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devname()) {
    devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_1()) {
    face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
  }
  face_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_2()) {
    face_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_2_);
  }
  face_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_3()) {
    face_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_3_);
  }
  face_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_4()) {
    face_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_4_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location()) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  bankjetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bankjetton()) {
    bankjetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankjetton_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  location_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_x()) {
    location_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_x_);
  }
  location_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_y()) {
    location_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_y_);
  }
  bank_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_password()) {
    bank_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_password_);
  }
  bank_jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_jetton()) {
    bank_jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_jetton_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&agent1_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(agent1_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.playerinfo)
}

void playerinfo::SharedCtor() {
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankjetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&agent1_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(agent1_));
}

playerinfo::~playerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.playerinfo)
  SharedDtor();
}

void playerinfo::SharedDtor() {
  cid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankjetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_jetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void playerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* playerinfo::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const playerinfo& playerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_playerinfo.base);
  return *internal_default_instance();
}


void playerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      cid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      regdate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      phonenum_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      jetton_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      channel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      province_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      city_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      bindnick_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      platformid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00002000u) {
      imei_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00004000u) {
      devname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00008000u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      face_1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00020000u) {
      face_2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00040000u) {
      face_3_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00080000u) {
      face_4_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00100000u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00200000u) {
      location_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00400000u) {
      bankjetton_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00800000u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 251658240u) {
    if (cached_has_bits & 0x01000000u) {
      location_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x02000000u) {
      location_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x04000000u) {
      bank_password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x08000000u) {
      bank_jetton_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 4026531840u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exp_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(exp_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mobiletype_) -
        reinterpret_cast<char*>(&level_)) + sizeof(mobiletype_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&lasttime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&propertyid_) -
        reinterpret_cast<char*>(&lasttime_)) + sizeof(propertyid_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&ticket_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&agent1_) -
        reinterpret_cast<char*>(&ticket_)) + sizeof(agent1_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool playerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.playerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cid().data(), static_cast<int>(this->cid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.cid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string regdate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regdate().data(), static_cast<int>(this->regdate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.regdate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 age = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phonenum = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenum().data(), static_cast<int>(this->phonenum().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.phonenum");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 viplevel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_viplevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string jetton = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jetton().data(), static_cast<int>(this->jetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.jetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string province = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), static_cast<int>(this->province().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.city");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 popularity = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_popularity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &popularity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 idenstatus = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_idenstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idenstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bindtype = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_bindtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bindtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bindnick = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bindnick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bindnick().data(), static_cast<int>(this->bindnick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bindnick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string platformid = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platformid().data(), static_cast<int>(this->platformid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.platformid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string devname = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devname().data(), static_cast<int>(this->devname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.devname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mobiletype = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_mobiletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobiletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lasttime = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_lasttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lasttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 penulttime = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_penulttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &penulttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 silent = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_silent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &silent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isban = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_isban();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isban_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_1 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_1().data(), static_cast<int>(this->face_1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_2 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_2().data(), static_cast<int>(this->face_2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_3 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_3().data(), static_cast<int>(this->face_3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_4 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_4().data(), static_cast<int>(this->face_4().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_4");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isrobot = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          set_has_isrobot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isrobot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 playtype = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          set_has_playtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bankjetton = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankjetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bankjetton().data(), static_cast<int>(this->bankjetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bankjetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blacklist = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          set_has_blacklist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blacklist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 propertyid = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_propertyid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &propertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ticket = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          set_has_ticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location_x = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_x()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location_x().data(), static_cast<int>(this->location_x().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.location_x");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location_y = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location_y().data(), static_cast<int>(this->location_y().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.location_y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_password = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bank_password().data(), static_cast<int>(this->bank_password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bank_password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_jetton = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_jetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bank_jetton().data(), static_cast<int>(this->bank_jetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bank_jetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 agent1 = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {
          set_has_agent1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agent1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.playerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.playerinfo)
  return false;
#undef DO_
}

void playerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string cid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.cid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cid(), output);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional string password = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional string regdate = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), static_cast<int>(this->regdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.regdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->regdate(), output);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sex(), output);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->age(), output);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->email(), output);
  }

  // optional string phonenum = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.phonenum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->phonenum(), output);
  }

  // optional int32 exp = 12;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->exp(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 level = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->level(), output);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->viplevel(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string jetton = 15;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jetton().data(), static_cast<int>(this->jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.jetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->jetton(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 gold = 16;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->gold(), output);
  }

  // optional int32 money = 17;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->money(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string channel = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->channel(), output);
  }

  // optional string province = 19;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->province(), output);
  }

  // optional string city = 20;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->city(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->popularity(), output);
  }

  // optional int32 idenstatus = 22;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->idenstatus(), output);
  }

  // optional int32 bindtype = 23;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->bindtype(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string bindnick = 24;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bindnick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->bindnick(), output);
  }

  // optional string platformid = 25;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.platformid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->platformid(), output);
  }

  // optional string imei = 26;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->imei(), output);
  }

  // optional string devname = 27;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.devname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->devname(), output);
  }

  // optional string ip = 28;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->ip(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 mobiletype = 29;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->mobiletype(), output);
  }

  // optional int32 lasttime = 30;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->lasttime(), output);
  }

  // optional int32 penulttime = 31;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->penulttime(), output);
  }

  // optional int32 silent = 32;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->silent(), output);
  }

  // optional int32 isban = 33;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->isban(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string face_1 = 34;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->face_1(), output);
  }

  // optional string face_2 = 35;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_2().data(), static_cast<int>(this->face_2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      35, this->face_2(), output);
  }

  // optional string face_3 = 36;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_3().data(), static_cast<int>(this->face_3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      36, this->face_3(), output);
  }

  // optional string face_4 = 37;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_4().data(), static_cast<int>(this->face_4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      37, this->face_4(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 isrobot = 38;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->isrobot(), output);
  }

  // optional int32 playtype = 39;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->playtype(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string description = 40;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->description(), output);
  }

  // optional string location = 41;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->location(), output);
  }

  // optional string bankjetton = 42;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankjetton().data(), static_cast<int>(this->bankjetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bankjetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->bankjetton(), output);
  }

  // optional string title = 43;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      43, this->title(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 blacklist = 44;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->blacklist(), output);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->propertyid(), output);
  }

  // optional int32 ticket = 46;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->ticket(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string location_x = 47;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_x().data(), static_cast<int>(this->location_x().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_x");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      47, this->location_x(), output);
  }

  // optional string location_y = 48;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_y().data(), static_cast<int>(this->location_y().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->location_y(), output);
  }

  // optional string bank_password = 49;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_password().data(), static_cast<int>(this->bank_password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      49, this->bank_password(), output);
  }

  // optional string bank_jetton = 50;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_jetton().data(), static_cast<int>(this->bank_jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_jetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->bank_jetton(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 agent1 = 51;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(51, this->agent1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.playerinfo)
}

::google::protobuf::uint8* playerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string cid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.cid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cid(), target);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional string password = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional string regdate = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), static_cast<int>(this->regdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.regdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->regdate(), target);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sex(), target);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->age(), target);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->email(), target);
  }

  // optional string phonenum = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.phonenum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->phonenum(), target);
  }

  // optional int32 exp = 12;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->exp(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 level = 13;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->level(), target);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->viplevel(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string jetton = 15;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jetton().data(), static_cast<int>(this->jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.jetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->jetton(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 gold = 16;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->gold(), target);
  }

  // optional int32 money = 17;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->money(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string channel = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->channel(), target);
  }

  // optional string province = 19;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->province(), target);
  }

  // optional string city = 20;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->city(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->popularity(), target);
  }

  // optional int32 idenstatus = 22;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->idenstatus(), target);
  }

  // optional int32 bindtype = 23;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->bindtype(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string bindnick = 24;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bindnick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->bindnick(), target);
  }

  // optional string platformid = 25;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.platformid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->platformid(), target);
  }

  // optional string imei = 26;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->imei(), target);
  }

  // optional string devname = 27;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.devname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->devname(), target);
  }

  // optional string ip = 28;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->ip(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 mobiletype = 29;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->mobiletype(), target);
  }

  // optional int32 lasttime = 30;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->lasttime(), target);
  }

  // optional int32 penulttime = 31;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->penulttime(), target);
  }

  // optional int32 silent = 32;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->silent(), target);
  }

  // optional int32 isban = 33;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->isban(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string face_1 = 34;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->face_1(), target);
  }

  // optional string face_2 = 35;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_2().data(), static_cast<int>(this->face_2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->face_2(), target);
  }

  // optional string face_3 = 36;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_3().data(), static_cast<int>(this->face_3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->face_3(), target);
  }

  // optional string face_4 = 37;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_4().data(), static_cast<int>(this->face_4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->face_4(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 isrobot = 38;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->isrobot(), target);
  }

  // optional int32 playtype = 39;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->playtype(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string description = 40;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->description(), target);
  }

  // optional string location = 41;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->location(), target);
  }

  // optional string bankjetton = 42;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankjetton().data(), static_cast<int>(this->bankjetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bankjetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->bankjetton(), target);
  }

  // optional string title = 43;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        43, this->title(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 blacklist = 44;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->blacklist(), target);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->propertyid(), target);
  }

  // optional int32 ticket = 46;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->ticket(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string location_x = 47;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_x().data(), static_cast<int>(this->location_x().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_x");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->location_x(), target);
  }

  // optional string location_y = 48;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_y().data(), static_cast<int>(this->location_y().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->location_y(), target);
  }

  // optional string bank_password = 49;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_password().data(), static_cast<int>(this->bank_password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        49, this->bank_password(), target);
  }

  // optional string bank_jetton = 50;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_jetton().data(), static_cast<int>(this->bank_jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_jetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->bank_jetton(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 agent1 = 51;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(51, this->agent1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.playerinfo)
  return target;
}

size_t playerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.playerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string cid = 2;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cid());
    }

    // optional string account = 3;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 4;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string nickname = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string regdate = 7;
    if (has_regdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regdate());
    }

    // optional string email = 10;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string phonenum = 11;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

    // optional string jetton = 15;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jetton());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string channel = 18;
    if (has_channel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional string province = 19;
    if (has_province()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

    // optional string city = 20;
    if (has_city()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string bindnick = 24;
    if (has_bindnick()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bindnick());
    }

    // optional string platformid = 25;
    if (has_platformid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platformid());
    }

    // optional string imei = 26;
    if (has_imei()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string devname = 27;
    if (has_devname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devname());
    }

    // optional string ip = 28;
    if (has_ip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional string face_1 = 34;
    if (has_face_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_1());
    }

    // optional string face_2 = 35;
    if (has_face_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_2());
    }

    // optional string face_3 = 36;
    if (has_face_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_3());
    }

    // optional string face_4 = 37;
    if (has_face_4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_4());
    }

    // optional string description = 40;
    if (has_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string location = 41;
    if (has_location()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional string bankjetton = 42;
    if (has_bankjetton()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankjetton());
    }

    // optional string title = 43;
    if (has_title()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional string location_x = 47;
    if (has_location_x()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location_x());
    }

    // optional string location_y = 48;
    if (has_location_y()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location_y());
    }

    // optional string bank_password = 49;
    if (has_bank_password()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_password());
    }

    // optional string bank_jetton = 50;
    if (has_bank_jetton()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_jetton());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 sex = 8;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 age = 9;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 exp = 12;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional int32 level = 13;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 viplevel = 14;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplevel());
    }

    // optional int32 gold = 16;
    if (has_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 money = 17;
    if (has_money()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 popularity = 21;
    if (has_popularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->popularity());
    }

    // optional int32 idenstatus = 22;
    if (has_idenstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idenstatus());
    }

    // optional int32 bindtype = 23;
    if (has_bindtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bindtype());
    }

    // optional int32 mobiletype = 29;
    if (has_mobiletype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobiletype());
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional int32 lasttime = 30;
    if (has_lasttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lasttime());
    }

    // optional int32 penulttime = 31;
    if (has_penulttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->penulttime());
    }

    // optional int32 silent = 32;
    if (has_silent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->silent());
    }

    // optional int32 isban = 33;
    if (has_isban()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isban());
    }

    // optional int32 isrobot = 38;
    if (has_isrobot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isrobot());
    }

    // optional int32 playtype = 39;
    if (has_playtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playtype());
    }

    // optional int32 blacklist = 44;
    if (has_blacklist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blacklist());
    }

    // optional int32 propertyid = 45;
    if (has_propertyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->propertyid());
    }

  }
  if (_has_bits_[48 / 32] & 196608u) {
    // optional int32 ticket = 46;
    if (has_ticket()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ticket());
    }

    // optional int32 agent1 = 51;
    if (has_agent1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent1());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void playerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const playerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const playerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.playerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.playerinfo)
    MergeFrom(*source);
  }
}

void playerinfo::MergeFrom(const playerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cid();
      cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_regdate();
      regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_jetton();
      jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jetton_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_bindnick();
      bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_platformid();
      platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_devname();
      devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      set_has_face_1();
      face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
    }
    if (cached_has_bits & 0x00020000u) {
      set_has_face_2();
      face_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_2_);
    }
    if (cached_has_bits & 0x00040000u) {
      set_has_face_3();
      face_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_3_);
    }
    if (cached_has_bits & 0x00080000u) {
      set_has_face_4();
      face_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_4_);
    }
    if (cached_has_bits & 0x00100000u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00200000u) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (cached_has_bits & 0x00400000u) {
      set_has_bankjetton();
      bankjetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankjetton_);
    }
    if (cached_has_bits & 0x00800000u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      set_has_location_x();
      location_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_x_);
    }
    if (cached_has_bits & 0x02000000u) {
      set_has_location_y();
      location_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_y_);
    }
    if (cached_has_bits & 0x04000000u) {
      set_has_bank_password();
      bank_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_password_);
    }
    if (cached_has_bits & 0x08000000u) {
      set_has_bank_jetton();
      bank_jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_jetton_);
    }
    if (cached_has_bits & 0x10000000u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x20000000u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x40000000u) {
      age_ = from.age_;
    }
    if (cached_has_bits & 0x80000000u) {
      exp_ = from.exp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000002u) {
      viplevel_ = from.viplevel_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000010u) {
      popularity_ = from.popularity_;
    }
    if (cached_has_bits & 0x00000020u) {
      idenstatus_ = from.idenstatus_;
    }
    if (cached_has_bits & 0x00000040u) {
      bindtype_ = from.bindtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      mobiletype_ = from.mobiletype_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      lasttime_ = from.lasttime_;
    }
    if (cached_has_bits & 0x00000200u) {
      penulttime_ = from.penulttime_;
    }
    if (cached_has_bits & 0x00000400u) {
      silent_ = from.silent_;
    }
    if (cached_has_bits & 0x00000800u) {
      isban_ = from.isban_;
    }
    if (cached_has_bits & 0x00001000u) {
      isrobot_ = from.isrobot_;
    }
    if (cached_has_bits & 0x00002000u) {
      playtype_ = from.playtype_;
    }
    if (cached_has_bits & 0x00004000u) {
      blacklist_ = from.blacklist_;
    }
    if (cached_has_bits & 0x00008000u) {
      propertyid_ = from.propertyid_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      ticket_ = from.ticket_;
    }
    if (cached_has_bits & 0x00020000u) {
      agent1_ = from.agent1_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void playerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void playerinfo::CopyFrom(const playerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool playerinfo::IsInitialized() const {
  return true;
}

void playerinfo::Swap(playerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void playerinfo::InternalSwap(playerinfo* other) {
  using std::swap;
  cid_.Swap(&other->cid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  regdate_.Swap(&other->regdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phonenum_.Swap(&other->phonenum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jetton_.Swap(&other->jetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  province_.Swap(&other->province_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bindnick_.Swap(&other->bindnick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platformid_.Swap(&other->platformid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devname_.Swap(&other->devname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_1_.Swap(&other->face_1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_2_.Swap(&other->face_2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_3_.Swap(&other->face_3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_4_.Swap(&other->face_4_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bankjetton_.Swap(&other->bankjetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_x_.Swap(&other->location_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_y_.Swap(&other->location_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_password_.Swap(&other->bank_password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_jetton_.Swap(&other->bank_jetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(sex_, other->sex_);
  swap(age_, other->age_);
  swap(exp_, other->exp_);
  swap(level_, other->level_);
  swap(viplevel_, other->viplevel_);
  swap(gold_, other->gold_);
  swap(money_, other->money_);
  swap(popularity_, other->popularity_);
  swap(idenstatus_, other->idenstatus_);
  swap(bindtype_, other->bindtype_);
  swap(mobiletype_, other->mobiletype_);
  swap(lasttime_, other->lasttime_);
  swap(penulttime_, other->penulttime_);
  swap(silent_, other->silent_);
  swap(isban_, other->isban_);
  swap(isrobot_, other->isrobot_);
  swap(playtype_, other->playtype_);
  swap(blacklist_, other->blacklist_);
  swap(propertyid_, other->propertyid_);
  swap(ticket_, other->ticket_);
  swap(agent1_, other->agent1_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata playerinfo::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgaccountlogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgaccountlogin::kAccountFieldNumber;
const int cgaccountlogin::kPasswordFieldNumber;
const int cgaccountlogin::kImeiFieldNumber;
const int cgaccountlogin::kNicknameFieldNumber;
const int cgaccountlogin::kDevnameFieldNumber;
const int cgaccountlogin::kMacnameFieldNumber;
const int cgaccountlogin::kChannelFieldNumber;
const int cgaccountlogin::kProvinceFieldNumber;
const int cgaccountlogin::kCityFieldNumber;
const int cgaccountlogin::kMobileidFieldNumber;
const int cgaccountlogin::kPhonenumFieldNumber;
const int cgaccountlogin::kInviteridFieldNumber;
const int cgaccountlogin::kBindtypeFieldNumber;
const int cgaccountlogin::kPushtypeFieldNumber;
const int cgaccountlogin::kCidFieldNumber;
const int cgaccountlogin::kPlatformidFieldNumber;
const int cgaccountlogin::kBindnickFieldNumber;
const int cgaccountlogin::kMobiletypeFieldNumber;
const int cgaccountlogin::kSexFieldNumber;
const int cgaccountlogin::kAuthcodeFieldNumber;
const int cgaccountlogin::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgaccountlogin::cgaccountlogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgaccountlogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgaccountlogin)
}
cgaccountlogin::cgaccountlogin(const cgaccountlogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devname()) {
    devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
  }
  macname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macname()) {
    macname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macname_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cid()) {
    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platformid()) {
    platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
  }
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bindnick()) {
    bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
  }
  authcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_authcode()) {
    authcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authcode_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  ::memcpy(&mobileid_, &from.mobileid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&mobileid_)) + sizeof(sex_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgaccountlogin)
}

void cgaccountlogin::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mobileid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sex_) -
      reinterpret_cast<char*>(&mobileid_)) + sizeof(sex_));
}

cgaccountlogin::~cgaccountlogin() {
  // @@protoc_insertion_point(destructor:NFMsg.cgaccountlogin)
  SharedDtor();
}

void cgaccountlogin::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cgaccountlogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgaccountlogin::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgaccountlogin& cgaccountlogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgaccountlogin.base);
  return *internal_default_instance();
}


void cgaccountlogin::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      imei_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      devname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      macname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      channel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      province_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      city_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      phonenum_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      cid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      platformid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      bindnick_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00002000u) {
      authcode_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00004000u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
  }
  mobileid_ = 0;
  if (cached_has_bits & 2031616u) {
    ::memset(&inviterid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sex_) -
        reinterpret_cast<char*>(&inviterid_)) + sizeof(sex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgaccountlogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgaccountlogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string devname = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devname().data(), static_cast<int>(this->devname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.devname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string macname = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macname().data(), static_cast<int>(this->macname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.macname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string province = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), static_cast<int>(this->province().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.city");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mobileid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_mobileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phonenum = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenum().data(), static_cast<int>(this->phonenum().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.phonenum");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 inviterid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_inviterid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inviterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bindtype = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_bindtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bindtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pushtype = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_pushtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cid = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cid().data(), static_cast<int>(this->cid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.cid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string platformid = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platformid().data(), static_cast<int>(this->platformid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.platformid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bindnick = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bindnick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bindnick().data(), static_cast<int>(this->bindnick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.bindnick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mobiletype = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_mobiletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobiletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string authcode = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authcode().data(), static_cast<int>(this->authcode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.authcode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgaccountlogin.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgaccountlogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgaccountlogin)
  return false;
#undef DO_
}

void cgaccountlogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string imei = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->imei(), output);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional string devname = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.devname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->devname(), output);
  }

  // optional string macname = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macname().data(), static_cast<int>(this->macname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.macname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->macname(), output);
  }

  // optional string channel = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->channel(), output);
  }

  // optional string province = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->province(), output);
  }

  // optional string city = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->city(), output);
  }

  // optional int32 mobileid = 11;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mobileid(), output);
  }

  // optional string phonenum = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.phonenum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->phonenum(), output);
  }

  // optional int32 inviterid = 13;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->inviterid(), output);
  }

  // optional int32 bindtype = 14;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->bindtype(), output);
  }

  // optional int32 pushtype = 15;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->pushtype(), output);
  }

  // optional string cid = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.cid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->cid(), output);
  }

  // optional string platformid = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.platformid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->platformid(), output);
  }

  // optional string bindnick = 18;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.bindnick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->bindnick(), output);
  }

  // optional int32 mobiletype = 19;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->mobiletype(), output);
  }

  // optional int32 sex = 20;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->sex(), output);
  }

  // optional string authcode = 21;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), static_cast<int>(this->authcode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.authcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->authcode(), output);
  }

  // optional string email = 22;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgaccountlogin)
}

::google::protobuf::uint8* cgaccountlogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string imei = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->imei(), target);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional string devname = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.devname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->devname(), target);
  }

  // optional string macname = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macname().data(), static_cast<int>(this->macname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.macname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->macname(), target);
  }

  // optional string channel = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->channel(), target);
  }

  // optional string province = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->province(), target);
  }

  // optional string city = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->city(), target);
  }

  // optional int32 mobileid = 11;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mobileid(), target);
  }

  // optional string phonenum = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.phonenum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->phonenum(), target);
  }

  // optional int32 inviterid = 13;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->inviterid(), target);
  }

  // optional int32 bindtype = 14;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->bindtype(), target);
  }

  // optional int32 pushtype = 15;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->pushtype(), target);
  }

  // optional string cid = 16;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.cid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->cid(), target);
  }

  // optional string platformid = 17;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.platformid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->platformid(), target);
  }

  // optional string bindnick = 18;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.bindnick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->bindnick(), target);
  }

  // optional int32 mobiletype = 19;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->mobiletype(), target);
  }

  // optional int32 sex = 20;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->sex(), target);
  }

  // optional string authcode = 21;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authcode().data(), static_cast<int>(this->authcode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.authcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->authcode(), target);
  }

  // optional string email = 22;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgaccountlogin.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgaccountlogin)
  return target;
}

size_t cgaccountlogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgaccountlogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string imei = 4;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string nickname = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string devname = 6;
    if (has_devname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devname());
    }

    // optional string macname = 7;
    if (has_macname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macname());
    }

    // optional string channel = 8;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional string province = 9;
    if (has_province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string city = 10;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string phonenum = 12;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

    // optional string cid = 16;
    if (has_cid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cid());
    }

    // optional string platformid = 17;
    if (has_platformid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platformid());
    }

    // optional string bindnick = 18;
    if (has_bindnick()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bindnick());
    }

    // optional string authcode = 21;
    if (has_authcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authcode());
    }

    // optional string email = 22;
    if (has_email()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional int32 mobileid = 11;
    if (has_mobileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobileid());
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional int32 inviterid = 13;
    if (has_inviterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inviterid());
    }

    // optional int32 bindtype = 14;
    if (has_bindtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bindtype());
    }

    // optional int32 pushtype = 15;
    if (has_pushtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pushtype());
    }

    // optional int32 mobiletype = 19;
    if (has_mobiletype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobiletype());
    }

    // optional int32 sex = 20;
    if (has_sex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgaccountlogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  const cgaccountlogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgaccountlogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgaccountlogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgaccountlogin)
    MergeFrom(*source);
  }
}

void cgaccountlogin::MergeFrom(const cgaccountlogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_devname();
      devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_macname();
      macname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macname_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_cid();
      cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_platformid();
      platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_bindnick();
      bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_authcode();
      authcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authcode_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00008000u) {
      mobileid_ = from.mobileid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      inviterid_ = from.inviterid_;
    }
    if (cached_has_bits & 0x00020000u) {
      bindtype_ = from.bindtype_;
    }
    if (cached_has_bits & 0x00040000u) {
      pushtype_ = from.pushtype_;
    }
    if (cached_has_bits & 0x00080000u) {
      mobiletype_ = from.mobiletype_;
    }
    if (cached_has_bits & 0x00100000u) {
      sex_ = from.sex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgaccountlogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgaccountlogin::CopyFrom(const cgaccountlogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgaccountlogin::IsInitialized() const {
  return true;
}

void cgaccountlogin::Swap(cgaccountlogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgaccountlogin::InternalSwap(cgaccountlogin* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devname_.Swap(&other->devname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  macname_.Swap(&other->macname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  province_.Swap(&other->province_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phonenum_.Swap(&other->phonenum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cid_.Swap(&other->cid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platformid_.Swap(&other->platformid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bindnick_.Swap(&other->bindnick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  authcode_.Swap(&other->authcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mobileid_, other->mobileid_);
  swap(inviterid_, other->inviterid_);
  swap(bindtype_, other->bindtype_);
  swap(pushtype_, other->pushtype_);
  swap(mobiletype_, other->mobiletype_);
  swap(sex_, other->sex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgaccountlogin::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcaccountlogin::InitAsDefaultInstance() {
  ::NFMsg::_gcaccountlogin_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::NFMsg::playerinfo*>(
      ::NFMsg::playerinfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcaccountlogin::kResultFieldNumber;
const int gcaccountlogin::kPinfoFieldNumber;
const int gcaccountlogin::kTableidFieldNumber;
const int gcaccountlogin::kSystimeFieldNumber;
const int gcaccountlogin::kTabletypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcaccountlogin::gcaccountlogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcaccountlogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcaccountlogin)
}
gcaccountlogin::gcaccountlogin(const gcaccountlogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::NFMsg::playerinfo(*from.pinfo_);
  } else {
    pinfo_ = NULL;
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&tabletype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(tabletype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcaccountlogin)
}

void gcaccountlogin::SharedCtor() {
  ::memset(&pinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tabletype_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(tabletype_));
}

gcaccountlogin::~gcaccountlogin() {
  // @@protoc_insertion_point(destructor:NFMsg.gcaccountlogin)
  SharedDtor();
}

void gcaccountlogin::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void gcaccountlogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcaccountlogin::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcaccountlogin& gcaccountlogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcaccountlogin.base);
  return *internal_default_instance();
}


void gcaccountlogin::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != NULL);
    pinfo_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tabletype_) -
        reinterpret_cast<char*>(&result_)) + sizeof(tabletype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcaccountlogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcaccountlogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NFMsg.playerinfo pinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tableid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tableid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tableid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 systime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_systime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &systime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tabletype = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_tabletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tabletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcaccountlogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcaccountlogin)
  return false;
#undef DO_
}

void gcaccountlogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .NFMsg.playerinfo pinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pinfo(), output);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tableid(), output);
  }

  // optional int32 systime = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->systime(), output);
  }

  // optional int32 tabletype = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tabletype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcaccountlogin)
}

::google::protobuf::uint8* gcaccountlogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcaccountlogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .NFMsg.playerinfo pinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pinfo(), deterministic, target);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tableid(), target);
  }

  // optional int32 systime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->systime(), target);
  }

  // optional int32 tabletype = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tabletype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcaccountlogin)
  return target;
}

size_t gcaccountlogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcaccountlogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .NFMsg.playerinfo pinfo = 2;
    if (has_pinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pinfo_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 tableid = 3;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tableid());
    }

    // optional int32 systime = 4;
    if (has_systime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->systime());
    }

    // optional int32 tabletype = 5;
    if (has_tabletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tabletype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcaccountlogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  const gcaccountlogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcaccountlogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcaccountlogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcaccountlogin)
    MergeFrom(*source);
  }
}

void gcaccountlogin::MergeFrom(const gcaccountlogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcaccountlogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pinfo()->::NFMsg::playerinfo::MergeFrom(from.pinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      tableid_ = from.tableid_;
    }
    if (cached_has_bits & 0x00000008u) {
      systime_ = from.systime_;
    }
    if (cached_has_bits & 0x00000010u) {
      tabletype_ = from.tabletype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcaccountlogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcaccountlogin::CopyFrom(const gcaccountlogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcaccountlogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcaccountlogin::IsInitialized() const {
  return true;
}

void gcaccountlogin::Swap(gcaccountlogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcaccountlogin::InternalSwap(gcaccountlogin* other) {
  using std::swap;
  swap(pinfo_, other->pinfo_);
  swap(result_, other->result_);
  swap(tableid_, other->tableid_);
  swap(systime_, other->systime_);
  swap(tabletype_, other->tabletype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcaccountlogin::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgreconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgreconnect::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgreconnect::cgreconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgreconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgreconnect)
}
cgreconnect::cgreconnect(const cgreconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgreconnect)
}

void cgreconnect::SharedCtor() {
  userid_ = 0;
}

cgreconnect::~cgreconnect() {
  // @@protoc_insertion_point(destructor:NFMsg.cgreconnect)
  SharedDtor();
}

void cgreconnect::SharedDtor() {
}

void cgreconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgreconnect::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgreconnect& cgreconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgreconnect.base);
  return *internal_default_instance();
}


void cgreconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgreconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgreconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgreconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgreconnect)
  return false;
#undef DO_
}

void cgreconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgreconnect)
}

::google::protobuf::uint8* cgreconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgreconnect)
  return target;
}

size_t cgreconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgreconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgreconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const cgreconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgreconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgreconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgreconnect)
    MergeFrom(*source);
  }
}

void cgreconnect::MergeFrom(const cgreconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cgreconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgreconnect::CopyFrom(const cgreconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgreconnect::IsInitialized() const {
  return true;
}

void cgreconnect::Swap(cgreconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgreconnect::InternalSwap(cgreconnect* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgreconnect::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcreconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcreconnect::kResultFieldNumber;
const int gcreconnect::kMsgbeginFieldNumber;
const int gcreconnect::kTableidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcreconnect::gcreconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcreconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcreconnect)
}
gcreconnect::gcreconnect(const gcreconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgbegin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msgbegin()) {
    msgbegin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbegin_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&tableid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(tableid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcreconnect)
}

void gcreconnect::SharedCtor() {
  msgbegin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(tableid_));
}

gcreconnect::~gcreconnect() {
  // @@protoc_insertion_point(destructor:NFMsg.gcreconnect)
  SharedDtor();
}

void gcreconnect::SharedDtor() {
  msgbegin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void gcreconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcreconnect::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcreconnect& gcreconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcreconnect.base);
  return *internal_default_instance();
}


void gcreconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msgbegin_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tableid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(tableid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcreconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcreconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msgbegin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgbegin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgbegin().data(), static_cast<int>(this->msgbegin().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gcreconnect.msgbegin");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tableid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tableid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tableid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcreconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcreconnect)
  return false;
#undef DO_
}

void gcreconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string msgbegin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgbegin().data(), static_cast<int>(this->msgbegin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcreconnect.msgbegin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msgbegin(), output);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tableid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcreconnect)
}

::google::protobuf::uint8* gcreconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcreconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string msgbegin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgbegin().data(), static_cast<int>(this->msgbegin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gcreconnect.msgbegin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msgbegin(), target);
  }

  // optional int32 tableid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tableid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcreconnect)
  return target;
}

size_t gcreconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcreconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msgbegin = 2;
    if (has_msgbegin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msgbegin());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 tableid = 3;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tableid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcreconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const gcreconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcreconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcreconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcreconnect)
    MergeFrom(*source);
  }
}

void gcreconnect::MergeFrom(const gcreconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcreconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msgbegin();
      msgbegin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbegin_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      tableid_ = from.tableid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gcreconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcreconnect::CopyFrom(const gcreconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcreconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcreconnect::IsInitialized() const {
  return true;
}

void gcreconnect::Swap(gcreconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcreconnect::InternalSwap(gcreconnect* other) {
  using std::swap;
  msgbegin_.Swap(&other->msgbegin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(tableid_, other->tableid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcreconnect::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgheartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgheartbeat::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgheartbeat::cgheartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgheartbeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgheartbeat)
}
cgheartbeat::cgheartbeat(const cgheartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgheartbeat)
}

void cgheartbeat::SharedCtor() {
  userid_ = 0;
}

cgheartbeat::~cgheartbeat() {
  // @@protoc_insertion_point(destructor:NFMsg.cgheartbeat)
  SharedDtor();
}

void cgheartbeat::SharedDtor() {
}

void cgheartbeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgheartbeat::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgheartbeat& cgheartbeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgheartbeat.base);
  return *internal_default_instance();
}


void cgheartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgheartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgheartbeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgheartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgheartbeat)
  return false;
#undef DO_
}

void cgheartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgheartbeat)
}

::google::protobuf::uint8* cgheartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgheartbeat)
  return target;
}

size_t cgheartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgheartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgheartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const cgheartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgheartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgheartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgheartbeat)
    MergeFrom(*source);
  }
}

void cgheartbeat::MergeFrom(const cgheartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void cgheartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgheartbeat::CopyFrom(const cgheartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgheartbeat::IsInitialized() const {
  return true;
}

void cgheartbeat::Swap(cgheartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgheartbeat::InternalSwap(cgheartbeat* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgheartbeat::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcheartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcheartbeat::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcheartbeat::gcheartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcheartbeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcheartbeat)
}
gcheartbeat::gcheartbeat(const gcheartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcheartbeat)
}

void gcheartbeat::SharedCtor() {
  result_ = 0;
}

gcheartbeat::~gcheartbeat() {
  // @@protoc_insertion_point(destructor:NFMsg.gcheartbeat)
  SharedDtor();
}

void gcheartbeat::SharedDtor() {
}

void gcheartbeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcheartbeat::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcheartbeat& gcheartbeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcheartbeat.base);
  return *internal_default_instance();
}


void gcheartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcheartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcheartbeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcheartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcheartbeat)
  return false;
#undef DO_
}

void gcheartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcheartbeat)
}

::google::protobuf::uint8* gcheartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcheartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcheartbeat)
  return target;
}

size_t gcheartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcheartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcheartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const gcheartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcheartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcheartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcheartbeat)
    MergeFrom(*source);
  }
}

void gcheartbeat::MergeFrom(const gcheartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcheartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcheartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcheartbeat::CopyFrom(const gcheartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcheartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcheartbeat::IsInitialized() const {
  return true;
}

void gcheartbeat::Swap(gcheartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcheartbeat::InternalSwap(gcheartbeat* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcheartbeat::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gckitplayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gckitplayer::kResultFieldNumber;
const int gckitplayer::kKittypeFieldNumber;
const int gckitplayer::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gckitplayer::gckitplayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gckitplayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gckitplayer)
}
gckitplayer::gckitplayer(const gckitplayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&kittype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(kittype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.gckitplayer)
}

void gckitplayer::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kittype_) -
      reinterpret_cast<char*>(&result_)) + sizeof(kittype_));
}

gckitplayer::~gckitplayer() {
  // @@protoc_insertion_point(destructor:NFMsg.gckitplayer)
  SharedDtor();
}

void gckitplayer::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void gckitplayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gckitplayer::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gckitplayer& gckitplayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gckitplayer.base);
  return *internal_default_instance();
}


void gckitplayer::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gckitplayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&kittype_) -
        reinterpret_cast<char*>(&result_)) + sizeof(kittype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gckitplayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gckitplayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 kittype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_kittype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kittype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.gckitplayer.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gckitplayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gckitplayer)
  return false;
#undef DO_
}

void gckitplayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gckitplayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 kittype = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->kittype(), output);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gckitplayer.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gckitplayer)
}

::google::protobuf::uint8* gckitplayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gckitplayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 kittype = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->kittype(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.gckitplayer.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gckitplayer)
  return target;
}

size_t gckitplayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gckitplayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 kittype = 2;
    if (has_kittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kittype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gckitplayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gckitplayer)
  GOOGLE_DCHECK_NE(&from, this);
  const gckitplayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gckitplayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gckitplayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gckitplayer)
    MergeFrom(*source);
  }
}

void gckitplayer::MergeFrom(const gckitplayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gckitplayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      kittype_ = from.kittype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void gckitplayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gckitplayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gckitplayer::CopyFrom(const gckitplayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gckitplayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gckitplayer::IsInitialized() const {
  return true;
}

void gckitplayer::Swap(gckitplayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gckitplayer::InternalSwap(gckitplayer* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(kittype_, other->kittype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gckitplayer::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cgentertable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cgentertable::kUseridFieldNumber;
const int cgentertable::kTableidFieldNumber;
const int cgentertable::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cgentertable::cgentertable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_cgentertable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.cgentertable)
}
cgentertable::cgentertable(const cgentertable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tableid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(tableid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.cgentertable)
}

void cgentertable::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(tableid_));
}

cgentertable::~cgentertable() {
  // @@protoc_insertion_point(destructor:NFMsg.cgentertable)
  SharedDtor();
}

void cgentertable::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cgentertable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cgentertable::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cgentertable& cgentertable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_cgentertable.base);
  return *internal_default_instance();
}


void cgentertable::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.cgentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    password_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tableid_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(tableid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool cgentertable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.cgentertable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tableid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tableid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tableid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.cgentertable.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.cgentertable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.cgentertable)
  return false;
#undef DO_
}

void cgentertable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.cgentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 tableid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tableid(), output);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgentertable.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.cgentertable)
}

::google::protobuf::uint8* cgentertable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.cgentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 tableid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tableid(), target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.cgentertable.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.cgentertable)
  return target;
}

size_t cgentertable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.cgentertable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 tableid = 2;
    if (has_tableid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tableid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cgentertable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.cgentertable)
  GOOGLE_DCHECK_NE(&from, this);
  const cgentertable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cgentertable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.cgentertable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.cgentertable)
    MergeFrom(*source);
  }
}

void cgentertable::MergeFrom(const cgentertable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.cgentertable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      tableid_ = from.tableid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void cgentertable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.cgentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cgentertable::CopyFrom(const cgentertable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.cgentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cgentertable::IsInitialized() const {
  return true;
}

void cgentertable::Swap(cgentertable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cgentertable::InternalSwap(cgentertable* other) {
  using std::swap;
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(tableid_, other->tableid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cgentertable::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gcentertable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gcentertable::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gcentertable::gcentertable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fhuman_2eproto::scc_info_gcentertable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.gcentertable)
}
gcentertable::gcentertable(const gcentertable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.gcentertable)
}

void gcentertable::SharedCtor() {
  result_ = 0;
}

gcentertable::~gcentertable() {
  // @@protoc_insertion_point(destructor:NFMsg.gcentertable)
  SharedDtor();
}

void gcentertable::SharedDtor() {
}

void gcentertable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gcentertable::descriptor() {
  ::protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gcentertable& gcentertable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fhuman_2eproto::scc_info_gcentertable.base);
  return *internal_default_instance();
}


void gcentertable::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.gcentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool gcentertable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.gcentertable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.gcentertable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.gcentertable)
  return false;
#undef DO_
}

void gcentertable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.gcentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.gcentertable)
}

::google::protobuf::uint8* gcentertable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.gcentertable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.gcentertable)
  return target;
}

size_t gcentertable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.gcentertable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gcentertable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.gcentertable)
  GOOGLE_DCHECK_NE(&from, this);
  const gcentertable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gcentertable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.gcentertable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.gcentertable)
    MergeFrom(*source);
  }
}

void gcentertable::MergeFrom(const gcentertable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.gcentertable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void gcentertable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.gcentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gcentertable::CopyFrom(const gcentertable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.gcentertable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gcentertable::IsInitialized() const {
  return true;
}

void gcentertable::Swap(gcentertable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gcentertable::InternalSwap(gcentertable* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gcentertable::GetMetadata() const {
  protobuf_msg_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::accountinfo* Arena::CreateMaybeMessage< ::NFMsg::accountinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::accountinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::playerinfo* Arena::CreateMaybeMessage< ::NFMsg::playerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::playerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgaccountlogin* Arena::CreateMaybeMessage< ::NFMsg::cgaccountlogin >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgaccountlogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcaccountlogin* Arena::CreateMaybeMessage< ::NFMsg::gcaccountlogin >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcaccountlogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgreconnect* Arena::CreateMaybeMessage< ::NFMsg::cgreconnect >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgreconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcreconnect* Arena::CreateMaybeMessage< ::NFMsg::gcreconnect >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcreconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgheartbeat* Arena::CreateMaybeMessage< ::NFMsg::cgheartbeat >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgheartbeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcheartbeat* Arena::CreateMaybeMessage< ::NFMsg::gcheartbeat >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcheartbeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gckitplayer* Arena::CreateMaybeMessage< ::NFMsg::gckitplayer >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gckitplayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::cgentertable* Arena::CreateMaybeMessage< ::NFMsg::cgentertable >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::cgentertable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::gcentertable* Arena::CreateMaybeMessage< ::NFMsg::gcentertable >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::gcentertable >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
