// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_human.proto

#ifndef PROTOBUF_INCLUDED_msg_5fhuman_2eproto
#define PROTOBUF_INCLUDED_msg_5fhuman_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "st_human.pb.h"
#include "st_shop.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fhuman_2eproto 

namespace protobuf_msg_5fhuman_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[48];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fhuman_2eproto
namespace NFMsg {
class cgaccountlogin;
class cgaccountloginDefaultTypeInternal;
extern cgaccountloginDefaultTypeInternal _cgaccountlogin_default_instance_;
class cgagencyopt;
class cgagencyoptDefaultTypeInternal;
extern cgagencyoptDefaultTypeInternal _cgagencyopt_default_instance_;
class cgaltersomeplayerinfo;
class cgaltersomeplayerinfoDefaultTypeInternal;
extern cgaltersomeplayerinfoDefaultTypeInternal _cgaltersomeplayerinfo_default_instance_;
class cgapplygroupmaster;
class cgapplygroupmasterDefaultTypeInternal;
extern cgapplygroupmasterDefaultTypeInternal _cgapplygroupmaster_default_instance_;
class cgdeletemail;
class cgdeletemailDefaultTypeInternal;
extern cgdeletemailDefaultTypeInternal _cgdeletemail_default_instance_;
class cgentertable;
class cgentertableDefaultTypeInternal;
extern cgentertableDefaultTypeInternal _cgentertable_default_instance_;
class cggetagencyinfo;
class cggetagencyinfoDefaultTypeInternal;
extern cggetagencyinfoDefaultTypeInternal _cggetagencyinfo_default_instance_;
class cggetinitinfo;
class cggetinitinfoDefaultTypeInternal;
extern cggetinitinfoDefaultTypeInternal _cggetinitinfo_default_instance_;
class cggetmailgoods;
class cggetmailgoodsDefaultTypeInternal;
extern cggetmailgoodsDefaultTypeInternal _cggetmailgoods_default_instance_;
class cggetmaillist;
class cggetmaillistDefaultTypeInternal;
extern cggetmaillistDefaultTypeInternal _cggetmaillist_default_instance_;
class cggetplayerinfo;
class cggetplayerinfoDefaultTypeInternal;
extern cggetplayerinfoDefaultTypeInternal _cggetplayerinfo_default_instance_;
class cggivemoney;
class cggivemoneyDefaultTypeInternal;
extern cggivemoneyDefaultTypeInternal _cggivemoney_default_instance_;
class cggivemoneyrecord;
class cggivemoneyrecordDefaultTypeInternal;
extern cggivemoneyrecordDefaultTypeInternal _cggivemoneyrecord_default_instance_;
class cgheartbeat;
class cgheartbeatDefaultTypeInternal;
extern cgheartbeatDefaultTypeInternal _cgheartbeat_default_instance_;
class cginvitebind;
class cginvitebindDefaultTypeInternal;
extern cginvitebindDefaultTypeInternal _cginvitebind_default_instance_;
class cgluckturntable;
class cgluckturntableDefaultTypeInternal;
extern cgluckturntableDefaultTypeInternal _cgluckturntable_default_instance_;
class cgplayerstatus;
class cgplayerstatusDefaultTypeInternal;
extern cgplayerstatusDefaultTypeInternal _cgplayerstatus_default_instance_;
class cgreadmail;
class cgreadmailDefaultTypeInternal;
extern cgreadmailDefaultTypeInternal _cgreadmail_default_instance_;
class cgreconnect;
class cgreconnectDefaultTypeInternal;
extern cgreconnectDefaultTypeInternal _cgreconnect_default_instance_;
class cgregistration;
class cgregistrationDefaultTypeInternal;
extern cgregistrationDefaultTypeInternal _cgregistration_default_instance_;
class cgupdateplayerinfo;
class cgupdateplayerinfoDefaultTypeInternal;
extern cgupdateplayerinfoDefaultTypeInternal _cgupdateplayerinfo_default_instance_;
class cgupdateplayermoney;
class cgupdateplayermoneyDefaultTypeInternal;
extern cgupdateplayermoneyDefaultTypeInternal _cgupdateplayermoney_default_instance_;
class gcaccountlogin;
class gcaccountloginDefaultTypeInternal;
extern gcaccountloginDefaultTypeInternal _gcaccountlogin_default_instance_;
class gcagencyopt;
class gcagencyoptDefaultTypeInternal;
extern gcagencyoptDefaultTypeInternal _gcagencyopt_default_instance_;
class gcaltersomeplayerinfo;
class gcaltersomeplayerinfoDefaultTypeInternal;
extern gcaltersomeplayerinfoDefaultTypeInternal _gcaltersomeplayerinfo_default_instance_;
class gcapplygroupmaster;
class gcapplygroupmasterDefaultTypeInternal;
extern gcapplygroupmasterDefaultTypeInternal _gcapplygroupmaster_default_instance_;
class gcbroadcast;
class gcbroadcastDefaultTypeInternal;
extern gcbroadcastDefaultTypeInternal _gcbroadcast_default_instance_;
class gcdeletemail;
class gcdeletemailDefaultTypeInternal;
extern gcdeletemailDefaultTypeInternal _gcdeletemail_default_instance_;
class gcentertable;
class gcentertableDefaultTypeInternal;
extern gcentertableDefaultTypeInternal _gcentertable_default_instance_;
class gcgetagencyinfo;
class gcgetagencyinfoDefaultTypeInternal;
extern gcgetagencyinfoDefaultTypeInternal _gcgetagencyinfo_default_instance_;
class gcgetinitinfo;
class gcgetinitinfoDefaultTypeInternal;
extern gcgetinitinfoDefaultTypeInternal _gcgetinitinfo_default_instance_;
class gcgetmailgoods;
class gcgetmailgoodsDefaultTypeInternal;
extern gcgetmailgoodsDefaultTypeInternal _gcgetmailgoods_default_instance_;
class gcgetmaillist;
class gcgetmaillistDefaultTypeInternal;
extern gcgetmaillistDefaultTypeInternal _gcgetmaillist_default_instance_;
class gcgetplayerinfo;
class gcgetplayerinfoDefaultTypeInternal;
extern gcgetplayerinfoDefaultTypeInternal _gcgetplayerinfo_default_instance_;
class gcgivemoney;
class gcgivemoneyDefaultTypeInternal;
extern gcgivemoneyDefaultTypeInternal _gcgivemoney_default_instance_;
class gcgivemoneyrecord;
class gcgivemoneyrecordDefaultTypeInternal;
extern gcgivemoneyrecordDefaultTypeInternal _gcgivemoneyrecord_default_instance_;
class gcheartbeat;
class gcheartbeatDefaultTypeInternal;
extern gcheartbeatDefaultTypeInternal _gcheartbeat_default_instance_;
class gcinvitebind;
class gcinvitebindDefaultTypeInternal;
extern gcinvitebindDefaultTypeInternal _gcinvitebind_default_instance_;
class gckitplayer;
class gckitplayerDefaultTypeInternal;
extern gckitplayerDefaultTypeInternal _gckitplayer_default_instance_;
class gcluckturntable;
class gcluckturntableDefaultTypeInternal;
extern gcluckturntableDefaultTypeInternal _gcluckturntable_default_instance_;
class gcnoticeinfo;
class gcnoticeinfoDefaultTypeInternal;
extern gcnoticeinfoDefaultTypeInternal _gcnoticeinfo_default_instance_;
class gcplayerstatus;
class gcplayerstatusDefaultTypeInternal;
extern gcplayerstatusDefaultTypeInternal _gcplayerstatus_default_instance_;
class gcreadmail;
class gcreadmailDefaultTypeInternal;
extern gcreadmailDefaultTypeInternal _gcreadmail_default_instance_;
class gcreconnect;
class gcreconnectDefaultTypeInternal;
extern gcreconnectDefaultTypeInternal _gcreconnect_default_instance_;
class gcregistration;
class gcregistrationDefaultTypeInternal;
extern gcregistrationDefaultTypeInternal _gcregistration_default_instance_;
class gcupdategoodslist;
class gcupdategoodslistDefaultTypeInternal;
extern gcupdategoodslistDefaultTypeInternal _gcupdategoodslist_default_instance_;
class gcupdateplayerinfo;
class gcupdateplayerinfoDefaultTypeInternal;
extern gcupdateplayerinfoDefaultTypeInternal _gcupdateplayerinfo_default_instance_;
class gcupdateplayermoney;
class gcupdateplayermoneyDefaultTypeInternal;
extern gcupdateplayermoneyDefaultTypeInternal _gcupdateplayermoney_default_instance_;
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> ::NFMsg::cgaccountlogin* Arena::CreateMaybeMessage<::NFMsg::cgaccountlogin>(Arena*);
template<> ::NFMsg::cgagencyopt* Arena::CreateMaybeMessage<::NFMsg::cgagencyopt>(Arena*);
template<> ::NFMsg::cgaltersomeplayerinfo* Arena::CreateMaybeMessage<::NFMsg::cgaltersomeplayerinfo>(Arena*);
template<> ::NFMsg::cgapplygroupmaster* Arena::CreateMaybeMessage<::NFMsg::cgapplygroupmaster>(Arena*);
template<> ::NFMsg::cgdeletemail* Arena::CreateMaybeMessage<::NFMsg::cgdeletemail>(Arena*);
template<> ::NFMsg::cgentertable* Arena::CreateMaybeMessage<::NFMsg::cgentertable>(Arena*);
template<> ::NFMsg::cggetagencyinfo* Arena::CreateMaybeMessage<::NFMsg::cggetagencyinfo>(Arena*);
template<> ::NFMsg::cggetinitinfo* Arena::CreateMaybeMessage<::NFMsg::cggetinitinfo>(Arena*);
template<> ::NFMsg::cggetmailgoods* Arena::CreateMaybeMessage<::NFMsg::cggetmailgoods>(Arena*);
template<> ::NFMsg::cggetmaillist* Arena::CreateMaybeMessage<::NFMsg::cggetmaillist>(Arena*);
template<> ::NFMsg::cggetplayerinfo* Arena::CreateMaybeMessage<::NFMsg::cggetplayerinfo>(Arena*);
template<> ::NFMsg::cggivemoney* Arena::CreateMaybeMessage<::NFMsg::cggivemoney>(Arena*);
template<> ::NFMsg::cggivemoneyrecord* Arena::CreateMaybeMessage<::NFMsg::cggivemoneyrecord>(Arena*);
template<> ::NFMsg::cgheartbeat* Arena::CreateMaybeMessage<::NFMsg::cgheartbeat>(Arena*);
template<> ::NFMsg::cginvitebind* Arena::CreateMaybeMessage<::NFMsg::cginvitebind>(Arena*);
template<> ::NFMsg::cgluckturntable* Arena::CreateMaybeMessage<::NFMsg::cgluckturntable>(Arena*);
template<> ::NFMsg::cgplayerstatus* Arena::CreateMaybeMessage<::NFMsg::cgplayerstatus>(Arena*);
template<> ::NFMsg::cgreadmail* Arena::CreateMaybeMessage<::NFMsg::cgreadmail>(Arena*);
template<> ::NFMsg::cgreconnect* Arena::CreateMaybeMessage<::NFMsg::cgreconnect>(Arena*);
template<> ::NFMsg::cgregistration* Arena::CreateMaybeMessage<::NFMsg::cgregistration>(Arena*);
template<> ::NFMsg::cgupdateplayerinfo* Arena::CreateMaybeMessage<::NFMsg::cgupdateplayerinfo>(Arena*);
template<> ::NFMsg::cgupdateplayermoney* Arena::CreateMaybeMessage<::NFMsg::cgupdateplayermoney>(Arena*);
template<> ::NFMsg::gcaccountlogin* Arena::CreateMaybeMessage<::NFMsg::gcaccountlogin>(Arena*);
template<> ::NFMsg::gcagencyopt* Arena::CreateMaybeMessage<::NFMsg::gcagencyopt>(Arena*);
template<> ::NFMsg::gcaltersomeplayerinfo* Arena::CreateMaybeMessage<::NFMsg::gcaltersomeplayerinfo>(Arena*);
template<> ::NFMsg::gcapplygroupmaster* Arena::CreateMaybeMessage<::NFMsg::gcapplygroupmaster>(Arena*);
template<> ::NFMsg::gcbroadcast* Arena::CreateMaybeMessage<::NFMsg::gcbroadcast>(Arena*);
template<> ::NFMsg::gcdeletemail* Arena::CreateMaybeMessage<::NFMsg::gcdeletemail>(Arena*);
template<> ::NFMsg::gcentertable* Arena::CreateMaybeMessage<::NFMsg::gcentertable>(Arena*);
template<> ::NFMsg::gcgetagencyinfo* Arena::CreateMaybeMessage<::NFMsg::gcgetagencyinfo>(Arena*);
template<> ::NFMsg::gcgetinitinfo* Arena::CreateMaybeMessage<::NFMsg::gcgetinitinfo>(Arena*);
template<> ::NFMsg::gcgetmailgoods* Arena::CreateMaybeMessage<::NFMsg::gcgetmailgoods>(Arena*);
template<> ::NFMsg::gcgetmaillist* Arena::CreateMaybeMessage<::NFMsg::gcgetmaillist>(Arena*);
template<> ::NFMsg::gcgetplayerinfo* Arena::CreateMaybeMessage<::NFMsg::gcgetplayerinfo>(Arena*);
template<> ::NFMsg::gcgivemoney* Arena::CreateMaybeMessage<::NFMsg::gcgivemoney>(Arena*);
template<> ::NFMsg::gcgivemoneyrecord* Arena::CreateMaybeMessage<::NFMsg::gcgivemoneyrecord>(Arena*);
template<> ::NFMsg::gcheartbeat* Arena::CreateMaybeMessage<::NFMsg::gcheartbeat>(Arena*);
template<> ::NFMsg::gcinvitebind* Arena::CreateMaybeMessage<::NFMsg::gcinvitebind>(Arena*);
template<> ::NFMsg::gckitplayer* Arena::CreateMaybeMessage<::NFMsg::gckitplayer>(Arena*);
template<> ::NFMsg::gcluckturntable* Arena::CreateMaybeMessage<::NFMsg::gcluckturntable>(Arena*);
template<> ::NFMsg::gcnoticeinfo* Arena::CreateMaybeMessage<::NFMsg::gcnoticeinfo>(Arena*);
template<> ::NFMsg::gcplayerstatus* Arena::CreateMaybeMessage<::NFMsg::gcplayerstatus>(Arena*);
template<> ::NFMsg::gcreadmail* Arena::CreateMaybeMessage<::NFMsg::gcreadmail>(Arena*);
template<> ::NFMsg::gcreconnect* Arena::CreateMaybeMessage<::NFMsg::gcreconnect>(Arena*);
template<> ::NFMsg::gcregistration* Arena::CreateMaybeMessage<::NFMsg::gcregistration>(Arena*);
template<> ::NFMsg::gcupdategoodslist* Arena::CreateMaybeMessage<::NFMsg::gcupdategoodslist>(Arena*);
template<> ::NFMsg::gcupdateplayerinfo* Arena::CreateMaybeMessage<::NFMsg::gcupdateplayerinfo>(Arena*);
template<> ::NFMsg::gcupdateplayermoney* Arena::CreateMaybeMessage<::NFMsg::gcupdateplayermoney>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace NFMsg {

// ===================================================================

class cgaccountlogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgaccountlogin) */ {
 public:
  cgaccountlogin();
  virtual ~cgaccountlogin();

  cgaccountlogin(const cgaccountlogin& from);

  inline cgaccountlogin& operator=(const cgaccountlogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgaccountlogin(cgaccountlogin&& from) noexcept
    : cgaccountlogin() {
    *this = ::std::move(from);
  }

  inline cgaccountlogin& operator=(cgaccountlogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgaccountlogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgaccountlogin* internal_default_instance() {
    return reinterpret_cast<const cgaccountlogin*>(
               &_cgaccountlogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(cgaccountlogin* other);
  friend void swap(cgaccountlogin& a, cgaccountlogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgaccountlogin* New() const final {
    return CreateMaybeMessage<cgaccountlogin>(NULL);
  }

  cgaccountlogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgaccountlogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgaccountlogin& from);
  void MergeFrom(const cgaccountlogin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgaccountlogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string imei = 4;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 4;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string nickname = 5;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 5;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string devname = 6;
  bool has_devname() const;
  void clear_devname();
  static const int kDevnameFieldNumber = 6;
  const ::std::string& devname() const;
  void set_devname(const ::std::string& value);
  #if LANG_CXX11
  void set_devname(::std::string&& value);
  #endif
  void set_devname(const char* value);
  void set_devname(const char* value, size_t size);
  ::std::string* mutable_devname();
  ::std::string* release_devname();
  void set_allocated_devname(::std::string* devname);

  // optional string macname = 7;
  bool has_macname() const;
  void clear_macname();
  static const int kMacnameFieldNumber = 7;
  const ::std::string& macname() const;
  void set_macname(const ::std::string& value);
  #if LANG_CXX11
  void set_macname(::std::string&& value);
  #endif
  void set_macname(const char* value);
  void set_macname(const char* value, size_t size);
  ::std::string* mutable_macname();
  ::std::string* release_macname();
  void set_allocated_macname(::std::string* macname);

  // optional string channel = 8;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 8;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // optional string province = 9;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 9;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string city = 10;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 10;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string phonenum = 12;
  bool has_phonenum() const;
  void clear_phonenum();
  static const int kPhonenumFieldNumber = 12;
  const ::std::string& phonenum() const;
  void set_phonenum(const ::std::string& value);
  #if LANG_CXX11
  void set_phonenum(::std::string&& value);
  #endif
  void set_phonenum(const char* value);
  void set_phonenum(const char* value, size_t size);
  ::std::string* mutable_phonenum();
  ::std::string* release_phonenum();
  void set_allocated_phonenum(::std::string* phonenum);

  // optional string cid = 16;
  bool has_cid() const;
  void clear_cid();
  static const int kCidFieldNumber = 16;
  const ::std::string& cid() const;
  void set_cid(const ::std::string& value);
  #if LANG_CXX11
  void set_cid(::std::string&& value);
  #endif
  void set_cid(const char* value);
  void set_cid(const char* value, size_t size);
  ::std::string* mutable_cid();
  ::std::string* release_cid();
  void set_allocated_cid(::std::string* cid);

  // optional string platformid = 17;
  bool has_platformid() const;
  void clear_platformid();
  static const int kPlatformidFieldNumber = 17;
  const ::std::string& platformid() const;
  void set_platformid(const ::std::string& value);
  #if LANG_CXX11
  void set_platformid(::std::string&& value);
  #endif
  void set_platformid(const char* value);
  void set_platformid(const char* value, size_t size);
  ::std::string* mutable_platformid();
  ::std::string* release_platformid();
  void set_allocated_platformid(::std::string* platformid);

  // optional string bindnick = 18;
  bool has_bindnick() const;
  void clear_bindnick();
  static const int kBindnickFieldNumber = 18;
  const ::std::string& bindnick() const;
  void set_bindnick(const ::std::string& value);
  #if LANG_CXX11
  void set_bindnick(::std::string&& value);
  #endif
  void set_bindnick(const char* value);
  void set_bindnick(const char* value, size_t size);
  ::std::string* mutable_bindnick();
  ::std::string* release_bindnick();
  void set_allocated_bindnick(::std::string* bindnick);

  // optional int32 mobileid = 11;
  bool has_mobileid() const;
  void clear_mobileid();
  static const int kMobileidFieldNumber = 11;
  ::google::protobuf::int32 mobileid() const;
  void set_mobileid(::google::protobuf::int32 value);

  // optional int32 inviterid = 13;
  bool has_inviterid() const;
  void clear_inviterid();
  static const int kInviteridFieldNumber = 13;
  ::google::protobuf::int32 inviterid() const;
  void set_inviterid(::google::protobuf::int32 value);

  // optional int32 bindtype = 14;
  bool has_bindtype() const;
  void clear_bindtype();
  static const int kBindtypeFieldNumber = 14;
  ::google::protobuf::int32 bindtype() const;
  void set_bindtype(::google::protobuf::int32 value);

  // optional int32 pushtype = 15;
  bool has_pushtype() const;
  void clear_pushtype();
  static const int kPushtypeFieldNumber = 15;
  ::google::protobuf::int32 pushtype() const;
  void set_pushtype(::google::protobuf::int32 value);

  // optional int32 mobiletype = 19;
  bool has_mobiletype() const;
  void clear_mobiletype();
  static const int kMobiletypeFieldNumber = 19;
  ::google::protobuf::int32 mobiletype() const;
  void set_mobiletype(::google::protobuf::int32 value);

  // optional int32 sex = 20;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 20;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgaccountlogin)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();
  void set_has_imei();
  void clear_has_imei();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_devname();
  void clear_has_devname();
  void set_has_macname();
  void clear_has_macname();
  void set_has_channel();
  void clear_has_channel();
  void set_has_province();
  void clear_has_province();
  void set_has_city();
  void clear_has_city();
  void set_has_mobileid();
  void clear_has_mobileid();
  void set_has_phonenum();
  void clear_has_phonenum();
  void set_has_inviterid();
  void clear_has_inviterid();
  void set_has_bindtype();
  void clear_has_bindtype();
  void set_has_pushtype();
  void clear_has_pushtype();
  void set_has_cid();
  void clear_has_cid();
  void set_has_platformid();
  void clear_has_platformid();
  void set_has_bindnick();
  void clear_has_bindnick();
  void set_has_mobiletype();
  void clear_has_mobiletype();
  void set_has_sex();
  void clear_has_sex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr devname_;
  ::google::protobuf::internal::ArenaStringPtr macname_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr phonenum_;
  ::google::protobuf::internal::ArenaStringPtr cid_;
  ::google::protobuf::internal::ArenaStringPtr platformid_;
  ::google::protobuf::internal::ArenaStringPtr bindnick_;
  ::google::protobuf::int32 mobileid_;
  ::google::protobuf::int32 inviterid_;
  ::google::protobuf::int32 bindtype_;
  ::google::protobuf::int32 pushtype_;
  ::google::protobuf::int32 mobiletype_;
  ::google::protobuf::int32 sex_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcaccountlogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcaccountlogin) */ {
 public:
  gcaccountlogin();
  virtual ~gcaccountlogin();

  gcaccountlogin(const gcaccountlogin& from);

  inline gcaccountlogin& operator=(const gcaccountlogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcaccountlogin(gcaccountlogin&& from) noexcept
    : gcaccountlogin() {
    *this = ::std::move(from);
  }

  inline gcaccountlogin& operator=(gcaccountlogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcaccountlogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcaccountlogin* internal_default_instance() {
    return reinterpret_cast<const gcaccountlogin*>(
               &_gcaccountlogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(gcaccountlogin* other);
  friend void swap(gcaccountlogin& a, gcaccountlogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcaccountlogin* New() const final {
    return CreateMaybeMessage<gcaccountlogin>(NULL);
  }

  gcaccountlogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcaccountlogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcaccountlogin& from);
  void MergeFrom(const gcaccountlogin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcaccountlogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NFMsg.playerinfo pinfo = 2;
  bool has_pinfo() const;
  void clear_pinfo();
  static const int kPinfoFieldNumber = 2;
  private:
  const ::NFMsg::playerinfo& _internal_pinfo() const;
  public:
  const ::NFMsg::playerinfo& pinfo() const;
  ::NFMsg::playerinfo* release_pinfo();
  ::NFMsg::playerinfo* mutable_pinfo();
  void set_allocated_pinfo(::NFMsg::playerinfo* pinfo);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 tableid = 3;
  bool has_tableid() const;
  void clear_tableid();
  static const int kTableidFieldNumber = 3;
  ::google::protobuf::int32 tableid() const;
  void set_tableid(::google::protobuf::int32 value);

  // optional int32 systime = 4;
  bool has_systime() const;
  void clear_systime();
  static const int kSystimeFieldNumber = 4;
  ::google::protobuf::int32 systime() const;
  void set_systime(::google::protobuf::int32 value);

  // optional int32 tabletype = 5;
  bool has_tabletype() const;
  void clear_tabletype();
  static const int kTabletypeFieldNumber = 5;
  ::google::protobuf::int32 tabletype() const;
  void set_tabletype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcaccountlogin)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_pinfo();
  void clear_has_pinfo();
  void set_has_tableid();
  void clear_has_tableid();
  void set_has_systime();
  void clear_has_systime();
  void set_has_tabletype();
  void clear_has_tabletype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::NFMsg::playerinfo* pinfo_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 tableid_;
  ::google::protobuf::int32 systime_;
  ::google::protobuf::int32 tabletype_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cggetplayerinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cggetplayerinfo) */ {
 public:
  cggetplayerinfo();
  virtual ~cggetplayerinfo();

  cggetplayerinfo(const cggetplayerinfo& from);

  inline cggetplayerinfo& operator=(const cggetplayerinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cggetplayerinfo(cggetplayerinfo&& from) noexcept
    : cggetplayerinfo() {
    *this = ::std::move(from);
  }

  inline cggetplayerinfo& operator=(cggetplayerinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cggetplayerinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cggetplayerinfo* internal_default_instance() {
    return reinterpret_cast<const cggetplayerinfo*>(
               &_cggetplayerinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(cggetplayerinfo* other);
  friend void swap(cggetplayerinfo& a, cggetplayerinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cggetplayerinfo* New() const final {
    return CreateMaybeMessage<cggetplayerinfo>(NULL);
  }

  cggetplayerinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cggetplayerinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cggetplayerinfo& from);
  void MergeFrom(const cggetplayerinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cggetplayerinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cggetplayerinfo)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcgetplayerinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcgetplayerinfo) */ {
 public:
  gcgetplayerinfo();
  virtual ~gcgetplayerinfo();

  gcgetplayerinfo(const gcgetplayerinfo& from);

  inline gcgetplayerinfo& operator=(const gcgetplayerinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcgetplayerinfo(gcgetplayerinfo&& from) noexcept
    : gcgetplayerinfo() {
    *this = ::std::move(from);
  }

  inline gcgetplayerinfo& operator=(gcgetplayerinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcgetplayerinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcgetplayerinfo* internal_default_instance() {
    return reinterpret_cast<const gcgetplayerinfo*>(
               &_gcgetplayerinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(gcgetplayerinfo* other);
  friend void swap(gcgetplayerinfo& a, gcgetplayerinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcgetplayerinfo* New() const final {
    return CreateMaybeMessage<gcgetplayerinfo>(NULL);
  }

  gcgetplayerinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcgetplayerinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcgetplayerinfo& from);
  void MergeFrom(const gcgetplayerinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcgetplayerinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NFMsg.playerinfo pinfo = 2;
  bool has_pinfo() const;
  void clear_pinfo();
  static const int kPinfoFieldNumber = 2;
  private:
  const ::NFMsg::playerinfo& _internal_pinfo() const;
  public:
  const ::NFMsg::playerinfo& pinfo() const;
  ::NFMsg::playerinfo* release_pinfo();
  ::NFMsg::playerinfo* mutable_pinfo();
  void set_allocated_pinfo(::NFMsg::playerinfo* pinfo);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcgetplayerinfo)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_pinfo();
  void clear_has_pinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::NFMsg::playerinfo* pinfo_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgreconnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgreconnect) */ {
 public:
  cgreconnect();
  virtual ~cgreconnect();

  cgreconnect(const cgreconnect& from);

  inline cgreconnect& operator=(const cgreconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgreconnect(cgreconnect&& from) noexcept
    : cgreconnect() {
    *this = ::std::move(from);
  }

  inline cgreconnect& operator=(cgreconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgreconnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgreconnect* internal_default_instance() {
    return reinterpret_cast<const cgreconnect*>(
               &_cgreconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(cgreconnect* other);
  friend void swap(cgreconnect& a, cgreconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgreconnect* New() const final {
    return CreateMaybeMessage<cgreconnect>(NULL);
  }

  cgreconnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgreconnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgreconnect& from);
  void MergeFrom(const cgreconnect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgreconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgreconnect)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcreconnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcreconnect) */ {
 public:
  gcreconnect();
  virtual ~gcreconnect();

  gcreconnect(const gcreconnect& from);

  inline gcreconnect& operator=(const gcreconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcreconnect(gcreconnect&& from) noexcept
    : gcreconnect() {
    *this = ::std::move(from);
  }

  inline gcreconnect& operator=(gcreconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcreconnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcreconnect* internal_default_instance() {
    return reinterpret_cast<const gcreconnect*>(
               &_gcreconnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(gcreconnect* other);
  friend void swap(gcreconnect& a, gcreconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcreconnect* New() const final {
    return CreateMaybeMessage<gcreconnect>(NULL);
  }

  gcreconnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcreconnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcreconnect& from);
  void MergeFrom(const gcreconnect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcreconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msgbegin = 2;
  bool has_msgbegin() const;
  void clear_msgbegin();
  static const int kMsgbeginFieldNumber = 2;
  const ::std::string& msgbegin() const;
  void set_msgbegin(const ::std::string& value);
  #if LANG_CXX11
  void set_msgbegin(::std::string&& value);
  #endif
  void set_msgbegin(const char* value);
  void set_msgbegin(const char* value, size_t size);
  ::std::string* mutable_msgbegin();
  ::std::string* release_msgbegin();
  void set_allocated_msgbegin(::std::string* msgbegin);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 tableid = 3;
  bool has_tableid() const;
  void clear_tableid();
  static const int kTableidFieldNumber = 3;
  ::google::protobuf::int32 tableid() const;
  void set_tableid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcreconnect)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_msgbegin();
  void clear_has_msgbegin();
  void set_has_tableid();
  void clear_has_tableid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msgbegin_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 tableid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gckitplayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gckitplayer) */ {
 public:
  gckitplayer();
  virtual ~gckitplayer();

  gckitplayer(const gckitplayer& from);

  inline gckitplayer& operator=(const gckitplayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gckitplayer(gckitplayer&& from) noexcept
    : gckitplayer() {
    *this = ::std::move(from);
  }

  inline gckitplayer& operator=(gckitplayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gckitplayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gckitplayer* internal_default_instance() {
    return reinterpret_cast<const gckitplayer*>(
               &_gckitplayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(gckitplayer* other);
  friend void swap(gckitplayer& a, gckitplayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gckitplayer* New() const final {
    return CreateMaybeMessage<gckitplayer>(NULL);
  }

  gckitplayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gckitplayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gckitplayer& from);
  void MergeFrom(const gckitplayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gckitplayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 kittype = 2;
  bool has_kittype() const;
  void clear_kittype();
  static const int kKittypeFieldNumber = 2;
  ::google::protobuf::int32 kittype() const;
  void set_kittype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gckitplayer)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_kittype();
  void clear_has_kittype();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 kittype_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcnoticeinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcnoticeinfo) */ {
 public:
  gcnoticeinfo();
  virtual ~gcnoticeinfo();

  gcnoticeinfo(const gcnoticeinfo& from);

  inline gcnoticeinfo& operator=(const gcnoticeinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcnoticeinfo(gcnoticeinfo&& from) noexcept
    : gcnoticeinfo() {
    *this = ::std::move(from);
  }

  inline gcnoticeinfo& operator=(gcnoticeinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcnoticeinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcnoticeinfo* internal_default_instance() {
    return reinterpret_cast<const gcnoticeinfo*>(
               &_gcnoticeinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(gcnoticeinfo* other);
  friend void swap(gcnoticeinfo& a, gcnoticeinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcnoticeinfo* New() const final {
    return CreateMaybeMessage<gcnoticeinfo>(NULL);
  }

  gcnoticeinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcnoticeinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcnoticeinfo& from);
  void MergeFrom(const gcnoticeinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcnoticeinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NFMsg.noticeinfo noticelist = 2;
  int noticelist_size() const;
  void clear_noticelist();
  static const int kNoticelistFieldNumber = 2;
  ::NFMsg::noticeinfo* mutable_noticelist(int index);
  ::google::protobuf::RepeatedPtrField< ::NFMsg::noticeinfo >*
      mutable_noticelist();
  const ::NFMsg::noticeinfo& noticelist(int index) const;
  ::NFMsg::noticeinfo* add_noticelist();
  const ::google::protobuf::RepeatedPtrField< ::NFMsg::noticeinfo >&
      noticelist() const;

  // repeated int32 friendslist = 3;
  int friendslist_size() const;
  void clear_friendslist();
  static const int kFriendslistFieldNumber = 3;
  ::google::protobuf::int32 friendslist(int index) const;
  void set_friendslist(int index, ::google::protobuf::int32 value);
  void add_friendslist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      friendslist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_friendslist();

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcnoticeinfo)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::NFMsg::noticeinfo > noticelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > friendslist_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgheartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgheartbeat) */ {
 public:
  cgheartbeat();
  virtual ~cgheartbeat();

  cgheartbeat(const cgheartbeat& from);

  inline cgheartbeat& operator=(const cgheartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgheartbeat(cgheartbeat&& from) noexcept
    : cgheartbeat() {
    *this = ::std::move(from);
  }

  inline cgheartbeat& operator=(cgheartbeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgheartbeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgheartbeat* internal_default_instance() {
    return reinterpret_cast<const cgheartbeat*>(
               &_cgheartbeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(cgheartbeat* other);
  friend void swap(cgheartbeat& a, cgheartbeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgheartbeat* New() const final {
    return CreateMaybeMessage<cgheartbeat>(NULL);
  }

  cgheartbeat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgheartbeat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgheartbeat& from);
  void MergeFrom(const cgheartbeat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgheartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgheartbeat)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcheartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcheartbeat) */ {
 public:
  gcheartbeat();
  virtual ~gcheartbeat();

  gcheartbeat(const gcheartbeat& from);

  inline gcheartbeat& operator=(const gcheartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcheartbeat(gcheartbeat&& from) noexcept
    : gcheartbeat() {
    *this = ::std::move(from);
  }

  inline gcheartbeat& operator=(gcheartbeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcheartbeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcheartbeat* internal_default_instance() {
    return reinterpret_cast<const gcheartbeat*>(
               &_gcheartbeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(gcheartbeat* other);
  friend void swap(gcheartbeat& a, gcheartbeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcheartbeat* New() const final {
    return CreateMaybeMessage<gcheartbeat>(NULL);
  }

  gcheartbeat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcheartbeat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcheartbeat& from);
  void MergeFrom(const gcheartbeat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcheartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcheartbeat)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cggetinitinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cggetinitinfo) */ {
 public:
  cggetinitinfo();
  virtual ~cggetinitinfo();

  cggetinitinfo(const cggetinitinfo& from);

  inline cggetinitinfo& operator=(const cggetinitinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cggetinitinfo(cggetinitinfo&& from) noexcept
    : cggetinitinfo() {
    *this = ::std::move(from);
  }

  inline cggetinitinfo& operator=(cggetinitinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cggetinitinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cggetinitinfo* internal_default_instance() {
    return reinterpret_cast<const cggetinitinfo*>(
               &_cggetinitinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(cggetinitinfo* other);
  friend void swap(cggetinitinfo& a, cggetinitinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cggetinitinfo* New() const final {
    return CreateMaybeMessage<cggetinitinfo>(NULL);
  }

  cggetinitinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cggetinitinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cggetinitinfo& from);
  void MergeFrom(const cggetinitinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cggetinitinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel = 2;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cggetinitinfo)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_channel();
  void clear_has_channel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcgetinitinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcgetinitinfo) */ {
 public:
  gcgetinitinfo();
  virtual ~gcgetinitinfo();

  gcgetinitinfo(const gcgetinitinfo& from);

  inline gcgetinitinfo& operator=(const gcgetinitinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcgetinitinfo(gcgetinitinfo&& from) noexcept
    : gcgetinitinfo() {
    *this = ::std::move(from);
  }

  inline gcgetinitinfo& operator=(gcgetinitinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcgetinitinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcgetinitinfo* internal_default_instance() {
    return reinterpret_cast<const gcgetinitinfo*>(
               &_gcgetinitinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(gcgetinitinfo* other);
  friend void swap(gcgetinitinfo& a, gcgetinitinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcgetinitinfo* New() const final {
    return CreateMaybeMessage<gcgetinitinfo>(NULL);
  }

  gcgetinitinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcgetinitinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcgetinitinfo& from);
  void MergeFrom(const gcgetinitinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcgetinitinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 paytype = 2;
  int paytype_size() const;
  void clear_paytype();
  static const int kPaytypeFieldNumber = 2;
  ::google::protobuf::int32 paytype(int index) const;
  void set_paytype(int index, ::google::protobuf::int32 value);
  void add_paytype(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      paytype() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_paytype();

  // repeated int32 mdelist = 4;
  int mdelist_size() const;
  void clear_mdelist();
  static const int kMdelistFieldNumber = 4;
  ::google::protobuf::int32 mdelist(int index) const;
  void set_mdelist(int index, ::google::protobuf::int32 value);
  void add_mdelist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mdelist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mdelist();

  // repeated int32 paylist = 5;
  int paylist_size() const;
  void clear_paylist();
  static const int kPaylistFieldNumber = 5;
  ::google::protobuf::int32 paylist(int index) const;
  void set_paylist(int index, ::google::protobuf::int32 value);
  void add_paylist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      paylist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_paylist();

  // repeated int32 shoplist = 6;
  int shoplist_size() const;
  void clear_shoplist();
  static const int kShoplistFieldNumber = 6;
  ::google::protobuf::int32 shoplist(int index) const;
  void set_shoplist(int index, ::google::protobuf::int32 value);
  void add_shoplist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shoplist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shoplist();

  // repeated string wechatlist = 7;
  int wechatlist_size() const;
  void clear_wechatlist();
  static const int kWechatlistFieldNumber = 7;
  const ::std::string& wechatlist(int index) const;
  ::std::string* mutable_wechatlist(int index);
  void set_wechatlist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_wechatlist(int index, ::std::string&& value);
  #endif
  void set_wechatlist(int index, const char* value);
  void set_wechatlist(int index, const char* value, size_t size);
  ::std::string* add_wechatlist();
  void add_wechatlist(const ::std::string& value);
  #if LANG_CXX11
  void add_wechatlist(::std::string&& value);
  #endif
  void add_wechatlist(const char* value);
  void add_wechatlist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& wechatlist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_wechatlist();

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcgetinitinfo)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > paytype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mdelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > paylist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shoplist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> wechatlist_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcbroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcbroadcast) */ {
 public:
  gcbroadcast();
  virtual ~gcbroadcast();

  gcbroadcast(const gcbroadcast& from);

  inline gcbroadcast& operator=(const gcbroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcbroadcast(gcbroadcast&& from) noexcept
    : gcbroadcast() {
    *this = ::std::move(from);
  }

  inline gcbroadcast& operator=(gcbroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcbroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcbroadcast* internal_default_instance() {
    return reinterpret_cast<const gcbroadcast*>(
               &_gcbroadcast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(gcbroadcast* other);
  friend void swap(gcbroadcast& a, gcbroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcbroadcast* New() const final {
    return CreateMaybeMessage<gcbroadcast>(NULL);
  }

  gcbroadcast* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcbroadcast>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcbroadcast& from);
  void MergeFrom(const gcbroadcast& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcbroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 broadtypelist = 2;
  int broadtypelist_size() const;
  void clear_broadtypelist();
  static const int kBroadtypelistFieldNumber = 2;
  ::google::protobuf::int32 broadtypelist(int index) const;
  void set_broadtypelist(int index, ::google::protobuf::int32 value);
  void add_broadtypelist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      broadtypelist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_broadtypelist();

  // repeated int32 senderidlist = 3;
  int senderidlist_size() const;
  void clear_senderidlist();
  static const int kSenderidlistFieldNumber = 3;
  ::google::protobuf::int32 senderidlist(int index) const;
  void set_senderidlist(int index, ::google::protobuf::int32 value);
  void add_senderidlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      senderidlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_senderidlist();

  // repeated string senderlist = 4;
  int senderlist_size() const;
  void clear_senderlist();
  static const int kSenderlistFieldNumber = 4;
  const ::std::string& senderlist(int index) const;
  ::std::string* mutable_senderlist(int index);
  void set_senderlist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_senderlist(int index, ::std::string&& value);
  #endif
  void set_senderlist(int index, const char* value);
  void set_senderlist(int index, const char* value, size_t size);
  ::std::string* add_senderlist();
  void add_senderlist(const ::std::string& value);
  #if LANG_CXX11
  void add_senderlist(::std::string&& value);
  #endif
  void add_senderlist(const char* value);
  void add_senderlist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& senderlist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_senderlist();

  // repeated string msglist = 5;
  int msglist_size() const;
  void clear_msglist();
  static const int kMsglistFieldNumber = 5;
  const ::std::string& msglist(int index) const;
  ::std::string* mutable_msglist(int index);
  void set_msglist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_msglist(int index, ::std::string&& value);
  #endif
  void set_msglist(int index, const char* value);
  void set_msglist(int index, const char* value, size_t size);
  ::std::string* add_msglist();
  void add_msglist(const ::std::string& value);
  #if LANG_CXX11
  void add_msglist(::std::string&& value);
  #endif
  void add_msglist(const char* value);
  void add_msglist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& msglist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_msglist();

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcbroadcast)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > broadtypelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > senderidlist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> senderlist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> msglist_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cggetmaillist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cggetmaillist) */ {
 public:
  cggetmaillist();
  virtual ~cggetmaillist();

  cggetmaillist(const cggetmaillist& from);

  inline cggetmaillist& operator=(const cggetmaillist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cggetmaillist(cggetmaillist&& from) noexcept
    : cggetmaillist() {
    *this = ::std::move(from);
  }

  inline cggetmaillist& operator=(cggetmaillist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cggetmaillist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cggetmaillist* internal_default_instance() {
    return reinterpret_cast<const cggetmaillist*>(
               &_cggetmaillist_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(cggetmaillist* other);
  friend void swap(cggetmaillist& a, cggetmaillist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cggetmaillist* New() const final {
    return CreateMaybeMessage<cggetmaillist>(NULL);
  }

  cggetmaillist* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cggetmaillist>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cggetmaillist& from);
  void MergeFrom(const cggetmaillist& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cggetmaillist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 pagenum = 2;
  bool has_pagenum() const;
  void clear_pagenum();
  static const int kPagenumFieldNumber = 2;
  ::google::protobuf::int32 pagenum() const;
  void set_pagenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cggetmaillist)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_pagenum();
  void clear_has_pagenum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 pagenum_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcgetmaillist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcgetmaillist) */ {
 public:
  gcgetmaillist();
  virtual ~gcgetmaillist();

  gcgetmaillist(const gcgetmaillist& from);

  inline gcgetmaillist& operator=(const gcgetmaillist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcgetmaillist(gcgetmaillist&& from) noexcept
    : gcgetmaillist() {
    *this = ::std::move(from);
  }

  inline gcgetmaillist& operator=(gcgetmaillist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcgetmaillist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcgetmaillist* internal_default_instance() {
    return reinterpret_cast<const gcgetmaillist*>(
               &_gcgetmaillist_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(gcgetmaillist* other);
  friend void swap(gcgetmaillist& a, gcgetmaillist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcgetmaillist* New() const final {
    return CreateMaybeMessage<gcgetmaillist>(NULL);
  }

  gcgetmaillist* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcgetmaillist>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcgetmaillist& from);
  void MergeFrom(const gcgetmaillist& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcgetmaillist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NFMsg.mailinfo mlist = 3;
  int mlist_size() const;
  void clear_mlist();
  static const int kMlistFieldNumber = 3;
  ::NFMsg::mailinfo* mutable_mlist(int index);
  ::google::protobuf::RepeatedPtrField< ::NFMsg::mailinfo >*
      mutable_mlist();
  const ::NFMsg::mailinfo& mlist(int index) const;
  ::NFMsg::mailinfo* add_mlist();
  const ::google::protobuf::RepeatedPtrField< ::NFMsg::mailinfo >&
      mlist() const;

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcgetmaillist)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::NFMsg::mailinfo > mlist_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgreadmail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgreadmail) */ {
 public:
  cgreadmail();
  virtual ~cgreadmail();

  cgreadmail(const cgreadmail& from);

  inline cgreadmail& operator=(const cgreadmail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgreadmail(cgreadmail&& from) noexcept
    : cgreadmail() {
    *this = ::std::move(from);
  }

  inline cgreadmail& operator=(cgreadmail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgreadmail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgreadmail* internal_default_instance() {
    return reinterpret_cast<const cgreadmail*>(
               &_cgreadmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(cgreadmail* other);
  friend void swap(cgreadmail& a, cgreadmail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgreadmail* New() const final {
    return CreateMaybeMessage<cgreadmail>(NULL);
  }

  cgreadmail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgreadmail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgreadmail& from);
  void MergeFrom(const cgreadmail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgreadmail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 mailid = 2;
  bool has_mailid() const;
  void clear_mailid();
  static const int kMailidFieldNumber = 2;
  ::google::protobuf::int32 mailid() const;
  void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgreadmail)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_mailid();
  void clear_has_mailid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 mailid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcreadmail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcreadmail) */ {
 public:
  gcreadmail();
  virtual ~gcreadmail();

  gcreadmail(const gcreadmail& from);

  inline gcreadmail& operator=(const gcreadmail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcreadmail(gcreadmail&& from) noexcept
    : gcreadmail() {
    *this = ::std::move(from);
  }

  inline gcreadmail& operator=(gcreadmail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcreadmail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcreadmail* internal_default_instance() {
    return reinterpret_cast<const gcreadmail*>(
               &_gcreadmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(gcreadmail* other);
  friend void swap(gcreadmail& a, gcreadmail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcreadmail* New() const final {
    return CreateMaybeMessage<gcreadmail>(NULL);
  }

  gcreadmail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcreadmail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcreadmail& from);
  void MergeFrom(const gcreadmail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcreadmail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 mailid = 2;
  bool has_mailid() const;
  void clear_mailid();
  static const int kMailidFieldNumber = 2;
  ::google::protobuf::int32 mailid() const;
  void set_mailid(::google::protobuf::int32 value);

  // optional int32 mailstate = 3;
  bool has_mailstate() const;
  void clear_mailstate();
  static const int kMailstateFieldNumber = 3;
  ::google::protobuf::int32 mailstate() const;
  void set_mailstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcreadmail)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_mailid();
  void clear_has_mailid();
  void set_has_mailstate();
  void clear_has_mailstate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 mailid_;
  ::google::protobuf::int32 mailstate_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cggetmailgoods : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cggetmailgoods) */ {
 public:
  cggetmailgoods();
  virtual ~cggetmailgoods();

  cggetmailgoods(const cggetmailgoods& from);

  inline cggetmailgoods& operator=(const cggetmailgoods& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cggetmailgoods(cggetmailgoods&& from) noexcept
    : cggetmailgoods() {
    *this = ::std::move(from);
  }

  inline cggetmailgoods& operator=(cggetmailgoods&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cggetmailgoods& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cggetmailgoods* internal_default_instance() {
    return reinterpret_cast<const cggetmailgoods*>(
               &_cggetmailgoods_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(cggetmailgoods* other);
  friend void swap(cggetmailgoods& a, cggetmailgoods& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cggetmailgoods* New() const final {
    return CreateMaybeMessage<cggetmailgoods>(NULL);
  }

  cggetmailgoods* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cggetmailgoods>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cggetmailgoods& from);
  void MergeFrom(const cggetmailgoods& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cggetmailgoods* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 mailid = 2;
  bool has_mailid() const;
  void clear_mailid();
  static const int kMailidFieldNumber = 2;
  ::google::protobuf::int32 mailid() const;
  void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cggetmailgoods)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_mailid();
  void clear_has_mailid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 mailid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcgetmailgoods : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcgetmailgoods) */ {
 public:
  gcgetmailgoods();
  virtual ~gcgetmailgoods();

  gcgetmailgoods(const gcgetmailgoods& from);

  inline gcgetmailgoods& operator=(const gcgetmailgoods& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcgetmailgoods(gcgetmailgoods&& from) noexcept
    : gcgetmailgoods() {
    *this = ::std::move(from);
  }

  inline gcgetmailgoods& operator=(gcgetmailgoods&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcgetmailgoods& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcgetmailgoods* internal_default_instance() {
    return reinterpret_cast<const gcgetmailgoods*>(
               &_gcgetmailgoods_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(gcgetmailgoods* other);
  friend void swap(gcgetmailgoods& a, gcgetmailgoods& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcgetmailgoods* New() const final {
    return CreateMaybeMessage<gcgetmailgoods>(NULL);
  }

  gcgetmailgoods* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcgetmailgoods>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcgetmailgoods& from);
  void MergeFrom(const gcgetmailgoods& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcgetmailgoods* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NFMsg.goodsinfo getlist = 4;
  int getlist_size() const;
  void clear_getlist();
  static const int kGetlistFieldNumber = 4;
  ::NFMsg::goodsinfo* mutable_getlist(int index);
  ::google::protobuf::RepeatedPtrField< ::NFMsg::goodsinfo >*
      mutable_getlist();
  const ::NFMsg::goodsinfo& getlist(int index) const;
  ::NFMsg::goodsinfo* add_getlist();
  const ::google::protobuf::RepeatedPtrField< ::NFMsg::goodsinfo >&
      getlist() const;

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 mailid = 2;
  bool has_mailid() const;
  void clear_mailid();
  static const int kMailidFieldNumber = 2;
  ::google::protobuf::int32 mailid() const;
  void set_mailid(::google::protobuf::int32 value);

  // optional int32 mailstate = 3;
  bool has_mailstate() const;
  void clear_mailstate();
  static const int kMailstateFieldNumber = 3;
  ::google::protobuf::int32 mailstate() const;
  void set_mailstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcgetmailgoods)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_mailid();
  void clear_has_mailid();
  void set_has_mailstate();
  void clear_has_mailstate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::NFMsg::goodsinfo > getlist_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 mailid_;
  ::google::protobuf::int32 mailstate_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgdeletemail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgdeletemail) */ {
 public:
  cgdeletemail();
  virtual ~cgdeletemail();

  cgdeletemail(const cgdeletemail& from);

  inline cgdeletemail& operator=(const cgdeletemail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgdeletemail(cgdeletemail&& from) noexcept
    : cgdeletemail() {
    *this = ::std::move(from);
  }

  inline cgdeletemail& operator=(cgdeletemail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgdeletemail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgdeletemail* internal_default_instance() {
    return reinterpret_cast<const cgdeletemail*>(
               &_cgdeletemail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(cgdeletemail* other);
  friend void swap(cgdeletemail& a, cgdeletemail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgdeletemail* New() const final {
    return CreateMaybeMessage<cgdeletemail>(NULL);
  }

  cgdeletemail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgdeletemail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgdeletemail& from);
  void MergeFrom(const cgdeletemail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgdeletemail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 mailid = 2;
  bool has_mailid() const;
  void clear_mailid();
  static const int kMailidFieldNumber = 2;
  ::google::protobuf::int32 mailid() const;
  void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgdeletemail)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_mailid();
  void clear_has_mailid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 mailid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcdeletemail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcdeletemail) */ {
 public:
  gcdeletemail();
  virtual ~gcdeletemail();

  gcdeletemail(const gcdeletemail& from);

  inline gcdeletemail& operator=(const gcdeletemail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcdeletemail(gcdeletemail&& from) noexcept
    : gcdeletemail() {
    *this = ::std::move(from);
  }

  inline gcdeletemail& operator=(gcdeletemail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcdeletemail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcdeletemail* internal_default_instance() {
    return reinterpret_cast<const gcdeletemail*>(
               &_gcdeletemail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(gcdeletemail* other);
  friend void swap(gcdeletemail& a, gcdeletemail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcdeletemail* New() const final {
    return CreateMaybeMessage<gcdeletemail>(NULL);
  }

  gcdeletemail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcdeletemail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcdeletemail& from);
  void MergeFrom(const gcdeletemail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcdeletemail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 mailid = 2;
  bool has_mailid() const;
  void clear_mailid();
  static const int kMailidFieldNumber = 2;
  ::google::protobuf::int32 mailid() const;
  void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcdeletemail)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_mailid();
  void clear_has_mailid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 mailid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgplayerstatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgplayerstatus) */ {
 public:
  cgplayerstatus();
  virtual ~cgplayerstatus();

  cgplayerstatus(const cgplayerstatus& from);

  inline cgplayerstatus& operator=(const cgplayerstatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgplayerstatus(cgplayerstatus&& from) noexcept
    : cgplayerstatus() {
    *this = ::std::move(from);
  }

  inline cgplayerstatus& operator=(cgplayerstatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgplayerstatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgplayerstatus* internal_default_instance() {
    return reinterpret_cast<const cgplayerstatus*>(
               &_cgplayerstatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(cgplayerstatus* other);
  friend void swap(cgplayerstatus& a, cgplayerstatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgplayerstatus* New() const final {
    return CreateMaybeMessage<cgplayerstatus>(NULL);
  }

  cgplayerstatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgplayerstatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgplayerstatus& from);
  void MergeFrom(const cgplayerstatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgplayerstatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgplayerstatus)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcplayerstatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcplayerstatus) */ {
 public:
  gcplayerstatus();
  virtual ~gcplayerstatus();

  gcplayerstatus(const gcplayerstatus& from);

  inline gcplayerstatus& operator=(const gcplayerstatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcplayerstatus(gcplayerstatus&& from) noexcept
    : gcplayerstatus() {
    *this = ::std::move(from);
  }

  inline gcplayerstatus& operator=(gcplayerstatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcplayerstatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcplayerstatus* internal_default_instance() {
    return reinterpret_cast<const gcplayerstatus*>(
               &_gcplayerstatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(gcplayerstatus* other);
  friend void swap(gcplayerstatus& a, gcplayerstatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcplayerstatus* New() const final {
    return CreateMaybeMessage<gcplayerstatus>(NULL);
  }

  gcplayerstatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcplayerstatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcplayerstatus& from);
  void MergeFrom(const gcplayerstatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcplayerstatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 timemark = 4;
  bool has_timemark() const;
  void clear_timemark();
  static const int kTimemarkFieldNumber = 4;
  ::google::protobuf::int32 timemark() const;
  void set_timemark(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcplayerstatus)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_userid();
  void clear_has_userid();
  void set_has_status();
  void clear_has_status();
  void set_has_timemark();
  void clear_has_timemark();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 timemark_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgupdateplayerinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgupdateplayerinfo) */ {
 public:
  cgupdateplayerinfo();
  virtual ~cgupdateplayerinfo();

  cgupdateplayerinfo(const cgupdateplayerinfo& from);

  inline cgupdateplayerinfo& operator=(const cgupdateplayerinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgupdateplayerinfo(cgupdateplayerinfo&& from) noexcept
    : cgupdateplayerinfo() {
    *this = ::std::move(from);
  }

  inline cgupdateplayerinfo& operator=(cgupdateplayerinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgupdateplayerinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgupdateplayerinfo* internal_default_instance() {
    return reinterpret_cast<const cgupdateplayerinfo*>(
               &_cgupdateplayerinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(cgupdateplayerinfo* other);
  friend void swap(cgupdateplayerinfo& a, cgupdateplayerinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgupdateplayerinfo* New() const final {
    return CreateMaybeMessage<cgupdateplayerinfo>(NULL);
  }

  cgupdateplayerinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgupdateplayerinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgupdateplayerinfo& from);
  void MergeFrom(const cgupdateplayerinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgupdateplayerinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string typelist = 2;
  int typelist_size() const;
  void clear_typelist();
  static const int kTypelistFieldNumber = 2;
  const ::std::string& typelist(int index) const;
  ::std::string* mutable_typelist(int index);
  void set_typelist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_typelist(int index, ::std::string&& value);
  #endif
  void set_typelist(int index, const char* value);
  void set_typelist(int index, const char* value, size_t size);
  ::std::string* add_typelist();
  void add_typelist(const ::std::string& value);
  #if LANG_CXX11
  void add_typelist(::std::string&& value);
  #endif
  void add_typelist(const char* value);
  void add_typelist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& typelist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_typelist();

  // repeated string valuelist = 3;
  int valuelist_size() const;
  void clear_valuelist();
  static const int kValuelistFieldNumber = 3;
  const ::std::string& valuelist(int index) const;
  ::std::string* mutable_valuelist(int index);
  void set_valuelist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_valuelist(int index, ::std::string&& value);
  #endif
  void set_valuelist(int index, const char* value);
  void set_valuelist(int index, const char* value, size_t size);
  ::std::string* add_valuelist();
  void add_valuelist(const ::std::string& value);
  #if LANG_CXX11
  void add_valuelist(::std::string&& value);
  #endif
  void add_valuelist(const char* value);
  void add_valuelist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& valuelist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_valuelist();

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgupdateplayerinfo)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> typelist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> valuelist_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcupdateplayerinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcupdateplayerinfo) */ {
 public:
  gcupdateplayerinfo();
  virtual ~gcupdateplayerinfo();

  gcupdateplayerinfo(const gcupdateplayerinfo& from);

  inline gcupdateplayerinfo& operator=(const gcupdateplayerinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcupdateplayerinfo(gcupdateplayerinfo&& from) noexcept
    : gcupdateplayerinfo() {
    *this = ::std::move(from);
  }

  inline gcupdateplayerinfo& operator=(gcupdateplayerinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcupdateplayerinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcupdateplayerinfo* internal_default_instance() {
    return reinterpret_cast<const gcupdateplayerinfo*>(
               &_gcupdateplayerinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(gcupdateplayerinfo* other);
  friend void swap(gcupdateplayerinfo& a, gcupdateplayerinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcupdateplayerinfo* New() const final {
    return CreateMaybeMessage<gcupdateplayerinfo>(NULL);
  }

  gcupdateplayerinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcupdateplayerinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcupdateplayerinfo& from);
  void MergeFrom(const gcupdateplayerinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcupdateplayerinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string typelist = 2;
  int typelist_size() const;
  void clear_typelist();
  static const int kTypelistFieldNumber = 2;
  const ::std::string& typelist(int index) const;
  ::std::string* mutable_typelist(int index);
  void set_typelist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_typelist(int index, ::std::string&& value);
  #endif
  void set_typelist(int index, const char* value);
  void set_typelist(int index, const char* value, size_t size);
  ::std::string* add_typelist();
  void add_typelist(const ::std::string& value);
  #if LANG_CXX11
  void add_typelist(::std::string&& value);
  #endif
  void add_typelist(const char* value);
  void add_typelist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& typelist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_typelist();

  // repeated string valuelist = 3;
  int valuelist_size() const;
  void clear_valuelist();
  static const int kValuelistFieldNumber = 3;
  const ::std::string& valuelist(int index) const;
  ::std::string* mutable_valuelist(int index);
  void set_valuelist(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_valuelist(int index, ::std::string&& value);
  #endif
  void set_valuelist(int index, const char* value);
  void set_valuelist(int index, const char* value, size_t size);
  ::std::string* add_valuelist();
  void add_valuelist(const ::std::string& value);
  #if LANG_CXX11
  void add_valuelist(::std::string&& value);
  #endif
  void add_valuelist(const char* value);
  void add_valuelist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& valuelist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_valuelist();

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcupdateplayerinfo)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> typelist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> valuelist_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcupdategoodslist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcupdategoodslist) */ {
 public:
  gcupdategoodslist();
  virtual ~gcupdategoodslist();

  gcupdategoodslist(const gcupdategoodslist& from);

  inline gcupdategoodslist& operator=(const gcupdategoodslist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcupdategoodslist(gcupdategoodslist&& from) noexcept
    : gcupdategoodslist() {
    *this = ::std::move(from);
  }

  inline gcupdategoodslist& operator=(gcupdategoodslist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcupdategoodslist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcupdategoodslist* internal_default_instance() {
    return reinterpret_cast<const gcupdategoodslist*>(
               &_gcupdategoodslist_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(gcupdategoodslist* other);
  friend void swap(gcupdategoodslist& a, gcupdategoodslist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcupdategoodslist* New() const final {
    return CreateMaybeMessage<gcupdategoodslist>(NULL);
  }

  gcupdategoodslist* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcupdategoodslist>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcupdategoodslist& from);
  void MergeFrom(const gcupdategoodslist& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcupdategoodslist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 idlist = 2;
  int idlist_size() const;
  void clear_idlist();
  static const int kIdlistFieldNumber = 2;
  ::google::protobuf::int32 idlist(int index) const;
  void set_idlist(int index, ::google::protobuf::int32 value);
  void add_idlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      idlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_idlist();

  // repeated int32 numlist = 3;
  int numlist_size() const;
  void clear_numlist();
  static const int kNumlistFieldNumber = 3;
  ::google::protobuf::int32 numlist(int index) const;
  void set_numlist(int index, ::google::protobuf::int32 value);
  void add_numlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      numlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_numlist();

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcupdategoodslist)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > idlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > numlist_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgagencyopt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgagencyopt) */ {
 public:
  cgagencyopt();
  virtual ~cgagencyopt();

  cgagencyopt(const cgagencyopt& from);

  inline cgagencyopt& operator=(const cgagencyopt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgagencyopt(cgagencyopt&& from) noexcept
    : cgagencyopt() {
    *this = ::std::move(from);
  }

  inline cgagencyopt& operator=(cgagencyopt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgagencyopt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgagencyopt* internal_default_instance() {
    return reinterpret_cast<const cgagencyopt*>(
               &_cgagencyopt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(cgagencyopt* other);
  friend void swap(cgagencyopt& a, cgagencyopt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgagencyopt* New() const final {
    return CreateMaybeMessage<cgagencyopt>(NULL);
  }

  cgagencyopt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgagencyopt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgagencyopt& from);
  void MergeFrom(const cgagencyopt& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgagencyopt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string optstr = 3;
  bool has_optstr() const;
  void clear_optstr();
  static const int kOptstrFieldNumber = 3;
  const ::std::string& optstr() const;
  void set_optstr(const ::std::string& value);
  #if LANG_CXX11
  void set_optstr(::std::string&& value);
  #endif
  void set_optstr(const char* value);
  void set_optstr(const char* value, size_t size);
  ::std::string* mutable_optstr();
  ::std::string* release_optstr();
  void set_allocated_optstr(::std::string* optstr);

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 opttype = 2;
  bool has_opttype() const;
  void clear_opttype();
  static const int kOpttypeFieldNumber = 2;
  ::google::protobuf::int32 opttype() const;
  void set_opttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgagencyopt)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_opttype();
  void clear_has_opttype();
  void set_has_optstr();
  void clear_has_optstr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr optstr_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 opttype_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcagencyopt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcagencyopt) */ {
 public:
  gcagencyopt();
  virtual ~gcagencyopt();

  gcagencyopt(const gcagencyopt& from);

  inline gcagencyopt& operator=(const gcagencyopt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcagencyopt(gcagencyopt&& from) noexcept
    : gcagencyopt() {
    *this = ::std::move(from);
  }

  inline gcagencyopt& operator=(gcagencyopt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcagencyopt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcagencyopt* internal_default_instance() {
    return reinterpret_cast<const gcagencyopt*>(
               &_gcagencyopt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(gcagencyopt* other);
  friend void swap(gcagencyopt& a, gcagencyopt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcagencyopt* New() const final {
    return CreateMaybeMessage<gcagencyopt>(NULL);
  }

  gcagencyopt* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcagencyopt>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcagencyopt& from);
  void MergeFrom(const gcagencyopt& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcagencyopt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str = 2;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 2;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcagencyopt)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_str();
  void clear_has_str();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgentertable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgentertable) */ {
 public:
  cgentertable();
  virtual ~cgentertable();

  cgentertable(const cgentertable& from);

  inline cgentertable& operator=(const cgentertable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgentertable(cgentertable&& from) noexcept
    : cgentertable() {
    *this = ::std::move(from);
  }

  inline cgentertable& operator=(cgentertable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgentertable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgentertable* internal_default_instance() {
    return reinterpret_cast<const cgentertable*>(
               &_cgentertable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(cgentertable* other);
  friend void swap(cgentertable& a, cgentertable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgentertable* New() const final {
    return CreateMaybeMessage<cgentertable>(NULL);
  }

  cgentertable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgentertable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgentertable& from);
  void MergeFrom(const cgentertable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgentertable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 tableid = 2;
  bool has_tableid() const;
  void clear_tableid();
  static const int kTableidFieldNumber = 2;
  ::google::protobuf::int32 tableid() const;
  void set_tableid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgentertable)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_tableid();
  void clear_has_tableid();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 tableid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcentertable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcentertable) */ {
 public:
  gcentertable();
  virtual ~gcentertable();

  gcentertable(const gcentertable& from);

  inline gcentertable& operator=(const gcentertable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcentertable(gcentertable&& from) noexcept
    : gcentertable() {
    *this = ::std::move(from);
  }

  inline gcentertable& operator=(gcentertable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcentertable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcentertable* internal_default_instance() {
    return reinterpret_cast<const gcentertable*>(
               &_gcentertable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(gcentertable* other);
  friend void swap(gcentertable& a, gcentertable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcentertable* New() const final {
    return CreateMaybeMessage<gcentertable>(NULL);
  }

  gcentertable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcentertable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcentertable& from);
  void MergeFrom(const gcentertable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcentertable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcentertable)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cggetagencyinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cggetagencyinfo) */ {
 public:
  cggetagencyinfo();
  virtual ~cggetagencyinfo();

  cggetagencyinfo(const cggetagencyinfo& from);

  inline cggetagencyinfo& operator=(const cggetagencyinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cggetagencyinfo(cggetagencyinfo&& from) noexcept
    : cggetagencyinfo() {
    *this = ::std::move(from);
  }

  inline cggetagencyinfo& operator=(cggetagencyinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cggetagencyinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cggetagencyinfo* internal_default_instance() {
    return reinterpret_cast<const cggetagencyinfo*>(
               &_cggetagencyinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(cggetagencyinfo* other);
  friend void swap(cggetagencyinfo& a, cggetagencyinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cggetagencyinfo* New() const final {
    return CreateMaybeMessage<cggetagencyinfo>(NULL);
  }

  cggetagencyinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cggetagencyinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cggetagencyinfo& from);
  void MergeFrom(const cggetagencyinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cggetagencyinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cggetagencyinfo)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcgetagencyinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcgetagencyinfo) */ {
 public:
  gcgetagencyinfo();
  virtual ~gcgetagencyinfo();

  gcgetagencyinfo(const gcgetagencyinfo& from);

  inline gcgetagencyinfo& operator=(const gcgetagencyinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcgetagencyinfo(gcgetagencyinfo&& from) noexcept
    : gcgetagencyinfo() {
    *this = ::std::move(from);
  }

  inline gcgetagencyinfo& operator=(gcgetagencyinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcgetagencyinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcgetagencyinfo* internal_default_instance() {
    return reinterpret_cast<const gcgetagencyinfo*>(
               &_gcgetagencyinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(gcgetagencyinfo* other);
  friend void swap(gcgetagencyinfo& a, gcgetagencyinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcgetagencyinfo* New() const final {
    return CreateMaybeMessage<gcgetagencyinfo>(NULL);
  }

  gcgetagencyinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcgetagencyinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcgetagencyinfo& from);
  void MergeFrom(const gcgetagencyinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcgetagencyinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NFMsg.agencyinfo agyinfo = 2;
  bool has_agyinfo() const;
  void clear_agyinfo();
  static const int kAgyinfoFieldNumber = 2;
  private:
  const ::NFMsg::agencyinfo& _internal_agyinfo() const;
  public:
  const ::NFMsg::agencyinfo& agyinfo() const;
  ::NFMsg::agencyinfo* release_agyinfo();
  ::NFMsg::agencyinfo* mutable_agyinfo();
  void set_allocated_agyinfo(::NFMsg::agencyinfo* agyinfo);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcgetagencyinfo)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_agyinfo();
  void clear_has_agyinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::NFMsg::agencyinfo* agyinfo_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cginvitebind : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cginvitebind) */ {
 public:
  cginvitebind();
  virtual ~cginvitebind();

  cginvitebind(const cginvitebind& from);

  inline cginvitebind& operator=(const cginvitebind& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cginvitebind(cginvitebind&& from) noexcept
    : cginvitebind() {
    *this = ::std::move(from);
  }

  inline cginvitebind& operator=(cginvitebind&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cginvitebind& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cginvitebind* internal_default_instance() {
    return reinterpret_cast<const cginvitebind*>(
               &_cginvitebind_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(cginvitebind* other);
  friend void swap(cginvitebind& a, cginvitebind& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cginvitebind* New() const final {
    return CreateMaybeMessage<cginvitebind>(NULL);
  }

  cginvitebind* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cginvitebind>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cginvitebind& from);
  void MergeFrom(const cginvitebind& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cginvitebind* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string invitestr = 2;
  bool has_invitestr() const;
  void clear_invitestr();
  static const int kInvitestrFieldNumber = 2;
  const ::std::string& invitestr() const;
  void set_invitestr(const ::std::string& value);
  #if LANG_CXX11
  void set_invitestr(::std::string&& value);
  #endif
  void set_invitestr(const char* value);
  void set_invitestr(const char* value, size_t size);
  ::std::string* mutable_invitestr();
  ::std::string* release_invitestr();
  void set_allocated_invitestr(::std::string* invitestr);

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cginvitebind)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_invitestr();
  void clear_has_invitestr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invitestr_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcinvitebind : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcinvitebind) */ {
 public:
  gcinvitebind();
  virtual ~gcinvitebind();

  gcinvitebind(const gcinvitebind& from);

  inline gcinvitebind& operator=(const gcinvitebind& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcinvitebind(gcinvitebind&& from) noexcept
    : gcinvitebind() {
    *this = ::std::move(from);
  }

  inline gcinvitebind& operator=(gcinvitebind&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcinvitebind& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcinvitebind* internal_default_instance() {
    return reinterpret_cast<const gcinvitebind*>(
               &_gcinvitebind_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(gcinvitebind* other);
  friend void swap(gcinvitebind& a, gcinvitebind& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcinvitebind* New() const final {
    return CreateMaybeMessage<gcinvitebind>(NULL);
  }

  gcinvitebind* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcinvitebind>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcinvitebind& from);
  void MergeFrom(const gcinvitebind& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcinvitebind* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NFMsg.agencyinfo agyinfo = 2;
  bool has_agyinfo() const;
  void clear_agyinfo();
  static const int kAgyinfoFieldNumber = 2;
  private:
  const ::NFMsg::agencyinfo& _internal_agyinfo() const;
  public:
  const ::NFMsg::agencyinfo& agyinfo() const;
  ::NFMsg::agencyinfo* release_agyinfo();
  ::NFMsg::agencyinfo* mutable_agyinfo();
  void set_allocated_agyinfo(::NFMsg::agencyinfo* agyinfo);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcinvitebind)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_agyinfo();
  void clear_has_agyinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::NFMsg::agencyinfo* agyinfo_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cggivemoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cggivemoney) */ {
 public:
  cggivemoney();
  virtual ~cggivemoney();

  cggivemoney(const cggivemoney& from);

  inline cggivemoney& operator=(const cggivemoney& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cggivemoney(cggivemoney&& from) noexcept
    : cggivemoney() {
    *this = ::std::move(from);
  }

  inline cggivemoney& operator=(cggivemoney&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cggivemoney& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cggivemoney* internal_default_instance() {
    return reinterpret_cast<const cggivemoney*>(
               &_cggivemoney_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(cggivemoney* other);
  friend void swap(cggivemoney& a, cggivemoney& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cggivemoney* New() const final {
    return CreateMaybeMessage<cggivemoney>(NULL);
  }

  cggivemoney* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cggivemoney>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cggivemoney& from);
  void MergeFrom(const cggivemoney& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cggivemoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 touserid = 2;
  bool has_touserid() const;
  void clear_touserid();
  static const int kTouseridFieldNumber = 2;
  ::google::protobuf::int32 touserid() const;
  void set_touserid(::google::protobuf::int32 value);

  // optional int32 amount = 3;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 3;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cggivemoney)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_touserid();
  void clear_has_touserid();
  void set_has_amount();
  void clear_has_amount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 touserid_;
  ::google::protobuf::int32 amount_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcgivemoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcgivemoney) */ {
 public:
  gcgivemoney();
  virtual ~gcgivemoney();

  gcgivemoney(const gcgivemoney& from);

  inline gcgivemoney& operator=(const gcgivemoney& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcgivemoney(gcgivemoney&& from) noexcept
    : gcgivemoney() {
    *this = ::std::move(from);
  }

  inline gcgivemoney& operator=(gcgivemoney&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcgivemoney& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcgivemoney* internal_default_instance() {
    return reinterpret_cast<const gcgivemoney*>(
               &_gcgivemoney_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(gcgivemoney* other);
  friend void swap(gcgivemoney& a, gcgivemoney& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcgivemoney* New() const final {
    return CreateMaybeMessage<gcgivemoney>(NULL);
  }

  gcgivemoney* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcgivemoney>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcgivemoney& from);
  void MergeFrom(const gcgivemoney& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcgivemoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NFMsg.givemoneyrecord record = 2;
  bool has_record() const;
  void clear_record();
  static const int kRecordFieldNumber = 2;
  private:
  const ::NFMsg::givemoneyrecord& _internal_record() const;
  public:
  const ::NFMsg::givemoneyrecord& record() const;
  ::NFMsg::givemoneyrecord* release_record();
  ::NFMsg::givemoneyrecord* mutable_record();
  void set_allocated_record(::NFMsg::givemoneyrecord* record);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcgivemoney)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_record();
  void clear_has_record();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::NFMsg::givemoneyrecord* record_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgapplygroupmaster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgapplygroupmaster) */ {
 public:
  cgapplygroupmaster();
  virtual ~cgapplygroupmaster();

  cgapplygroupmaster(const cgapplygroupmaster& from);

  inline cgapplygroupmaster& operator=(const cgapplygroupmaster& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgapplygroupmaster(cgapplygroupmaster&& from) noexcept
    : cgapplygroupmaster() {
    *this = ::std::move(from);
  }

  inline cgapplygroupmaster& operator=(cgapplygroupmaster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgapplygroupmaster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgapplygroupmaster* internal_default_instance() {
    return reinterpret_cast<const cgapplygroupmaster*>(
               &_cgapplygroupmaster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(cgapplygroupmaster* other);
  friend void swap(cgapplygroupmaster& a, cgapplygroupmaster& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgapplygroupmaster* New() const final {
    return CreateMaybeMessage<cgapplygroupmaster>(NULL);
  }

  cgapplygroupmaster* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgapplygroupmaster>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgapplygroupmaster& from);
  void MergeFrom(const cgapplygroupmaster& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgapplygroupmaster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgapplygroupmaster)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcapplygroupmaster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcapplygroupmaster) */ {
 public:
  gcapplygroupmaster();
  virtual ~gcapplygroupmaster();

  gcapplygroupmaster(const gcapplygroupmaster& from);

  inline gcapplygroupmaster& operator=(const gcapplygroupmaster& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcapplygroupmaster(gcapplygroupmaster&& from) noexcept
    : gcapplygroupmaster() {
    *this = ::std::move(from);
  }

  inline gcapplygroupmaster& operator=(gcapplygroupmaster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcapplygroupmaster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcapplygroupmaster* internal_default_instance() {
    return reinterpret_cast<const gcapplygroupmaster*>(
               &_gcapplygroupmaster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(gcapplygroupmaster* other);
  friend void swap(gcapplygroupmaster& a, gcapplygroupmaster& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcapplygroupmaster* New() const final {
    return CreateMaybeMessage<gcapplygroupmaster>(NULL);
  }

  gcapplygroupmaster* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcapplygroupmaster>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcapplygroupmaster& from);
  void MergeFrom(const gcapplygroupmaster& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcapplygroupmaster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcapplygroupmaster)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cggivemoneyrecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cggivemoneyrecord) */ {
 public:
  cggivemoneyrecord();
  virtual ~cggivemoneyrecord();

  cggivemoneyrecord(const cggivemoneyrecord& from);

  inline cggivemoneyrecord& operator=(const cggivemoneyrecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cggivemoneyrecord(cggivemoneyrecord&& from) noexcept
    : cggivemoneyrecord() {
    *this = ::std::move(from);
  }

  inline cggivemoneyrecord& operator=(cggivemoneyrecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cggivemoneyrecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cggivemoneyrecord* internal_default_instance() {
    return reinterpret_cast<const cggivemoneyrecord*>(
               &_cggivemoneyrecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(cggivemoneyrecord* other);
  friend void swap(cggivemoneyrecord& a, cggivemoneyrecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cggivemoneyrecord* New() const final {
    return CreateMaybeMessage<cggivemoneyrecord>(NULL);
  }

  cggivemoneyrecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cggivemoneyrecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cggivemoneyrecord& from);
  void MergeFrom(const cggivemoneyrecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cggivemoneyrecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 page = 2;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 2;
  ::google::protobuf::int32 page() const;
  void set_page(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cggivemoneyrecord)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_page();
  void clear_has_page();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 page_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcgivemoneyrecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcgivemoneyrecord) */ {
 public:
  gcgivemoneyrecord();
  virtual ~gcgivemoneyrecord();

  gcgivemoneyrecord(const gcgivemoneyrecord& from);

  inline gcgivemoneyrecord& operator=(const gcgivemoneyrecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcgivemoneyrecord(gcgivemoneyrecord&& from) noexcept
    : gcgivemoneyrecord() {
    *this = ::std::move(from);
  }

  inline gcgivemoneyrecord& operator=(gcgivemoneyrecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcgivemoneyrecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcgivemoneyrecord* internal_default_instance() {
    return reinterpret_cast<const gcgivemoneyrecord*>(
               &_gcgivemoneyrecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(gcgivemoneyrecord* other);
  friend void swap(gcgivemoneyrecord& a, gcgivemoneyrecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcgivemoneyrecord* New() const final {
    return CreateMaybeMessage<gcgivemoneyrecord>(NULL);
  }

  gcgivemoneyrecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcgivemoneyrecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcgivemoneyrecord& from);
  void MergeFrom(const gcgivemoneyrecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcgivemoneyrecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NFMsg.givemoneyrecord list = 2;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 2;
  ::NFMsg::givemoneyrecord* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::NFMsg::givemoneyrecord >*
      mutable_list();
  const ::NFMsg::givemoneyrecord& list(int index) const;
  ::NFMsg::givemoneyrecord* add_list();
  const ::google::protobuf::RepeatedPtrField< ::NFMsg::givemoneyrecord >&
      list() const;

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcgivemoneyrecord)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::NFMsg::givemoneyrecord > list_;
  ::google::protobuf::int32 result_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgregistration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgregistration) */ {
 public:
  cgregistration();
  virtual ~cgregistration();

  cgregistration(const cgregistration& from);

  inline cgregistration& operator=(const cgregistration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgregistration(cgregistration&& from) noexcept
    : cgregistration() {
    *this = ::std::move(from);
  }

  inline cgregistration& operator=(cgregistration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgregistration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgregistration* internal_default_instance() {
    return reinterpret_cast<const cgregistration*>(
               &_cgregistration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(cgregistration* other);
  friend void swap(cgregistration& a, cgregistration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgregistration* New() const final {
    return CreateMaybeMessage<cgregistration>(NULL);
  }

  cgregistration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgregistration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgregistration& from);
  void MergeFrom(const cgregistration& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgregistration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 optype = 2;
  bool has_optype() const;
  void clear_optype();
  static const int kOptypeFieldNumber = 2;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgregistration)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_optype();
  void clear_has_optype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 optype_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcregistration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcregistration) */ {
 public:
  gcregistration();
  virtual ~gcregistration();

  gcregistration(const gcregistration& from);

  inline gcregistration& operator=(const gcregistration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcregistration(gcregistration&& from) noexcept
    : gcregistration() {
    *this = ::std::move(from);
  }

  inline gcregistration& operator=(gcregistration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcregistration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcregistration* internal_default_instance() {
    return reinterpret_cast<const gcregistration*>(
               &_gcregistration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(gcregistration* other);
  friend void swap(gcregistration& a, gcregistration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcregistration* New() const final {
    return CreateMaybeMessage<gcregistration>(NULL);
  }

  gcregistration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcregistration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcregistration& from);
  void MergeFrom(const gcregistration& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcregistration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string registration1 = 3;
  bool has_registration1() const;
  void clear_registration1();
  static const int kRegistration1FieldNumber = 3;
  const ::std::string& registration1() const;
  void set_registration1(const ::std::string& value);
  #if LANG_CXX11
  void set_registration1(::std::string&& value);
  #endif
  void set_registration1(const char* value);
  void set_registration1(const char* value, size_t size);
  ::std::string* mutable_registration1();
  ::std::string* release_registration1();
  void set_allocated_registration1(::std::string* registration1);

  // optional string registration2 = 4;
  bool has_registration2() const;
  void clear_registration2();
  static const int kRegistration2FieldNumber = 4;
  const ::std::string& registration2() const;
  void set_registration2(const ::std::string& value);
  #if LANG_CXX11
  void set_registration2(::std::string&& value);
  #endif
  void set_registration2(const char* value);
  void set_registration2(const char* value, size_t size);
  ::std::string* mutable_registration2();
  ::std::string* release_registration2();
  void set_allocated_registration2(::std::string* registration2);

  // optional string registration3 = 5;
  bool has_registration3() const;
  void clear_registration3();
  static const int kRegistration3FieldNumber = 5;
  const ::std::string& registration3() const;
  void set_registration3(const ::std::string& value);
  #if LANG_CXX11
  void set_registration3(::std::string&& value);
  #endif
  void set_registration3(const char* value);
  void set_registration3(const char* value, size_t size);
  ::std::string* mutable_registration3();
  ::std::string* release_registration3();
  void set_allocated_registration3(::std::string* registration3);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcregistration)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_userid();
  void clear_has_userid();
  void set_has_registration1();
  void clear_has_registration1();
  void set_has_registration2();
  void clear_has_registration2();
  void set_has_registration3();
  void clear_has_registration3();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr registration1_;
  ::google::protobuf::internal::ArenaStringPtr registration2_;
  ::google::protobuf::internal::ArenaStringPtr registration3_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgluckturntable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgluckturntable) */ {
 public:
  cgluckturntable();
  virtual ~cgluckturntable();

  cgluckturntable(const cgluckturntable& from);

  inline cgluckturntable& operator=(const cgluckturntable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgluckturntable(cgluckturntable&& from) noexcept
    : cgluckturntable() {
    *this = ::std::move(from);
  }

  inline cgluckturntable& operator=(cgluckturntable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgluckturntable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgluckturntable* internal_default_instance() {
    return reinterpret_cast<const cgluckturntable*>(
               &_cgluckturntable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(cgluckturntable* other);
  friend void swap(cgluckturntable& a, cgluckturntable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgluckturntable* New() const final {
    return CreateMaybeMessage<cgluckturntable>(NULL);
  }

  cgluckturntable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgluckturntable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgluckturntable& from);
  void MergeFrom(const cgluckturntable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgluckturntable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 optype = 2;
  bool has_optype() const;
  void clear_optype();
  static const int kOptypeFieldNumber = 2;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgluckturntable)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_optype();
  void clear_has_optype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 optype_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcluckturntable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcluckturntable) */ {
 public:
  gcluckturntable();
  virtual ~gcluckturntable();

  gcluckturntable(const gcluckturntable& from);

  inline gcluckturntable& operator=(const gcluckturntable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcluckturntable(gcluckturntable&& from) noexcept
    : gcluckturntable() {
    *this = ::std::move(from);
  }

  inline gcluckturntable& operator=(gcluckturntable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcluckturntable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcluckturntable* internal_default_instance() {
    return reinterpret_cast<const gcluckturntable*>(
               &_gcluckturntable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(gcluckturntable* other);
  friend void swap(gcluckturntable& a, gcluckturntable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcluckturntable* New() const final {
    return CreateMaybeMessage<gcluckturntable>(NULL);
  }

  gcluckturntable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcluckturntable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcluckturntable& from);
  void MergeFrom(const gcluckturntable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcluckturntable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 turnresult = 3;
  bool has_turnresult() const;
  void clear_turnresult();
  static const int kTurnresultFieldNumber = 3;
  ::google::protobuf::int32 turnresult() const;
  void set_turnresult(::google::protobuf::int32 value);

  // optional int32 turntablenum = 4;
  bool has_turntablenum() const;
  void clear_turntablenum();
  static const int kTurntablenumFieldNumber = 4;
  ::google::protobuf::int32 turntablenum() const;
  void set_turntablenum(::google::protobuf::int32 value);

  // optional int32 bsignin = 5;
  bool has_bsignin() const;
  void clear_bsignin();
  static const int kBsigninFieldNumber = 5;
  ::google::protobuf::int32 bsignin() const;
  void set_bsignin(::google::protobuf::int32 value);

  // optional int32 tengames = 6;
  bool has_tengames() const;
  void clear_tengames();
  static const int kTengamesFieldNumber = 6;
  ::google::protobuf::int32 tengames() const;
  void set_tengames(::google::protobuf::int32 value);

  // optional int32 todayshare = 7;
  bool has_todayshare() const;
  void clear_todayshare();
  static const int kTodayshareFieldNumber = 7;
  ::google::protobuf::int32 todayshare() const;
  void set_todayshare(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcluckturntable)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_userid();
  void clear_has_userid();
  void set_has_turnresult();
  void clear_has_turnresult();
  void set_has_turntablenum();
  void clear_has_turntablenum();
  void set_has_bsignin();
  void clear_has_bsignin();
  void set_has_tengames();
  void clear_has_tengames();
  void set_has_todayshare();
  void clear_has_todayshare();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 turnresult_;
  ::google::protobuf::int32 turntablenum_;
  ::google::protobuf::int32 bsignin_;
  ::google::protobuf::int32 tengames_;
  ::google::protobuf::int32 todayshare_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgupdateplayermoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgupdateplayermoney) */ {
 public:
  cgupdateplayermoney();
  virtual ~cgupdateplayermoney();

  cgupdateplayermoney(const cgupdateplayermoney& from);

  inline cgupdateplayermoney& operator=(const cgupdateplayermoney& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgupdateplayermoney(cgupdateplayermoney&& from) noexcept
    : cgupdateplayermoney() {
    *this = ::std::move(from);
  }

  inline cgupdateplayermoney& operator=(cgupdateplayermoney&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgupdateplayermoney& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgupdateplayermoney* internal_default_instance() {
    return reinterpret_cast<const cgupdateplayermoney*>(
               &_cgupdateplayermoney_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(cgupdateplayermoney* other);
  friend void swap(cgupdateplayermoney& a, cgupdateplayermoney& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgupdateplayermoney* New() const final {
    return CreateMaybeMessage<cgupdateplayermoney>(NULL);
  }

  cgupdateplayermoney* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgupdateplayermoney>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgupdateplayermoney& from);
  void MergeFrom(const cgupdateplayermoney& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgupdateplayermoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgupdateplayermoney)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcupdateplayermoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcupdateplayermoney) */ {
 public:
  gcupdateplayermoney();
  virtual ~gcupdateplayermoney();

  gcupdateplayermoney(const gcupdateplayermoney& from);

  inline gcupdateplayermoney& operator=(const gcupdateplayermoney& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcupdateplayermoney(gcupdateplayermoney&& from) noexcept
    : gcupdateplayermoney() {
    *this = ::std::move(from);
  }

  inline gcupdateplayermoney& operator=(gcupdateplayermoney&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcupdateplayermoney& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcupdateplayermoney* internal_default_instance() {
    return reinterpret_cast<const gcupdateplayermoney*>(
               &_gcupdateplayermoney_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(gcupdateplayermoney* other);
  friend void swap(gcupdateplayermoney& a, gcupdateplayermoney& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcupdateplayermoney* New() const final {
    return CreateMaybeMessage<gcupdateplayermoney>(NULL);
  }

  gcupdateplayermoney* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcupdateplayermoney>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcupdateplayermoney& from);
  void MergeFrom(const gcupdateplayermoney& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcupdateplayermoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcupdateplayermoney)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_userid();
  void clear_has_userid();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 money_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cgaltersomeplayerinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.cgaltersomeplayerinfo) */ {
 public:
  cgaltersomeplayerinfo();
  virtual ~cgaltersomeplayerinfo();

  cgaltersomeplayerinfo(const cgaltersomeplayerinfo& from);

  inline cgaltersomeplayerinfo& operator=(const cgaltersomeplayerinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cgaltersomeplayerinfo(cgaltersomeplayerinfo&& from) noexcept
    : cgaltersomeplayerinfo() {
    *this = ::std::move(from);
  }

  inline cgaltersomeplayerinfo& operator=(cgaltersomeplayerinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cgaltersomeplayerinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cgaltersomeplayerinfo* internal_default_instance() {
    return reinterpret_cast<const cgaltersomeplayerinfo*>(
               &_cgaltersomeplayerinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(cgaltersomeplayerinfo* other);
  friend void swap(cgaltersomeplayerinfo& a, cgaltersomeplayerinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cgaltersomeplayerinfo* New() const final {
    return CreateMaybeMessage<cgaltersomeplayerinfo>(NULL);
  }

  cgaltersomeplayerinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cgaltersomeplayerinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cgaltersomeplayerinfo& from);
  void MergeFrom(const cgaltersomeplayerinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cgaltersomeplayerinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 optype = 2;
  bool has_optype() const;
  void clear_optype();
  static const int kOptypeFieldNumber = 2;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // optional int32 caninvite = 3;
  bool has_caninvite() const;
  void clear_caninvite();
  static const int kCaninviteFieldNumber = 3;
  ::google::protobuf::int32 caninvite() const;
  void set_caninvite(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.cgaltersomeplayerinfo)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_optype();
  void clear_has_optype();
  void set_has_caninvite();
  void clear_has_caninvite();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::int32 caninvite_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class gcaltersomeplayerinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NFMsg.gcaltersomeplayerinfo) */ {
 public:
  gcaltersomeplayerinfo();
  virtual ~gcaltersomeplayerinfo();

  gcaltersomeplayerinfo(const gcaltersomeplayerinfo& from);

  inline gcaltersomeplayerinfo& operator=(const gcaltersomeplayerinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  gcaltersomeplayerinfo(gcaltersomeplayerinfo&& from) noexcept
    : gcaltersomeplayerinfo() {
    *this = ::std::move(from);
  }

  inline gcaltersomeplayerinfo& operator=(gcaltersomeplayerinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gcaltersomeplayerinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gcaltersomeplayerinfo* internal_default_instance() {
    return reinterpret_cast<const gcaltersomeplayerinfo*>(
               &_gcaltersomeplayerinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(gcaltersomeplayerinfo* other);
  friend void swap(gcaltersomeplayerinfo& a, gcaltersomeplayerinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline gcaltersomeplayerinfo* New() const final {
    return CreateMaybeMessage<gcaltersomeplayerinfo>(NULL);
  }

  gcaltersomeplayerinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<gcaltersomeplayerinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const gcaltersomeplayerinfo& from);
  void MergeFrom(const gcaltersomeplayerinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gcaltersomeplayerinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NFMsg.gcaltersomeplayerinfo)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 userid_;
  friend struct ::protobuf_msg_5fhuman_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// cgaccountlogin

// optional string account = 1;
inline bool cgaccountlogin::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgaccountlogin::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgaccountlogin::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgaccountlogin::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& cgaccountlogin::account() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.account)
  return account_.GetNoArena();
}
inline void cgaccountlogin::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.account)
}
#if LANG_CXX11
inline void cgaccountlogin::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.account)
}
#endif
inline void cgaccountlogin::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.account)
}
inline void cgaccountlogin::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.account)
}
inline ::std::string* cgaccountlogin::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_account() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.account)
  if (!has_account()) {
    return NULL;
  }
  clear_has_account();
  return account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.account)
}

// optional string password = 2;
inline bool cgaccountlogin::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgaccountlogin::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgaccountlogin::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgaccountlogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& cgaccountlogin::password() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.password)
  return password_.GetNoArena();
}
inline void cgaccountlogin::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.password)
}
#if LANG_CXX11
inline void cgaccountlogin::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.password)
}
#endif
inline void cgaccountlogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.password)
}
inline void cgaccountlogin::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.password)
}
inline ::std::string* cgaccountlogin::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_password() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.password)
  if (!has_password()) {
    return NULL;
  }
  clear_has_password();
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.password)
}

// optional string imei = 4;
inline bool cgaccountlogin::has_imei() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cgaccountlogin::set_has_imei() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cgaccountlogin::clear_has_imei() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cgaccountlogin::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& cgaccountlogin::imei() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.imei)
  return imei_.GetNoArena();
}
inline void cgaccountlogin::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.imei)
}
#if LANG_CXX11
inline void cgaccountlogin::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.imei)
}
#endif
inline void cgaccountlogin::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.imei)
}
inline void cgaccountlogin::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.imei)
}
inline ::std::string* cgaccountlogin::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_imei() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.imei)
  if (!has_imei()) {
    return NULL;
  }
  clear_has_imei();
  return imei_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.imei)
}

// optional string nickname = 5;
inline bool cgaccountlogin::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void cgaccountlogin::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void cgaccountlogin::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void cgaccountlogin::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& cgaccountlogin::nickname() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.nickname)
  return nickname_.GetNoArena();
}
inline void cgaccountlogin::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.nickname)
}
#if LANG_CXX11
inline void cgaccountlogin::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.nickname)
}
#endif
inline void cgaccountlogin::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.nickname)
}
inline void cgaccountlogin::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.nickname)
}
inline ::std::string* cgaccountlogin::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_nickname() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.nickname)
  if (!has_nickname()) {
    return NULL;
  }
  clear_has_nickname();
  return nickname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.nickname)
}

// optional string devname = 6;
inline bool cgaccountlogin::has_devname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void cgaccountlogin::set_has_devname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void cgaccountlogin::clear_has_devname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void cgaccountlogin::clear_devname() {
  devname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devname();
}
inline const ::std::string& cgaccountlogin::devname() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.devname)
  return devname_.GetNoArena();
}
inline void cgaccountlogin::set_devname(const ::std::string& value) {
  set_has_devname();
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.devname)
}
#if LANG_CXX11
inline void cgaccountlogin::set_devname(::std::string&& value) {
  set_has_devname();
  devname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.devname)
}
#endif
inline void cgaccountlogin::set_devname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devname();
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.devname)
}
inline void cgaccountlogin::set_devname(const char* value, size_t size) {
  set_has_devname();
  devname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.devname)
}
inline ::std::string* cgaccountlogin::mutable_devname() {
  set_has_devname();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.devname)
  return devname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_devname() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.devname)
  if (!has_devname()) {
    return NULL;
  }
  clear_has_devname();
  return devname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_devname(::std::string* devname) {
  if (devname != NULL) {
    set_has_devname();
  } else {
    clear_has_devname();
  }
  devname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devname);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.devname)
}

// optional string macname = 7;
inline bool cgaccountlogin::has_macname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void cgaccountlogin::set_has_macname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void cgaccountlogin::clear_has_macname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void cgaccountlogin::clear_macname() {
  macname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macname();
}
inline const ::std::string& cgaccountlogin::macname() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.macname)
  return macname_.GetNoArena();
}
inline void cgaccountlogin::set_macname(const ::std::string& value) {
  set_has_macname();
  macname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.macname)
}
#if LANG_CXX11
inline void cgaccountlogin::set_macname(::std::string&& value) {
  set_has_macname();
  macname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.macname)
}
#endif
inline void cgaccountlogin::set_macname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macname();
  macname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.macname)
}
inline void cgaccountlogin::set_macname(const char* value, size_t size) {
  set_has_macname();
  macname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.macname)
}
inline ::std::string* cgaccountlogin::mutable_macname() {
  set_has_macname();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.macname)
  return macname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_macname() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.macname)
  if (!has_macname()) {
    return NULL;
  }
  clear_has_macname();
  return macname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_macname(::std::string* macname) {
  if (macname != NULL) {
    set_has_macname();
  } else {
    clear_has_macname();
  }
  macname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macname);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.macname)
}

// optional string channel = 8;
inline bool cgaccountlogin::has_channel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void cgaccountlogin::set_has_channel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void cgaccountlogin::clear_has_channel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void cgaccountlogin::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel();
}
inline const ::std::string& cgaccountlogin::channel() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.channel)
  return channel_.GetNoArena();
}
inline void cgaccountlogin::set_channel(const ::std::string& value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.channel)
}
#if LANG_CXX11
inline void cgaccountlogin::set_channel(::std::string&& value) {
  set_has_channel();
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.channel)
}
#endif
inline void cgaccountlogin::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.channel)
}
inline void cgaccountlogin::set_channel(const char* value, size_t size) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.channel)
}
inline ::std::string* cgaccountlogin::mutable_channel() {
  set_has_channel();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_channel() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.channel)
  if (!has_channel()) {
    return NULL;
  }
  clear_has_channel();
  return channel_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.channel)
}

// optional string province = 9;
inline bool cgaccountlogin::has_province() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void cgaccountlogin::set_has_province() {
  _has_bits_[0] |= 0x00000080u;
}
inline void cgaccountlogin::clear_has_province() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void cgaccountlogin::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& cgaccountlogin::province() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.province)
  return province_.GetNoArena();
}
inline void cgaccountlogin::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.province)
}
#if LANG_CXX11
inline void cgaccountlogin::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.province)
}
#endif
inline void cgaccountlogin::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.province)
}
inline void cgaccountlogin::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.province)
}
inline ::std::string* cgaccountlogin::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_province() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.province)
  if (!has_province()) {
    return NULL;
  }
  clear_has_province();
  return province_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.province)
}

// optional string city = 10;
inline bool cgaccountlogin::has_city() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void cgaccountlogin::set_has_city() {
  _has_bits_[0] |= 0x00000100u;
}
inline void cgaccountlogin::clear_has_city() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void cgaccountlogin::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& cgaccountlogin::city() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.city)
  return city_.GetNoArena();
}
inline void cgaccountlogin::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.city)
}
#if LANG_CXX11
inline void cgaccountlogin::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.city)
}
#endif
inline void cgaccountlogin::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.city)
}
inline void cgaccountlogin::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.city)
}
inline ::std::string* cgaccountlogin::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_city() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.city)
  if (!has_city()) {
    return NULL;
  }
  clear_has_city();
  return city_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.city)
}

// optional int32 mobileid = 11;
inline bool cgaccountlogin::has_mobileid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void cgaccountlogin::set_has_mobileid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void cgaccountlogin::clear_has_mobileid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void cgaccountlogin::clear_mobileid() {
  mobileid_ = 0;
  clear_has_mobileid();
}
inline ::google::protobuf::int32 cgaccountlogin::mobileid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.mobileid)
  return mobileid_;
}
inline void cgaccountlogin::set_mobileid(::google::protobuf::int32 value) {
  set_has_mobileid();
  mobileid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.mobileid)
}

// optional string phonenum = 12;
inline bool cgaccountlogin::has_phonenum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void cgaccountlogin::set_has_phonenum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void cgaccountlogin::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void cgaccountlogin::clear_phonenum() {
  phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phonenum();
}
inline const ::std::string& cgaccountlogin::phonenum() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.phonenum)
  return phonenum_.GetNoArena();
}
inline void cgaccountlogin::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.phonenum)
}
#if LANG_CXX11
inline void cgaccountlogin::set_phonenum(::std::string&& value) {
  set_has_phonenum();
  phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.phonenum)
}
#endif
inline void cgaccountlogin::set_phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.phonenum)
}
inline void cgaccountlogin::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.phonenum)
}
inline ::std::string* cgaccountlogin::mutable_phonenum() {
  set_has_phonenum();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.phonenum)
  return phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_phonenum() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.phonenum)
  if (!has_phonenum()) {
    return NULL;
  }
  clear_has_phonenum();
  return phonenum_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum != NULL) {
    set_has_phonenum();
  } else {
    clear_has_phonenum();
  }
  phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenum);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.phonenum)
}

// optional int32 inviterid = 13;
inline bool cgaccountlogin::has_inviterid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void cgaccountlogin::set_has_inviterid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void cgaccountlogin::clear_has_inviterid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void cgaccountlogin::clear_inviterid() {
  inviterid_ = 0;
  clear_has_inviterid();
}
inline ::google::protobuf::int32 cgaccountlogin::inviterid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.inviterid)
  return inviterid_;
}
inline void cgaccountlogin::set_inviterid(::google::protobuf::int32 value) {
  set_has_inviterid();
  inviterid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.inviterid)
}

// optional int32 bindtype = 14;
inline bool cgaccountlogin::has_bindtype() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void cgaccountlogin::set_has_bindtype() {
  _has_bits_[0] |= 0x00008000u;
}
inline void cgaccountlogin::clear_has_bindtype() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void cgaccountlogin::clear_bindtype() {
  bindtype_ = 0;
  clear_has_bindtype();
}
inline ::google::protobuf::int32 cgaccountlogin::bindtype() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.bindtype)
  return bindtype_;
}
inline void cgaccountlogin::set_bindtype(::google::protobuf::int32 value) {
  set_has_bindtype();
  bindtype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.bindtype)
}

// optional int32 pushtype = 15;
inline bool cgaccountlogin::has_pushtype() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void cgaccountlogin::set_has_pushtype() {
  _has_bits_[0] |= 0x00010000u;
}
inline void cgaccountlogin::clear_has_pushtype() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void cgaccountlogin::clear_pushtype() {
  pushtype_ = 0;
  clear_has_pushtype();
}
inline ::google::protobuf::int32 cgaccountlogin::pushtype() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.pushtype)
  return pushtype_;
}
inline void cgaccountlogin::set_pushtype(::google::protobuf::int32 value) {
  set_has_pushtype();
  pushtype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.pushtype)
}

// optional string cid = 16;
inline bool cgaccountlogin::has_cid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void cgaccountlogin::set_has_cid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void cgaccountlogin::clear_has_cid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void cgaccountlogin::clear_cid() {
  cid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cid();
}
inline const ::std::string& cgaccountlogin::cid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.cid)
  return cid_.GetNoArena();
}
inline void cgaccountlogin::set_cid(const ::std::string& value) {
  set_has_cid();
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.cid)
}
#if LANG_CXX11
inline void cgaccountlogin::set_cid(::std::string&& value) {
  set_has_cid();
  cid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.cid)
}
#endif
inline void cgaccountlogin::set_cid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cid();
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.cid)
}
inline void cgaccountlogin::set_cid(const char* value, size_t size) {
  set_has_cid();
  cid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.cid)
}
inline ::std::string* cgaccountlogin::mutable_cid() {
  set_has_cid();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.cid)
  return cid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_cid() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.cid)
  if (!has_cid()) {
    return NULL;
  }
  clear_has_cid();
  return cid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_cid(::std::string* cid) {
  if (cid != NULL) {
    set_has_cid();
  } else {
    clear_has_cid();
  }
  cid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cid);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.cid)
}

// optional string platformid = 17;
inline bool cgaccountlogin::has_platformid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void cgaccountlogin::set_has_platformid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void cgaccountlogin::clear_has_platformid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void cgaccountlogin::clear_platformid() {
  platformid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platformid();
}
inline const ::std::string& cgaccountlogin::platformid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.platformid)
  return platformid_.GetNoArena();
}
inline void cgaccountlogin::set_platformid(const ::std::string& value) {
  set_has_platformid();
  platformid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.platformid)
}
#if LANG_CXX11
inline void cgaccountlogin::set_platformid(::std::string&& value) {
  set_has_platformid();
  platformid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.platformid)
}
#endif
inline void cgaccountlogin::set_platformid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platformid();
  platformid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.platformid)
}
inline void cgaccountlogin::set_platformid(const char* value, size_t size) {
  set_has_platformid();
  platformid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.platformid)
}
inline ::std::string* cgaccountlogin::mutable_platformid() {
  set_has_platformid();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.platformid)
  return platformid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_platformid() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.platformid)
  if (!has_platformid()) {
    return NULL;
  }
  clear_has_platformid();
  return platformid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_platformid(::std::string* platformid) {
  if (platformid != NULL) {
    set_has_platformid();
  } else {
    clear_has_platformid();
  }
  platformid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platformid);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.platformid)
}

// optional string bindnick = 18;
inline bool cgaccountlogin::has_bindnick() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void cgaccountlogin::set_has_bindnick() {
  _has_bits_[0] |= 0x00001000u;
}
inline void cgaccountlogin::clear_has_bindnick() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void cgaccountlogin::clear_bindnick() {
  bindnick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bindnick();
}
inline const ::std::string& cgaccountlogin::bindnick() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.bindnick)
  return bindnick_.GetNoArena();
}
inline void cgaccountlogin::set_bindnick(const ::std::string& value) {
  set_has_bindnick();
  bindnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.bindnick)
}
#if LANG_CXX11
inline void cgaccountlogin::set_bindnick(::std::string&& value) {
  set_has_bindnick();
  bindnick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgaccountlogin.bindnick)
}
#endif
inline void cgaccountlogin::set_bindnick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bindnick();
  bindnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgaccountlogin.bindnick)
}
inline void cgaccountlogin::set_bindnick(const char* value, size_t size) {
  set_has_bindnick();
  bindnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgaccountlogin.bindnick)
}
inline ::std::string* cgaccountlogin::mutable_bindnick() {
  set_has_bindnick();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgaccountlogin.bindnick)
  return bindnick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgaccountlogin::release_bindnick() {
  // @@protoc_insertion_point(field_release:NFMsg.cgaccountlogin.bindnick)
  if (!has_bindnick()) {
    return NULL;
  }
  clear_has_bindnick();
  return bindnick_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgaccountlogin::set_allocated_bindnick(::std::string* bindnick) {
  if (bindnick != NULL) {
    set_has_bindnick();
  } else {
    clear_has_bindnick();
  }
  bindnick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindnick);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgaccountlogin.bindnick)
}

// optional int32 mobiletype = 19;
inline bool cgaccountlogin::has_mobiletype() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void cgaccountlogin::set_has_mobiletype() {
  _has_bits_[0] |= 0x00020000u;
}
inline void cgaccountlogin::clear_has_mobiletype() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void cgaccountlogin::clear_mobiletype() {
  mobiletype_ = 0;
  clear_has_mobiletype();
}
inline ::google::protobuf::int32 cgaccountlogin::mobiletype() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.mobiletype)
  return mobiletype_;
}
inline void cgaccountlogin::set_mobiletype(::google::protobuf::int32 value) {
  set_has_mobiletype();
  mobiletype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.mobiletype)
}

// optional int32 sex = 20;
inline bool cgaccountlogin::has_sex() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void cgaccountlogin::set_has_sex() {
  _has_bits_[0] |= 0x00040000u;
}
inline void cgaccountlogin::clear_has_sex() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void cgaccountlogin::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 cgaccountlogin::sex() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaccountlogin.sex)
  return sex_;
}
inline void cgaccountlogin::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaccountlogin.sex)
}

// -------------------------------------------------------------------

// gcaccountlogin

// optional int32 result = 1;
inline bool gcaccountlogin::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcaccountlogin::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcaccountlogin::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcaccountlogin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcaccountlogin::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcaccountlogin.result)
  return result_;
}
inline void gcaccountlogin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcaccountlogin.result)
}

// optional .NFMsg.playerinfo pinfo = 2;
inline bool gcaccountlogin::has_pinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcaccountlogin::set_has_pinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcaccountlogin::clear_has_pinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::NFMsg::playerinfo& gcaccountlogin::_internal_pinfo() const {
  return *pinfo_;
}
inline const ::NFMsg::playerinfo& gcaccountlogin::pinfo() const {
  const ::NFMsg::playerinfo* p = pinfo_;
  // @@protoc_insertion_point(field_get:NFMsg.gcaccountlogin.pinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::NFMsg::playerinfo*>(
      &::NFMsg::_playerinfo_default_instance_);
}
inline ::NFMsg::playerinfo* gcaccountlogin::release_pinfo() {
  // @@protoc_insertion_point(field_release:NFMsg.gcaccountlogin.pinfo)
  clear_has_pinfo();
  ::NFMsg::playerinfo* temp = pinfo_;
  pinfo_ = NULL;
  return temp;
}
inline ::NFMsg::playerinfo* gcaccountlogin::mutable_pinfo() {
  set_has_pinfo();
  if (pinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::NFMsg::playerinfo>(GetArenaNoVirtual());
    pinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NFMsg.gcaccountlogin.pinfo)
  return pinfo_;
}
inline void gcaccountlogin::set_allocated_pinfo(::NFMsg::playerinfo* pinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pinfo_);
  }
  if (pinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pinfo, submessage_arena);
    }
    set_has_pinfo();
  } else {
    clear_has_pinfo();
  }
  pinfo_ = pinfo;
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcaccountlogin.pinfo)
}

// optional int32 tableid = 3;
inline bool gcaccountlogin::has_tableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcaccountlogin::set_has_tableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcaccountlogin::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcaccountlogin::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 gcaccountlogin::tableid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcaccountlogin.tableid)
  return tableid_;
}
inline void gcaccountlogin::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcaccountlogin.tableid)
}

// optional int32 systime = 4;
inline bool gcaccountlogin::has_systime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gcaccountlogin::set_has_systime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gcaccountlogin::clear_has_systime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gcaccountlogin::clear_systime() {
  systime_ = 0;
  clear_has_systime();
}
inline ::google::protobuf::int32 gcaccountlogin::systime() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcaccountlogin.systime)
  return systime_;
}
inline void gcaccountlogin::set_systime(::google::protobuf::int32 value) {
  set_has_systime();
  systime_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcaccountlogin.systime)
}

// optional int32 tabletype = 5;
inline bool gcaccountlogin::has_tabletype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gcaccountlogin::set_has_tabletype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gcaccountlogin::clear_has_tabletype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gcaccountlogin::clear_tabletype() {
  tabletype_ = 0;
  clear_has_tabletype();
}
inline ::google::protobuf::int32 gcaccountlogin::tabletype() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcaccountlogin.tabletype)
  return tabletype_;
}
inline void gcaccountlogin::set_tabletype(::google::protobuf::int32 value) {
  set_has_tabletype();
  tabletype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcaccountlogin.tabletype)
}

// -------------------------------------------------------------------

// cggetplayerinfo

// optional int32 userid = 1;
inline bool cggetplayerinfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cggetplayerinfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cggetplayerinfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cggetplayerinfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cggetplayerinfo::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetplayerinfo.userid)
  return userid_;
}
inline void cggetplayerinfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggetplayerinfo.userid)
}

// -------------------------------------------------------------------

// gcgetplayerinfo

// optional int32 result = 1;
inline bool gcgetplayerinfo::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcgetplayerinfo::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcgetplayerinfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcgetplayerinfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcgetplayerinfo::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetplayerinfo.result)
  return result_;
}
inline void gcgetplayerinfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgetplayerinfo.result)
}

// optional .NFMsg.playerinfo pinfo = 2;
inline bool gcgetplayerinfo::has_pinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcgetplayerinfo::set_has_pinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcgetplayerinfo::clear_has_pinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::NFMsg::playerinfo& gcgetplayerinfo::_internal_pinfo() const {
  return *pinfo_;
}
inline const ::NFMsg::playerinfo& gcgetplayerinfo::pinfo() const {
  const ::NFMsg::playerinfo* p = pinfo_;
  // @@protoc_insertion_point(field_get:NFMsg.gcgetplayerinfo.pinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::NFMsg::playerinfo*>(
      &::NFMsg::_playerinfo_default_instance_);
}
inline ::NFMsg::playerinfo* gcgetplayerinfo::release_pinfo() {
  // @@protoc_insertion_point(field_release:NFMsg.gcgetplayerinfo.pinfo)
  clear_has_pinfo();
  ::NFMsg::playerinfo* temp = pinfo_;
  pinfo_ = NULL;
  return temp;
}
inline ::NFMsg::playerinfo* gcgetplayerinfo::mutable_pinfo() {
  set_has_pinfo();
  if (pinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::NFMsg::playerinfo>(GetArenaNoVirtual());
    pinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NFMsg.gcgetplayerinfo.pinfo)
  return pinfo_;
}
inline void gcgetplayerinfo::set_allocated_pinfo(::NFMsg::playerinfo* pinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pinfo_);
  }
  if (pinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pinfo, submessage_arena);
    }
    set_has_pinfo();
  } else {
    clear_has_pinfo();
  }
  pinfo_ = pinfo;
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcgetplayerinfo.pinfo)
}

// -------------------------------------------------------------------

// cgreconnect

// optional int32 userid = 1;
inline bool cgreconnect::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgreconnect::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgreconnect::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgreconnect::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgreconnect::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgreconnect.userid)
  return userid_;
}
inline void cgreconnect::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgreconnect.userid)
}

// -------------------------------------------------------------------

// gcreconnect

// optional int32 result = 1;
inline bool gcreconnect::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcreconnect::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcreconnect::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcreconnect::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcreconnect::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcreconnect.result)
  return result_;
}
inline void gcreconnect::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcreconnect.result)
}

// optional string msgbegin = 2;
inline bool gcreconnect::has_msgbegin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcreconnect::set_has_msgbegin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcreconnect::clear_has_msgbegin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcreconnect::clear_msgbegin() {
  msgbegin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgbegin();
}
inline const ::std::string& gcreconnect::msgbegin() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcreconnect.msgbegin)
  return msgbegin_.GetNoArena();
}
inline void gcreconnect::set_msgbegin(const ::std::string& value) {
  set_has_msgbegin();
  msgbegin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.gcreconnect.msgbegin)
}
#if LANG_CXX11
inline void gcreconnect::set_msgbegin(::std::string&& value) {
  set_has_msgbegin();
  msgbegin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.gcreconnect.msgbegin)
}
#endif
inline void gcreconnect::set_msgbegin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msgbegin();
  msgbegin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.gcreconnect.msgbegin)
}
inline void gcreconnect::set_msgbegin(const char* value, size_t size) {
  set_has_msgbegin();
  msgbegin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcreconnect.msgbegin)
}
inline ::std::string* gcreconnect::mutable_msgbegin() {
  set_has_msgbegin();
  // @@protoc_insertion_point(field_mutable:NFMsg.gcreconnect.msgbegin)
  return msgbegin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gcreconnect::release_msgbegin() {
  // @@protoc_insertion_point(field_release:NFMsg.gcreconnect.msgbegin)
  if (!has_msgbegin()) {
    return NULL;
  }
  clear_has_msgbegin();
  return msgbegin_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gcreconnect::set_allocated_msgbegin(::std::string* msgbegin) {
  if (msgbegin != NULL) {
    set_has_msgbegin();
  } else {
    clear_has_msgbegin();
  }
  msgbegin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgbegin);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcreconnect.msgbegin)
}

// optional int32 tableid = 3;
inline bool gcreconnect::has_tableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcreconnect::set_has_tableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcreconnect::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcreconnect::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 gcreconnect::tableid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcreconnect.tableid)
  return tableid_;
}
inline void gcreconnect::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcreconnect.tableid)
}

// -------------------------------------------------------------------

// gckitplayer

// optional int32 result = 1;
inline bool gckitplayer::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gckitplayer::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gckitplayer::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gckitplayer::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gckitplayer::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gckitplayer.result)
  return result_;
}
inline void gckitplayer::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gckitplayer.result)
}

// optional int32 kittype = 2;
inline bool gckitplayer::has_kittype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gckitplayer::set_has_kittype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gckitplayer::clear_has_kittype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gckitplayer::clear_kittype() {
  kittype_ = 0;
  clear_has_kittype();
}
inline ::google::protobuf::int32 gckitplayer::kittype() const {
  // @@protoc_insertion_point(field_get:NFMsg.gckitplayer.kittype)
  return kittype_;
}
inline void gckitplayer::set_kittype(::google::protobuf::int32 value) {
  set_has_kittype();
  kittype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gckitplayer.kittype)
}

// optional string msg = 3;
inline bool gckitplayer::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gckitplayer::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gckitplayer::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gckitplayer::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& gckitplayer::msg() const {
  // @@protoc_insertion_point(field_get:NFMsg.gckitplayer.msg)
  return msg_.GetNoArena();
}
inline void gckitplayer::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.gckitplayer.msg)
}
#if LANG_CXX11
inline void gckitplayer::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.gckitplayer.msg)
}
#endif
inline void gckitplayer::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.gckitplayer.msg)
}
inline void gckitplayer::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gckitplayer.msg)
}
inline ::std::string* gckitplayer::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:NFMsg.gckitplayer.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gckitplayer::release_msg() {
  // @@protoc_insertion_point(field_release:NFMsg.gckitplayer.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gckitplayer::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gckitplayer.msg)
}

// -------------------------------------------------------------------

// gcnoticeinfo

// optional int32 result = 1;
inline bool gcnoticeinfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcnoticeinfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcnoticeinfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcnoticeinfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcnoticeinfo::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcnoticeinfo.result)
  return result_;
}
inline void gcnoticeinfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcnoticeinfo.result)
}

// repeated .NFMsg.noticeinfo noticelist = 2;
inline int gcnoticeinfo::noticelist_size() const {
  return noticelist_.size();
}
inline ::NFMsg::noticeinfo* gcnoticeinfo::mutable_noticelist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcnoticeinfo.noticelist)
  return noticelist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NFMsg::noticeinfo >*
gcnoticeinfo::mutable_noticelist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcnoticeinfo.noticelist)
  return &noticelist_;
}
inline const ::NFMsg::noticeinfo& gcnoticeinfo::noticelist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcnoticeinfo.noticelist)
  return noticelist_.Get(index);
}
inline ::NFMsg::noticeinfo* gcnoticeinfo::add_noticelist() {
  // @@protoc_insertion_point(field_add:NFMsg.gcnoticeinfo.noticelist)
  return noticelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NFMsg::noticeinfo >&
gcnoticeinfo::noticelist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcnoticeinfo.noticelist)
  return noticelist_;
}

// repeated int32 friendslist = 3;
inline int gcnoticeinfo::friendslist_size() const {
  return friendslist_.size();
}
inline void gcnoticeinfo::clear_friendslist() {
  friendslist_.Clear();
}
inline ::google::protobuf::int32 gcnoticeinfo::friendslist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcnoticeinfo.friendslist)
  return friendslist_.Get(index);
}
inline void gcnoticeinfo::set_friendslist(int index, ::google::protobuf::int32 value) {
  friendslist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcnoticeinfo.friendslist)
}
inline void gcnoticeinfo::add_friendslist(::google::protobuf::int32 value) {
  friendslist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcnoticeinfo.friendslist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcnoticeinfo::friendslist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcnoticeinfo.friendslist)
  return friendslist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcnoticeinfo::mutable_friendslist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcnoticeinfo.friendslist)
  return &friendslist_;
}

// -------------------------------------------------------------------

// cgheartbeat

// optional int32 userid = 1;
inline bool cgheartbeat::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgheartbeat::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgheartbeat::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgheartbeat::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgheartbeat::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgheartbeat.userid)
  return userid_;
}
inline void cgheartbeat::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgheartbeat.userid)
}

// -------------------------------------------------------------------

// gcheartbeat

// optional int32 result = 1;
inline bool gcheartbeat::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcheartbeat::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcheartbeat::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcheartbeat::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcheartbeat::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcheartbeat.result)
  return result_;
}
inline void gcheartbeat::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcheartbeat.result)
}

// -------------------------------------------------------------------

// cggetinitinfo

// optional int32 userid = 1;
inline bool cggetinitinfo::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cggetinitinfo::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cggetinitinfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cggetinitinfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cggetinitinfo::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetinitinfo.userid)
  return userid_;
}
inline void cggetinitinfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggetinitinfo.userid)
}

// optional string channel = 2;
inline bool cggetinitinfo::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cggetinitinfo::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cggetinitinfo::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cggetinitinfo::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel();
}
inline const ::std::string& cggetinitinfo::channel() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetinitinfo.channel)
  return channel_.GetNoArena();
}
inline void cggetinitinfo::set_channel(const ::std::string& value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cggetinitinfo.channel)
}
#if LANG_CXX11
inline void cggetinitinfo::set_channel(::std::string&& value) {
  set_has_channel();
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cggetinitinfo.channel)
}
#endif
inline void cggetinitinfo::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cggetinitinfo.channel)
}
inline void cggetinitinfo::set_channel(const char* value, size_t size) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cggetinitinfo.channel)
}
inline ::std::string* cggetinitinfo::mutable_channel() {
  set_has_channel();
  // @@protoc_insertion_point(field_mutable:NFMsg.cggetinitinfo.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cggetinitinfo::release_channel() {
  // @@protoc_insertion_point(field_release:NFMsg.cggetinitinfo.channel)
  if (!has_channel()) {
    return NULL;
  }
  clear_has_channel();
  return channel_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cggetinitinfo::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cggetinitinfo.channel)
}

// -------------------------------------------------------------------

// gcgetinitinfo

// optional int32 result = 1;
inline bool gcgetinitinfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcgetinitinfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcgetinitinfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcgetinitinfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcgetinitinfo::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetinitinfo.result)
  return result_;
}
inline void gcgetinitinfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgetinitinfo.result)
}

// repeated int32 paytype = 2;
inline int gcgetinitinfo::paytype_size() const {
  return paytype_.size();
}
inline void gcgetinitinfo::clear_paytype() {
  paytype_.Clear();
}
inline ::google::protobuf::int32 gcgetinitinfo::paytype(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetinitinfo.paytype)
  return paytype_.Get(index);
}
inline void gcgetinitinfo::set_paytype(int index, ::google::protobuf::int32 value) {
  paytype_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcgetinitinfo.paytype)
}
inline void gcgetinitinfo::add_paytype(::google::protobuf::int32 value) {
  paytype_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcgetinitinfo.paytype)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcgetinitinfo::paytype() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgetinitinfo.paytype)
  return paytype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcgetinitinfo::mutable_paytype() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgetinitinfo.paytype)
  return &paytype_;
}

// repeated int32 mdelist = 4;
inline int gcgetinitinfo::mdelist_size() const {
  return mdelist_.size();
}
inline void gcgetinitinfo::clear_mdelist() {
  mdelist_.Clear();
}
inline ::google::protobuf::int32 gcgetinitinfo::mdelist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetinitinfo.mdelist)
  return mdelist_.Get(index);
}
inline void gcgetinitinfo::set_mdelist(int index, ::google::protobuf::int32 value) {
  mdelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcgetinitinfo.mdelist)
}
inline void gcgetinitinfo::add_mdelist(::google::protobuf::int32 value) {
  mdelist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcgetinitinfo.mdelist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcgetinitinfo::mdelist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgetinitinfo.mdelist)
  return mdelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcgetinitinfo::mutable_mdelist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgetinitinfo.mdelist)
  return &mdelist_;
}

// repeated int32 paylist = 5;
inline int gcgetinitinfo::paylist_size() const {
  return paylist_.size();
}
inline void gcgetinitinfo::clear_paylist() {
  paylist_.Clear();
}
inline ::google::protobuf::int32 gcgetinitinfo::paylist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetinitinfo.paylist)
  return paylist_.Get(index);
}
inline void gcgetinitinfo::set_paylist(int index, ::google::protobuf::int32 value) {
  paylist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcgetinitinfo.paylist)
}
inline void gcgetinitinfo::add_paylist(::google::protobuf::int32 value) {
  paylist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcgetinitinfo.paylist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcgetinitinfo::paylist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgetinitinfo.paylist)
  return paylist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcgetinitinfo::mutable_paylist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgetinitinfo.paylist)
  return &paylist_;
}

// repeated int32 shoplist = 6;
inline int gcgetinitinfo::shoplist_size() const {
  return shoplist_.size();
}
inline void gcgetinitinfo::clear_shoplist() {
  shoplist_.Clear();
}
inline ::google::protobuf::int32 gcgetinitinfo::shoplist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetinitinfo.shoplist)
  return shoplist_.Get(index);
}
inline void gcgetinitinfo::set_shoplist(int index, ::google::protobuf::int32 value) {
  shoplist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcgetinitinfo.shoplist)
}
inline void gcgetinitinfo::add_shoplist(::google::protobuf::int32 value) {
  shoplist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcgetinitinfo.shoplist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcgetinitinfo::shoplist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgetinitinfo.shoplist)
  return shoplist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcgetinitinfo::mutable_shoplist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgetinitinfo.shoplist)
  return &shoplist_;
}

// repeated string wechatlist = 7;
inline int gcgetinitinfo::wechatlist_size() const {
  return wechatlist_.size();
}
inline void gcgetinitinfo::clear_wechatlist() {
  wechatlist_.Clear();
}
inline const ::std::string& gcgetinitinfo::wechatlist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetinitinfo.wechatlist)
  return wechatlist_.Get(index);
}
inline ::std::string* gcgetinitinfo::mutable_wechatlist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcgetinitinfo.wechatlist)
  return wechatlist_.Mutable(index);
}
inline void gcgetinitinfo::set_wechatlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcgetinitinfo.wechatlist)
  wechatlist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void gcgetinitinfo::set_wechatlist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcgetinitinfo.wechatlist)
  wechatlist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void gcgetinitinfo::set_wechatlist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  wechatlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NFMsg.gcgetinitinfo.wechatlist)
}
inline void gcgetinitinfo::set_wechatlist(int index, const char* value, size_t size) {
  wechatlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcgetinitinfo.wechatlist)
}
inline ::std::string* gcgetinitinfo::add_wechatlist() {
  // @@protoc_insertion_point(field_add_mutable:NFMsg.gcgetinitinfo.wechatlist)
  return wechatlist_.Add();
}
inline void gcgetinitinfo::add_wechatlist(const ::std::string& value) {
  wechatlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcgetinitinfo.wechatlist)
}
#if LANG_CXX11
inline void gcgetinitinfo::add_wechatlist(::std::string&& value) {
  wechatlist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NFMsg.gcgetinitinfo.wechatlist)
}
#endif
inline void gcgetinitinfo::add_wechatlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  wechatlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NFMsg.gcgetinitinfo.wechatlist)
}
inline void gcgetinitinfo::add_wechatlist(const char* value, size_t size) {
  wechatlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NFMsg.gcgetinitinfo.wechatlist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gcgetinitinfo::wechatlist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgetinitinfo.wechatlist)
  return wechatlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gcgetinitinfo::mutable_wechatlist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgetinitinfo.wechatlist)
  return &wechatlist_;
}

// -------------------------------------------------------------------

// gcbroadcast

// optional int32 result = 1;
inline bool gcbroadcast::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcbroadcast::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcbroadcast::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcbroadcast::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcbroadcast::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcbroadcast.result)
  return result_;
}
inline void gcbroadcast::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcbroadcast.result)
}

// repeated int32 broadtypelist = 2;
inline int gcbroadcast::broadtypelist_size() const {
  return broadtypelist_.size();
}
inline void gcbroadcast::clear_broadtypelist() {
  broadtypelist_.Clear();
}
inline ::google::protobuf::int32 gcbroadcast::broadtypelist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcbroadcast.broadtypelist)
  return broadtypelist_.Get(index);
}
inline void gcbroadcast::set_broadtypelist(int index, ::google::protobuf::int32 value) {
  broadtypelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcbroadcast.broadtypelist)
}
inline void gcbroadcast::add_broadtypelist(::google::protobuf::int32 value) {
  broadtypelist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcbroadcast.broadtypelist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcbroadcast::broadtypelist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcbroadcast.broadtypelist)
  return broadtypelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcbroadcast::mutable_broadtypelist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcbroadcast.broadtypelist)
  return &broadtypelist_;
}

// repeated int32 senderidlist = 3;
inline int gcbroadcast::senderidlist_size() const {
  return senderidlist_.size();
}
inline void gcbroadcast::clear_senderidlist() {
  senderidlist_.Clear();
}
inline ::google::protobuf::int32 gcbroadcast::senderidlist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcbroadcast.senderidlist)
  return senderidlist_.Get(index);
}
inline void gcbroadcast::set_senderidlist(int index, ::google::protobuf::int32 value) {
  senderidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcbroadcast.senderidlist)
}
inline void gcbroadcast::add_senderidlist(::google::protobuf::int32 value) {
  senderidlist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcbroadcast.senderidlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcbroadcast::senderidlist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcbroadcast.senderidlist)
  return senderidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcbroadcast::mutable_senderidlist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcbroadcast.senderidlist)
  return &senderidlist_;
}

// repeated string senderlist = 4;
inline int gcbroadcast::senderlist_size() const {
  return senderlist_.size();
}
inline void gcbroadcast::clear_senderlist() {
  senderlist_.Clear();
}
inline const ::std::string& gcbroadcast::senderlist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcbroadcast.senderlist)
  return senderlist_.Get(index);
}
inline ::std::string* gcbroadcast::mutable_senderlist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcbroadcast.senderlist)
  return senderlist_.Mutable(index);
}
inline void gcbroadcast::set_senderlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcbroadcast.senderlist)
  senderlist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void gcbroadcast::set_senderlist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcbroadcast.senderlist)
  senderlist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void gcbroadcast::set_senderlist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  senderlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NFMsg.gcbroadcast.senderlist)
}
inline void gcbroadcast::set_senderlist(int index, const char* value, size_t size) {
  senderlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcbroadcast.senderlist)
}
inline ::std::string* gcbroadcast::add_senderlist() {
  // @@protoc_insertion_point(field_add_mutable:NFMsg.gcbroadcast.senderlist)
  return senderlist_.Add();
}
inline void gcbroadcast::add_senderlist(const ::std::string& value) {
  senderlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcbroadcast.senderlist)
}
#if LANG_CXX11
inline void gcbroadcast::add_senderlist(::std::string&& value) {
  senderlist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NFMsg.gcbroadcast.senderlist)
}
#endif
inline void gcbroadcast::add_senderlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  senderlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NFMsg.gcbroadcast.senderlist)
}
inline void gcbroadcast::add_senderlist(const char* value, size_t size) {
  senderlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NFMsg.gcbroadcast.senderlist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gcbroadcast::senderlist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcbroadcast.senderlist)
  return senderlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gcbroadcast::mutable_senderlist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcbroadcast.senderlist)
  return &senderlist_;
}

// repeated string msglist = 5;
inline int gcbroadcast::msglist_size() const {
  return msglist_.size();
}
inline void gcbroadcast::clear_msglist() {
  msglist_.Clear();
}
inline const ::std::string& gcbroadcast::msglist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcbroadcast.msglist)
  return msglist_.Get(index);
}
inline ::std::string* gcbroadcast::mutable_msglist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcbroadcast.msglist)
  return msglist_.Mutable(index);
}
inline void gcbroadcast::set_msglist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcbroadcast.msglist)
  msglist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void gcbroadcast::set_msglist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcbroadcast.msglist)
  msglist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void gcbroadcast::set_msglist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  msglist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NFMsg.gcbroadcast.msglist)
}
inline void gcbroadcast::set_msglist(int index, const char* value, size_t size) {
  msglist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcbroadcast.msglist)
}
inline ::std::string* gcbroadcast::add_msglist() {
  // @@protoc_insertion_point(field_add_mutable:NFMsg.gcbroadcast.msglist)
  return msglist_.Add();
}
inline void gcbroadcast::add_msglist(const ::std::string& value) {
  msglist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcbroadcast.msglist)
}
#if LANG_CXX11
inline void gcbroadcast::add_msglist(::std::string&& value) {
  msglist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NFMsg.gcbroadcast.msglist)
}
#endif
inline void gcbroadcast::add_msglist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  msglist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NFMsg.gcbroadcast.msglist)
}
inline void gcbroadcast::add_msglist(const char* value, size_t size) {
  msglist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NFMsg.gcbroadcast.msglist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gcbroadcast::msglist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcbroadcast.msglist)
  return msglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gcbroadcast::mutable_msglist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcbroadcast.msglist)
  return &msglist_;
}

// -------------------------------------------------------------------

// cggetmaillist

// optional int32 userid = 1;
inline bool cggetmaillist::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cggetmaillist::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cggetmaillist::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cggetmaillist::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cggetmaillist::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetmaillist.userid)
  return userid_;
}
inline void cggetmaillist::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggetmaillist.userid)
}

// optional int32 pagenum = 2;
inline bool cggetmaillist::has_pagenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cggetmaillist::set_has_pagenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cggetmaillist::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cggetmaillist::clear_pagenum() {
  pagenum_ = 0;
  clear_has_pagenum();
}
inline ::google::protobuf::int32 cggetmaillist::pagenum() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetmaillist.pagenum)
  return pagenum_;
}
inline void cggetmaillist::set_pagenum(::google::protobuf::int32 value) {
  set_has_pagenum();
  pagenum_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggetmaillist.pagenum)
}

// -------------------------------------------------------------------

// gcgetmaillist

// optional int32 result = 1;
inline bool gcgetmaillist::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcgetmaillist::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcgetmaillist::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcgetmaillist::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcgetmaillist::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetmaillist.result)
  return result_;
}
inline void gcgetmaillist::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgetmaillist.result)
}

// repeated .NFMsg.mailinfo mlist = 3;
inline int gcgetmaillist::mlist_size() const {
  return mlist_.size();
}
inline ::NFMsg::mailinfo* gcgetmaillist::mutable_mlist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcgetmaillist.mlist)
  return mlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NFMsg::mailinfo >*
gcgetmaillist::mutable_mlist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgetmaillist.mlist)
  return &mlist_;
}
inline const ::NFMsg::mailinfo& gcgetmaillist::mlist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetmaillist.mlist)
  return mlist_.Get(index);
}
inline ::NFMsg::mailinfo* gcgetmaillist::add_mlist() {
  // @@protoc_insertion_point(field_add:NFMsg.gcgetmaillist.mlist)
  return mlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NFMsg::mailinfo >&
gcgetmaillist::mlist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgetmaillist.mlist)
  return mlist_;
}

// -------------------------------------------------------------------

// cgreadmail

// optional int32 userid = 1;
inline bool cgreadmail::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgreadmail::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgreadmail::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgreadmail::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgreadmail::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgreadmail.userid)
  return userid_;
}
inline void cgreadmail::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgreadmail.userid)
}

// optional int32 mailid = 2;
inline bool cgreadmail::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgreadmail::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgreadmail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgreadmail::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 cgreadmail::mailid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgreadmail.mailid)
  return mailid_;
}
inline void cgreadmail::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgreadmail.mailid)
}

// -------------------------------------------------------------------

// gcreadmail

// optional int32 result = 1;
inline bool gcreadmail::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcreadmail::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcreadmail::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcreadmail::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcreadmail::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcreadmail.result)
  return result_;
}
inline void gcreadmail::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcreadmail.result)
}

// optional int32 mailid = 2;
inline bool gcreadmail::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcreadmail::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcreadmail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcreadmail::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 gcreadmail::mailid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcreadmail.mailid)
  return mailid_;
}
inline void gcreadmail::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcreadmail.mailid)
}

// optional int32 mailstate = 3;
inline bool gcreadmail::has_mailstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcreadmail::set_has_mailstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcreadmail::clear_has_mailstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcreadmail::clear_mailstate() {
  mailstate_ = 0;
  clear_has_mailstate();
}
inline ::google::protobuf::int32 gcreadmail::mailstate() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcreadmail.mailstate)
  return mailstate_;
}
inline void gcreadmail::set_mailstate(::google::protobuf::int32 value) {
  set_has_mailstate();
  mailstate_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcreadmail.mailstate)
}

// -------------------------------------------------------------------

// cggetmailgoods

// optional int32 userid = 1;
inline bool cggetmailgoods::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cggetmailgoods::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cggetmailgoods::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cggetmailgoods::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cggetmailgoods::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetmailgoods.userid)
  return userid_;
}
inline void cggetmailgoods::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggetmailgoods.userid)
}

// optional int32 mailid = 2;
inline bool cggetmailgoods::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cggetmailgoods::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cggetmailgoods::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cggetmailgoods::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 cggetmailgoods::mailid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetmailgoods.mailid)
  return mailid_;
}
inline void cggetmailgoods::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggetmailgoods.mailid)
}

// -------------------------------------------------------------------

// gcgetmailgoods

// optional int32 result = 1;
inline bool gcgetmailgoods::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcgetmailgoods::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcgetmailgoods::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcgetmailgoods::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcgetmailgoods::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetmailgoods.result)
  return result_;
}
inline void gcgetmailgoods::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgetmailgoods.result)
}

// optional int32 mailid = 2;
inline bool gcgetmailgoods::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcgetmailgoods::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcgetmailgoods::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcgetmailgoods::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 gcgetmailgoods::mailid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetmailgoods.mailid)
  return mailid_;
}
inline void gcgetmailgoods::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgetmailgoods.mailid)
}

// optional int32 mailstate = 3;
inline bool gcgetmailgoods::has_mailstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcgetmailgoods::set_has_mailstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcgetmailgoods::clear_has_mailstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcgetmailgoods::clear_mailstate() {
  mailstate_ = 0;
  clear_has_mailstate();
}
inline ::google::protobuf::int32 gcgetmailgoods::mailstate() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetmailgoods.mailstate)
  return mailstate_;
}
inline void gcgetmailgoods::set_mailstate(::google::protobuf::int32 value) {
  set_has_mailstate();
  mailstate_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgetmailgoods.mailstate)
}

// repeated .NFMsg.goodsinfo getlist = 4;
inline int gcgetmailgoods::getlist_size() const {
  return getlist_.size();
}
inline ::NFMsg::goodsinfo* gcgetmailgoods::mutable_getlist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcgetmailgoods.getlist)
  return getlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NFMsg::goodsinfo >*
gcgetmailgoods::mutable_getlist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgetmailgoods.getlist)
  return &getlist_;
}
inline const ::NFMsg::goodsinfo& gcgetmailgoods::getlist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetmailgoods.getlist)
  return getlist_.Get(index);
}
inline ::NFMsg::goodsinfo* gcgetmailgoods::add_getlist() {
  // @@protoc_insertion_point(field_add:NFMsg.gcgetmailgoods.getlist)
  return getlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NFMsg::goodsinfo >&
gcgetmailgoods::getlist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgetmailgoods.getlist)
  return getlist_;
}

// -------------------------------------------------------------------

// cgdeletemail

// optional int32 userid = 1;
inline bool cgdeletemail::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgdeletemail::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgdeletemail::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgdeletemail::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgdeletemail::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgdeletemail.userid)
  return userid_;
}
inline void cgdeletemail::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgdeletemail.userid)
}

// optional int32 mailid = 2;
inline bool cgdeletemail::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgdeletemail::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgdeletemail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgdeletemail::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 cgdeletemail::mailid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgdeletemail.mailid)
  return mailid_;
}
inline void cgdeletemail::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgdeletemail.mailid)
}

// -------------------------------------------------------------------

// gcdeletemail

// optional int32 result = 1;
inline bool gcdeletemail::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcdeletemail::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcdeletemail::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcdeletemail::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcdeletemail::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcdeletemail.result)
  return result_;
}
inline void gcdeletemail::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcdeletemail.result)
}

// optional int32 mailid = 2;
inline bool gcdeletemail::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcdeletemail::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcdeletemail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcdeletemail::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 gcdeletemail::mailid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcdeletemail.mailid)
  return mailid_;
}
inline void gcdeletemail::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcdeletemail.mailid)
}

// -------------------------------------------------------------------

// cgplayerstatus

// optional int32 userid = 1;
inline bool cgplayerstatus::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgplayerstatus::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgplayerstatus::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgplayerstatus::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgplayerstatus::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgplayerstatus.userid)
  return userid_;
}
inline void cgplayerstatus::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgplayerstatus.userid)
}

// optional int32 status = 2;
inline bool cgplayerstatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgplayerstatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgplayerstatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgplayerstatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 cgplayerstatus::status() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgplayerstatus.status)
  return status_;
}
inline void cgplayerstatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgplayerstatus.status)
}

// -------------------------------------------------------------------

// gcplayerstatus

// optional int32 result = 1;
inline bool gcplayerstatus::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcplayerstatus::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcplayerstatus::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcplayerstatus::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcplayerstatus::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcplayerstatus.result)
  return result_;
}
inline void gcplayerstatus::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcplayerstatus.result)
}

// optional int32 userid = 2;
inline bool gcplayerstatus::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcplayerstatus::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcplayerstatus::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcplayerstatus::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gcplayerstatus::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcplayerstatus.userid)
  return userid_;
}
inline void gcplayerstatus::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcplayerstatus.userid)
}

// optional int32 status = 3;
inline bool gcplayerstatus::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcplayerstatus::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcplayerstatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcplayerstatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 gcplayerstatus::status() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcplayerstatus.status)
  return status_;
}
inline void gcplayerstatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcplayerstatus.status)
}

// optional int32 timemark = 4;
inline bool gcplayerstatus::has_timemark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gcplayerstatus::set_has_timemark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gcplayerstatus::clear_has_timemark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gcplayerstatus::clear_timemark() {
  timemark_ = 0;
  clear_has_timemark();
}
inline ::google::protobuf::int32 gcplayerstatus::timemark() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcplayerstatus.timemark)
  return timemark_;
}
inline void gcplayerstatus::set_timemark(::google::protobuf::int32 value) {
  set_has_timemark();
  timemark_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcplayerstatus.timemark)
}

// -------------------------------------------------------------------

// cgupdateplayerinfo

// optional int32 userid = 1;
inline bool cgupdateplayerinfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgupdateplayerinfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgupdateplayerinfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgupdateplayerinfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgupdateplayerinfo::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgupdateplayerinfo.userid)
  return userid_;
}
inline void cgupdateplayerinfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgupdateplayerinfo.userid)
}

// repeated string typelist = 2;
inline int cgupdateplayerinfo::typelist_size() const {
  return typelist_.size();
}
inline void cgupdateplayerinfo::clear_typelist() {
  typelist_.Clear();
}
inline const ::std::string& cgupdateplayerinfo::typelist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.cgupdateplayerinfo.typelist)
  return typelist_.Get(index);
}
inline ::std::string* cgupdateplayerinfo::mutable_typelist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.cgupdateplayerinfo.typelist)
  return typelist_.Mutable(index);
}
inline void cgupdateplayerinfo::set_typelist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NFMsg.cgupdateplayerinfo.typelist)
  typelist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void cgupdateplayerinfo::set_typelist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NFMsg.cgupdateplayerinfo.typelist)
  typelist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void cgupdateplayerinfo::set_typelist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  typelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NFMsg.cgupdateplayerinfo.typelist)
}
inline void cgupdateplayerinfo::set_typelist(int index, const char* value, size_t size) {
  typelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgupdateplayerinfo.typelist)
}
inline ::std::string* cgupdateplayerinfo::add_typelist() {
  // @@protoc_insertion_point(field_add_mutable:NFMsg.cgupdateplayerinfo.typelist)
  return typelist_.Add();
}
inline void cgupdateplayerinfo::add_typelist(const ::std::string& value) {
  typelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NFMsg.cgupdateplayerinfo.typelist)
}
#if LANG_CXX11
inline void cgupdateplayerinfo::add_typelist(::std::string&& value) {
  typelist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NFMsg.cgupdateplayerinfo.typelist)
}
#endif
inline void cgupdateplayerinfo::add_typelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  typelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NFMsg.cgupdateplayerinfo.typelist)
}
inline void cgupdateplayerinfo::add_typelist(const char* value, size_t size) {
  typelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NFMsg.cgupdateplayerinfo.typelist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
cgupdateplayerinfo::typelist() const {
  // @@protoc_insertion_point(field_list:NFMsg.cgupdateplayerinfo.typelist)
  return typelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
cgupdateplayerinfo::mutable_typelist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.cgupdateplayerinfo.typelist)
  return &typelist_;
}

// repeated string valuelist = 3;
inline int cgupdateplayerinfo::valuelist_size() const {
  return valuelist_.size();
}
inline void cgupdateplayerinfo::clear_valuelist() {
  valuelist_.Clear();
}
inline const ::std::string& cgupdateplayerinfo::valuelist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.cgupdateplayerinfo.valuelist)
  return valuelist_.Get(index);
}
inline ::std::string* cgupdateplayerinfo::mutable_valuelist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.cgupdateplayerinfo.valuelist)
  return valuelist_.Mutable(index);
}
inline void cgupdateplayerinfo::set_valuelist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NFMsg.cgupdateplayerinfo.valuelist)
  valuelist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void cgupdateplayerinfo::set_valuelist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NFMsg.cgupdateplayerinfo.valuelist)
  valuelist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void cgupdateplayerinfo::set_valuelist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  valuelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NFMsg.cgupdateplayerinfo.valuelist)
}
inline void cgupdateplayerinfo::set_valuelist(int index, const char* value, size_t size) {
  valuelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgupdateplayerinfo.valuelist)
}
inline ::std::string* cgupdateplayerinfo::add_valuelist() {
  // @@protoc_insertion_point(field_add_mutable:NFMsg.cgupdateplayerinfo.valuelist)
  return valuelist_.Add();
}
inline void cgupdateplayerinfo::add_valuelist(const ::std::string& value) {
  valuelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NFMsg.cgupdateplayerinfo.valuelist)
}
#if LANG_CXX11
inline void cgupdateplayerinfo::add_valuelist(::std::string&& value) {
  valuelist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NFMsg.cgupdateplayerinfo.valuelist)
}
#endif
inline void cgupdateplayerinfo::add_valuelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  valuelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NFMsg.cgupdateplayerinfo.valuelist)
}
inline void cgupdateplayerinfo::add_valuelist(const char* value, size_t size) {
  valuelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NFMsg.cgupdateplayerinfo.valuelist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
cgupdateplayerinfo::valuelist() const {
  // @@protoc_insertion_point(field_list:NFMsg.cgupdateplayerinfo.valuelist)
  return valuelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
cgupdateplayerinfo::mutable_valuelist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.cgupdateplayerinfo.valuelist)
  return &valuelist_;
}

// -------------------------------------------------------------------

// gcupdateplayerinfo

// optional int32 result = 1;
inline bool gcupdateplayerinfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcupdateplayerinfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcupdateplayerinfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcupdateplayerinfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcupdateplayerinfo::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdateplayerinfo.result)
  return result_;
}
inline void gcupdateplayerinfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayerinfo.result)
}

// repeated string typelist = 2;
inline int gcupdateplayerinfo::typelist_size() const {
  return typelist_.size();
}
inline void gcupdateplayerinfo::clear_typelist() {
  typelist_.Clear();
}
inline const ::std::string& gcupdateplayerinfo::typelist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdateplayerinfo.typelist)
  return typelist_.Get(index);
}
inline ::std::string* gcupdateplayerinfo::mutable_typelist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcupdateplayerinfo.typelist)
  return typelist_.Mutable(index);
}
inline void gcupdateplayerinfo::set_typelist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayerinfo.typelist)
  typelist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void gcupdateplayerinfo::set_typelist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayerinfo.typelist)
  typelist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void gcupdateplayerinfo::set_typelist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  typelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NFMsg.gcupdateplayerinfo.typelist)
}
inline void gcupdateplayerinfo::set_typelist(int index, const char* value, size_t size) {
  typelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcupdateplayerinfo.typelist)
}
inline ::std::string* gcupdateplayerinfo::add_typelist() {
  // @@protoc_insertion_point(field_add_mutable:NFMsg.gcupdateplayerinfo.typelist)
  return typelist_.Add();
}
inline void gcupdateplayerinfo::add_typelist(const ::std::string& value) {
  typelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcupdateplayerinfo.typelist)
}
#if LANG_CXX11
inline void gcupdateplayerinfo::add_typelist(::std::string&& value) {
  typelist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NFMsg.gcupdateplayerinfo.typelist)
}
#endif
inline void gcupdateplayerinfo::add_typelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  typelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NFMsg.gcupdateplayerinfo.typelist)
}
inline void gcupdateplayerinfo::add_typelist(const char* value, size_t size) {
  typelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NFMsg.gcupdateplayerinfo.typelist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gcupdateplayerinfo::typelist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcupdateplayerinfo.typelist)
  return typelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gcupdateplayerinfo::mutable_typelist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcupdateplayerinfo.typelist)
  return &typelist_;
}

// repeated string valuelist = 3;
inline int gcupdateplayerinfo::valuelist_size() const {
  return valuelist_.size();
}
inline void gcupdateplayerinfo::clear_valuelist() {
  valuelist_.Clear();
}
inline const ::std::string& gcupdateplayerinfo::valuelist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdateplayerinfo.valuelist)
  return valuelist_.Get(index);
}
inline ::std::string* gcupdateplayerinfo::mutable_valuelist(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcupdateplayerinfo.valuelist)
  return valuelist_.Mutable(index);
}
inline void gcupdateplayerinfo::set_valuelist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayerinfo.valuelist)
  valuelist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void gcupdateplayerinfo::set_valuelist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayerinfo.valuelist)
  valuelist_.Mutable(index)->assign(std::move(value));
}
#endif
inline void gcupdateplayerinfo::set_valuelist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  valuelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NFMsg.gcupdateplayerinfo.valuelist)
}
inline void gcupdateplayerinfo::set_valuelist(int index, const char* value, size_t size) {
  valuelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcupdateplayerinfo.valuelist)
}
inline ::std::string* gcupdateplayerinfo::add_valuelist() {
  // @@protoc_insertion_point(field_add_mutable:NFMsg.gcupdateplayerinfo.valuelist)
  return valuelist_.Add();
}
inline void gcupdateplayerinfo::add_valuelist(const ::std::string& value) {
  valuelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcupdateplayerinfo.valuelist)
}
#if LANG_CXX11
inline void gcupdateplayerinfo::add_valuelist(::std::string&& value) {
  valuelist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:NFMsg.gcupdateplayerinfo.valuelist)
}
#endif
inline void gcupdateplayerinfo::add_valuelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  valuelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NFMsg.gcupdateplayerinfo.valuelist)
}
inline void gcupdateplayerinfo::add_valuelist(const char* value, size_t size) {
  valuelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NFMsg.gcupdateplayerinfo.valuelist)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
gcupdateplayerinfo::valuelist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcupdateplayerinfo.valuelist)
  return valuelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
gcupdateplayerinfo::mutable_valuelist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcupdateplayerinfo.valuelist)
  return &valuelist_;
}

// -------------------------------------------------------------------

// gcupdategoodslist

// optional int32 result = 1;
inline bool gcupdategoodslist::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcupdategoodslist::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcupdategoodslist::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcupdategoodslist::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcupdategoodslist::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdategoodslist.result)
  return result_;
}
inline void gcupdategoodslist::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcupdategoodslist.result)
}

// repeated int32 idlist = 2;
inline int gcupdategoodslist::idlist_size() const {
  return idlist_.size();
}
inline void gcupdategoodslist::clear_idlist() {
  idlist_.Clear();
}
inline ::google::protobuf::int32 gcupdategoodslist::idlist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdategoodslist.idlist)
  return idlist_.Get(index);
}
inline void gcupdategoodslist::set_idlist(int index, ::google::protobuf::int32 value) {
  idlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcupdategoodslist.idlist)
}
inline void gcupdategoodslist::add_idlist(::google::protobuf::int32 value) {
  idlist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcupdategoodslist.idlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcupdategoodslist::idlist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcupdategoodslist.idlist)
  return idlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcupdategoodslist::mutable_idlist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcupdategoodslist.idlist)
  return &idlist_;
}

// repeated int32 numlist = 3;
inline int gcupdategoodslist::numlist_size() const {
  return numlist_.size();
}
inline void gcupdategoodslist::clear_numlist() {
  numlist_.Clear();
}
inline ::google::protobuf::int32 gcupdategoodslist::numlist(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdategoodslist.numlist)
  return numlist_.Get(index);
}
inline void gcupdategoodslist::set_numlist(int index, ::google::protobuf::int32 value) {
  numlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NFMsg.gcupdategoodslist.numlist)
}
inline void gcupdategoodslist::add_numlist(::google::protobuf::int32 value) {
  numlist_.Add(value);
  // @@protoc_insertion_point(field_add:NFMsg.gcupdategoodslist.numlist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
gcupdategoodslist::numlist() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcupdategoodslist.numlist)
  return numlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
gcupdategoodslist::mutable_numlist() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcupdategoodslist.numlist)
  return &numlist_;
}

// -------------------------------------------------------------------

// cgagencyopt

// optional int32 userid = 1;
inline bool cgagencyopt::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgagencyopt::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgagencyopt::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgagencyopt::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgagencyopt::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgagencyopt.userid)
  return userid_;
}
inline void cgagencyopt::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgagencyopt.userid)
}

// optional int32 opttype = 2;
inline bool cgagencyopt::has_opttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cgagencyopt::set_has_opttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cgagencyopt::clear_has_opttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cgagencyopt::clear_opttype() {
  opttype_ = 0;
  clear_has_opttype();
}
inline ::google::protobuf::int32 cgagencyopt::opttype() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgagencyopt.opttype)
  return opttype_;
}
inline void cgagencyopt::set_opttype(::google::protobuf::int32 value) {
  set_has_opttype();
  opttype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgagencyopt.opttype)
}

// optional string optstr = 3;
inline bool cgagencyopt::has_optstr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgagencyopt::set_has_optstr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgagencyopt::clear_has_optstr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgagencyopt::clear_optstr() {
  optstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optstr();
}
inline const ::std::string& cgagencyopt::optstr() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgagencyopt.optstr)
  return optstr_.GetNoArena();
}
inline void cgagencyopt::set_optstr(const ::std::string& value) {
  set_has_optstr();
  optstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgagencyopt.optstr)
}
#if LANG_CXX11
inline void cgagencyopt::set_optstr(::std::string&& value) {
  set_has_optstr();
  optstr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgagencyopt.optstr)
}
#endif
inline void cgagencyopt::set_optstr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_optstr();
  optstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgagencyopt.optstr)
}
inline void cgagencyopt::set_optstr(const char* value, size_t size) {
  set_has_optstr();
  optstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgagencyopt.optstr)
}
inline ::std::string* cgagencyopt::mutable_optstr() {
  set_has_optstr();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgagencyopt.optstr)
  return optstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgagencyopt::release_optstr() {
  // @@protoc_insertion_point(field_release:NFMsg.cgagencyopt.optstr)
  if (!has_optstr()) {
    return NULL;
  }
  clear_has_optstr();
  return optstr_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgagencyopt::set_allocated_optstr(::std::string* optstr) {
  if (optstr != NULL) {
    set_has_optstr();
  } else {
    clear_has_optstr();
  }
  optstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optstr);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgagencyopt.optstr)
}

// -------------------------------------------------------------------

// gcagencyopt

// optional int32 result = 1;
inline bool gcagencyopt::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcagencyopt::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcagencyopt::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcagencyopt::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcagencyopt::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcagencyopt.result)
  return result_;
}
inline void gcagencyopt::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcagencyopt.result)
}

// optional string str = 2;
inline bool gcagencyopt::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcagencyopt::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcagencyopt::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcagencyopt::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& gcagencyopt::str() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcagencyopt.str)
  return str_.GetNoArena();
}
inline void gcagencyopt::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.gcagencyopt.str)
}
#if LANG_CXX11
inline void gcagencyopt::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.gcagencyopt.str)
}
#endif
inline void gcagencyopt::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.gcagencyopt.str)
}
inline void gcagencyopt::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcagencyopt.str)
}
inline ::std::string* gcagencyopt::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:NFMsg.gcagencyopt.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gcagencyopt::release_str() {
  // @@protoc_insertion_point(field_release:NFMsg.gcagencyopt.str)
  if (!has_str()) {
    return NULL;
  }
  clear_has_str();
  return str_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gcagencyopt::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcagencyopt.str)
}

// -------------------------------------------------------------------

// cgentertable

// optional int32 userid = 1;
inline bool cgentertable::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgentertable::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgentertable::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgentertable::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgentertable::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgentertable.userid)
  return userid_;
}
inline void cgentertable::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgentertable.userid)
}

// optional int32 tableid = 2;
inline bool cgentertable::has_tableid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cgentertable::set_has_tableid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cgentertable::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cgentertable::clear_tableid() {
  tableid_ = 0;
  clear_has_tableid();
}
inline ::google::protobuf::int32 cgentertable::tableid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgentertable.tableid)
  return tableid_;
}
inline void cgentertable::set_tableid(::google::protobuf::int32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgentertable.tableid)
}

// optional string password = 3;
inline bool cgentertable::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgentertable::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgentertable::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgentertable::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& cgentertable::password() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgentertable.password)
  return password_.GetNoArena();
}
inline void cgentertable::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cgentertable.password)
}
#if LANG_CXX11
inline void cgentertable::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cgentertable.password)
}
#endif
inline void cgentertable::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cgentertable.password)
}
inline void cgentertable::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cgentertable.password)
}
inline ::std::string* cgentertable::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:NFMsg.cgentertable.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cgentertable::release_password() {
  // @@protoc_insertion_point(field_release:NFMsg.cgentertable.password)
  if (!has_password()) {
    return NULL;
  }
  clear_has_password();
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cgentertable::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cgentertable.password)
}

// -------------------------------------------------------------------

// gcentertable

// optional int32 result = 1;
inline bool gcentertable::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcentertable::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcentertable::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcentertable::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcentertable::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcentertable.result)
  return result_;
}
inline void gcentertable::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcentertable.result)
}

// -------------------------------------------------------------------

// cggetagencyinfo

// optional int32 userid = 1;
inline bool cggetagencyinfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cggetagencyinfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cggetagencyinfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cggetagencyinfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cggetagencyinfo::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggetagencyinfo.userid)
  return userid_;
}
inline void cggetagencyinfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggetagencyinfo.userid)
}

// -------------------------------------------------------------------

// gcgetagencyinfo

// optional int32 result = 1;
inline bool gcgetagencyinfo::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcgetagencyinfo::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcgetagencyinfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcgetagencyinfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcgetagencyinfo::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgetagencyinfo.result)
  return result_;
}
inline void gcgetagencyinfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgetagencyinfo.result)
}

// optional .NFMsg.agencyinfo agyinfo = 2;
inline bool gcgetagencyinfo::has_agyinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcgetagencyinfo::set_has_agyinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcgetagencyinfo::clear_has_agyinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::NFMsg::agencyinfo& gcgetagencyinfo::_internal_agyinfo() const {
  return *agyinfo_;
}
inline const ::NFMsg::agencyinfo& gcgetagencyinfo::agyinfo() const {
  const ::NFMsg::agencyinfo* p = agyinfo_;
  // @@protoc_insertion_point(field_get:NFMsg.gcgetagencyinfo.agyinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::NFMsg::agencyinfo*>(
      &::NFMsg::_agencyinfo_default_instance_);
}
inline ::NFMsg::agencyinfo* gcgetagencyinfo::release_agyinfo() {
  // @@protoc_insertion_point(field_release:NFMsg.gcgetagencyinfo.agyinfo)
  clear_has_agyinfo();
  ::NFMsg::agencyinfo* temp = agyinfo_;
  agyinfo_ = NULL;
  return temp;
}
inline ::NFMsg::agencyinfo* gcgetagencyinfo::mutable_agyinfo() {
  set_has_agyinfo();
  if (agyinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::NFMsg::agencyinfo>(GetArenaNoVirtual());
    agyinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NFMsg.gcgetagencyinfo.agyinfo)
  return agyinfo_;
}
inline void gcgetagencyinfo::set_allocated_agyinfo(::NFMsg::agencyinfo* agyinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(agyinfo_);
  }
  if (agyinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      agyinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, agyinfo, submessage_arena);
    }
    set_has_agyinfo();
  } else {
    clear_has_agyinfo();
  }
  agyinfo_ = agyinfo;
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcgetagencyinfo.agyinfo)
}

// -------------------------------------------------------------------

// cginvitebind

// optional int32 userid = 1;
inline bool cginvitebind::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cginvitebind::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cginvitebind::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cginvitebind::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cginvitebind::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cginvitebind.userid)
  return userid_;
}
inline void cginvitebind::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cginvitebind.userid)
}

// optional string invitestr = 2;
inline bool cginvitebind::has_invitestr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cginvitebind::set_has_invitestr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cginvitebind::clear_has_invitestr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cginvitebind::clear_invitestr() {
  invitestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invitestr();
}
inline const ::std::string& cginvitebind::invitestr() const {
  // @@protoc_insertion_point(field_get:NFMsg.cginvitebind.invitestr)
  return invitestr_.GetNoArena();
}
inline void cginvitebind::set_invitestr(const ::std::string& value) {
  set_has_invitestr();
  invitestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.cginvitebind.invitestr)
}
#if LANG_CXX11
inline void cginvitebind::set_invitestr(::std::string&& value) {
  set_has_invitestr();
  invitestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.cginvitebind.invitestr)
}
#endif
inline void cginvitebind::set_invitestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invitestr();
  invitestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.cginvitebind.invitestr)
}
inline void cginvitebind::set_invitestr(const char* value, size_t size) {
  set_has_invitestr();
  invitestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.cginvitebind.invitestr)
}
inline ::std::string* cginvitebind::mutable_invitestr() {
  set_has_invitestr();
  // @@protoc_insertion_point(field_mutable:NFMsg.cginvitebind.invitestr)
  return invitestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cginvitebind::release_invitestr() {
  // @@protoc_insertion_point(field_release:NFMsg.cginvitebind.invitestr)
  if (!has_invitestr()) {
    return NULL;
  }
  clear_has_invitestr();
  return invitestr_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cginvitebind::set_allocated_invitestr(::std::string* invitestr) {
  if (invitestr != NULL) {
    set_has_invitestr();
  } else {
    clear_has_invitestr();
  }
  invitestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invitestr);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.cginvitebind.invitestr)
}

// -------------------------------------------------------------------

// gcinvitebind

// optional int32 result = 1;
inline bool gcinvitebind::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcinvitebind::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcinvitebind::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcinvitebind::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcinvitebind::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcinvitebind.result)
  return result_;
}
inline void gcinvitebind::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcinvitebind.result)
}

// optional .NFMsg.agencyinfo agyinfo = 2;
inline bool gcinvitebind::has_agyinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcinvitebind::set_has_agyinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcinvitebind::clear_has_agyinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::NFMsg::agencyinfo& gcinvitebind::_internal_agyinfo() const {
  return *agyinfo_;
}
inline const ::NFMsg::agencyinfo& gcinvitebind::agyinfo() const {
  const ::NFMsg::agencyinfo* p = agyinfo_;
  // @@protoc_insertion_point(field_get:NFMsg.gcinvitebind.agyinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::NFMsg::agencyinfo*>(
      &::NFMsg::_agencyinfo_default_instance_);
}
inline ::NFMsg::agencyinfo* gcinvitebind::release_agyinfo() {
  // @@protoc_insertion_point(field_release:NFMsg.gcinvitebind.agyinfo)
  clear_has_agyinfo();
  ::NFMsg::agencyinfo* temp = agyinfo_;
  agyinfo_ = NULL;
  return temp;
}
inline ::NFMsg::agencyinfo* gcinvitebind::mutable_agyinfo() {
  set_has_agyinfo();
  if (agyinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::NFMsg::agencyinfo>(GetArenaNoVirtual());
    agyinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NFMsg.gcinvitebind.agyinfo)
  return agyinfo_;
}
inline void gcinvitebind::set_allocated_agyinfo(::NFMsg::agencyinfo* agyinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(agyinfo_);
  }
  if (agyinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      agyinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, agyinfo, submessage_arena);
    }
    set_has_agyinfo();
  } else {
    clear_has_agyinfo();
  }
  agyinfo_ = agyinfo;
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcinvitebind.agyinfo)
}

// -------------------------------------------------------------------

// cggivemoney

// optional int32 userid = 1;
inline bool cggivemoney::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cggivemoney::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cggivemoney::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cggivemoney::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cggivemoney::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggivemoney.userid)
  return userid_;
}
inline void cggivemoney::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggivemoney.userid)
}

// optional int32 touserid = 2;
inline bool cggivemoney::has_touserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cggivemoney::set_has_touserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cggivemoney::clear_has_touserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cggivemoney::clear_touserid() {
  touserid_ = 0;
  clear_has_touserid();
}
inline ::google::protobuf::int32 cggivemoney::touserid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggivemoney.touserid)
  return touserid_;
}
inline void cggivemoney::set_touserid(::google::protobuf::int32 value) {
  set_has_touserid();
  touserid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggivemoney.touserid)
}

// optional int32 amount = 3;
inline bool cggivemoney::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cggivemoney::set_has_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cggivemoney::clear_has_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cggivemoney::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 cggivemoney::amount() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggivemoney.amount)
  return amount_;
}
inline void cggivemoney::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggivemoney.amount)
}

// -------------------------------------------------------------------

// gcgivemoney

// optional int32 result = 1;
inline bool gcgivemoney::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcgivemoney::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcgivemoney::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcgivemoney::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcgivemoney::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgivemoney.result)
  return result_;
}
inline void gcgivemoney::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgivemoney.result)
}

// optional .NFMsg.givemoneyrecord record = 2;
inline bool gcgivemoney::has_record() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcgivemoney::set_has_record() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcgivemoney::clear_has_record() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::NFMsg::givemoneyrecord& gcgivemoney::_internal_record() const {
  return *record_;
}
inline const ::NFMsg::givemoneyrecord& gcgivemoney::record() const {
  const ::NFMsg::givemoneyrecord* p = record_;
  // @@protoc_insertion_point(field_get:NFMsg.gcgivemoney.record)
  return p != NULL ? *p : *reinterpret_cast<const ::NFMsg::givemoneyrecord*>(
      &::NFMsg::_givemoneyrecord_default_instance_);
}
inline ::NFMsg::givemoneyrecord* gcgivemoney::release_record() {
  // @@protoc_insertion_point(field_release:NFMsg.gcgivemoney.record)
  clear_has_record();
  ::NFMsg::givemoneyrecord* temp = record_;
  record_ = NULL;
  return temp;
}
inline ::NFMsg::givemoneyrecord* gcgivemoney::mutable_record() {
  set_has_record();
  if (record_ == NULL) {
    auto* p = CreateMaybeMessage<::NFMsg::givemoneyrecord>(GetArenaNoVirtual());
    record_ = p;
  }
  // @@protoc_insertion_point(field_mutable:NFMsg.gcgivemoney.record)
  return record_;
}
inline void gcgivemoney::set_allocated_record(::NFMsg::givemoneyrecord* record) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(record_);
  }
  if (record) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      record = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, record, submessage_arena);
    }
    set_has_record();
  } else {
    clear_has_record();
  }
  record_ = record;
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcgivemoney.record)
}

// -------------------------------------------------------------------

// cgapplygroupmaster

// optional int32 userid = 1;
inline bool cgapplygroupmaster::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgapplygroupmaster::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgapplygroupmaster::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgapplygroupmaster::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgapplygroupmaster::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgapplygroupmaster.userid)
  return userid_;
}
inline void cgapplygroupmaster::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgapplygroupmaster.userid)
}

// -------------------------------------------------------------------

// gcapplygroupmaster

// optional int32 result = 1;
inline bool gcapplygroupmaster::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcapplygroupmaster::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcapplygroupmaster::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcapplygroupmaster::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcapplygroupmaster::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcapplygroupmaster.result)
  return result_;
}
inline void gcapplygroupmaster::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcapplygroupmaster.result)
}

// -------------------------------------------------------------------

// cggivemoneyrecord

// optional int32 userid = 1;
inline bool cggivemoneyrecord::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cggivemoneyrecord::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cggivemoneyrecord::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cggivemoneyrecord::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cggivemoneyrecord::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggivemoneyrecord.userid)
  return userid_;
}
inline void cggivemoneyrecord::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggivemoneyrecord.userid)
}

// optional int32 page = 2;
inline bool cggivemoneyrecord::has_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cggivemoneyrecord::set_has_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cggivemoneyrecord::clear_has_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cggivemoneyrecord::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 cggivemoneyrecord::page() const {
  // @@protoc_insertion_point(field_get:NFMsg.cggivemoneyrecord.page)
  return page_;
}
inline void cggivemoneyrecord::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cggivemoneyrecord.page)
}

// -------------------------------------------------------------------

// gcgivemoneyrecord

// optional int32 result = 1;
inline bool gcgivemoneyrecord::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcgivemoneyrecord::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcgivemoneyrecord::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcgivemoneyrecord::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcgivemoneyrecord::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgivemoneyrecord.result)
  return result_;
}
inline void gcgivemoneyrecord::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcgivemoneyrecord.result)
}

// repeated .NFMsg.givemoneyrecord list = 2;
inline int gcgivemoneyrecord::list_size() const {
  return list_.size();
}
inline ::NFMsg::givemoneyrecord* gcgivemoneyrecord::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:NFMsg.gcgivemoneyrecord.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::NFMsg::givemoneyrecord >*
gcgivemoneyrecord::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:NFMsg.gcgivemoneyrecord.list)
  return &list_;
}
inline const ::NFMsg::givemoneyrecord& gcgivemoneyrecord::list(int index) const {
  // @@protoc_insertion_point(field_get:NFMsg.gcgivemoneyrecord.list)
  return list_.Get(index);
}
inline ::NFMsg::givemoneyrecord* gcgivemoneyrecord::add_list() {
  // @@protoc_insertion_point(field_add:NFMsg.gcgivemoneyrecord.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NFMsg::givemoneyrecord >&
gcgivemoneyrecord::list() const {
  // @@protoc_insertion_point(field_list:NFMsg.gcgivemoneyrecord.list)
  return list_;
}

// -------------------------------------------------------------------

// cgregistration

// optional int32 userid = 1;
inline bool cgregistration::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgregistration::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgregistration::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgregistration::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgregistration::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgregistration.userid)
  return userid_;
}
inline void cgregistration::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgregistration.userid)
}

// optional int32 optype = 2;
inline bool cgregistration::has_optype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgregistration::set_has_optype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgregistration::clear_has_optype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgregistration::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 cgregistration::optype() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgregistration.optype)
  return optype_;
}
inline void cgregistration::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgregistration.optype)
}

// -------------------------------------------------------------------

// gcregistration

// optional int32 result = 1;
inline bool gcregistration::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gcregistration::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gcregistration::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gcregistration::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcregistration::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcregistration.result)
  return result_;
}
inline void gcregistration::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcregistration.result)
}

// optional int32 userid = 2;
inline bool gcregistration::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gcregistration::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gcregistration::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gcregistration::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gcregistration::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcregistration.userid)
  return userid_;
}
inline void gcregistration::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcregistration.userid)
}

// optional string registration1 = 3;
inline bool gcregistration::has_registration1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcregistration::set_has_registration1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcregistration::clear_has_registration1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcregistration::clear_registration1() {
  registration1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_registration1();
}
inline const ::std::string& gcregistration::registration1() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcregistration.registration1)
  return registration1_.GetNoArena();
}
inline void gcregistration::set_registration1(const ::std::string& value) {
  set_has_registration1();
  registration1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.gcregistration.registration1)
}
#if LANG_CXX11
inline void gcregistration::set_registration1(::std::string&& value) {
  set_has_registration1();
  registration1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.gcregistration.registration1)
}
#endif
inline void gcregistration::set_registration1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_registration1();
  registration1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.gcregistration.registration1)
}
inline void gcregistration::set_registration1(const char* value, size_t size) {
  set_has_registration1();
  registration1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcregistration.registration1)
}
inline ::std::string* gcregistration::mutable_registration1() {
  set_has_registration1();
  // @@protoc_insertion_point(field_mutable:NFMsg.gcregistration.registration1)
  return registration1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gcregistration::release_registration1() {
  // @@protoc_insertion_point(field_release:NFMsg.gcregistration.registration1)
  if (!has_registration1()) {
    return NULL;
  }
  clear_has_registration1();
  return registration1_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gcregistration::set_allocated_registration1(::std::string* registration1) {
  if (registration1 != NULL) {
    set_has_registration1();
  } else {
    clear_has_registration1();
  }
  registration1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), registration1);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcregistration.registration1)
}

// optional string registration2 = 4;
inline bool gcregistration::has_registration2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcregistration::set_has_registration2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcregistration::clear_has_registration2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcregistration::clear_registration2() {
  registration2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_registration2();
}
inline const ::std::string& gcregistration::registration2() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcregistration.registration2)
  return registration2_.GetNoArena();
}
inline void gcregistration::set_registration2(const ::std::string& value) {
  set_has_registration2();
  registration2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.gcregistration.registration2)
}
#if LANG_CXX11
inline void gcregistration::set_registration2(::std::string&& value) {
  set_has_registration2();
  registration2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.gcregistration.registration2)
}
#endif
inline void gcregistration::set_registration2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_registration2();
  registration2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.gcregistration.registration2)
}
inline void gcregistration::set_registration2(const char* value, size_t size) {
  set_has_registration2();
  registration2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcregistration.registration2)
}
inline ::std::string* gcregistration::mutable_registration2() {
  set_has_registration2();
  // @@protoc_insertion_point(field_mutable:NFMsg.gcregistration.registration2)
  return registration2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gcregistration::release_registration2() {
  // @@protoc_insertion_point(field_release:NFMsg.gcregistration.registration2)
  if (!has_registration2()) {
    return NULL;
  }
  clear_has_registration2();
  return registration2_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gcregistration::set_allocated_registration2(::std::string* registration2) {
  if (registration2 != NULL) {
    set_has_registration2();
  } else {
    clear_has_registration2();
  }
  registration2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), registration2);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcregistration.registration2)
}

// optional string registration3 = 5;
inline bool gcregistration::has_registration3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcregistration::set_has_registration3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcregistration::clear_has_registration3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcregistration::clear_registration3() {
  registration3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_registration3();
}
inline const ::std::string& gcregistration::registration3() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcregistration.registration3)
  return registration3_.GetNoArena();
}
inline void gcregistration::set_registration3(const ::std::string& value) {
  set_has_registration3();
  registration3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NFMsg.gcregistration.registration3)
}
#if LANG_CXX11
inline void gcregistration::set_registration3(::std::string&& value) {
  set_has_registration3();
  registration3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NFMsg.gcregistration.registration3)
}
#endif
inline void gcregistration::set_registration3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_registration3();
  registration3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NFMsg.gcregistration.registration3)
}
inline void gcregistration::set_registration3(const char* value, size_t size) {
  set_has_registration3();
  registration3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NFMsg.gcregistration.registration3)
}
inline ::std::string* gcregistration::mutable_registration3() {
  set_has_registration3();
  // @@protoc_insertion_point(field_mutable:NFMsg.gcregistration.registration3)
  return registration3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* gcregistration::release_registration3() {
  // @@protoc_insertion_point(field_release:NFMsg.gcregistration.registration3)
  if (!has_registration3()) {
    return NULL;
  }
  clear_has_registration3();
  return registration3_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void gcregistration::set_allocated_registration3(::std::string* registration3) {
  if (registration3 != NULL) {
    set_has_registration3();
  } else {
    clear_has_registration3();
  }
  registration3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), registration3);
  // @@protoc_insertion_point(field_set_allocated:NFMsg.gcregistration.registration3)
}

// -------------------------------------------------------------------

// cgluckturntable

// optional int32 userid = 1;
inline bool cgluckturntable::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgluckturntable::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgluckturntable::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgluckturntable::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgluckturntable::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgluckturntable.userid)
  return userid_;
}
inline void cgluckturntable::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgluckturntable.userid)
}

// optional int32 optype = 2;
inline bool cgluckturntable::has_optype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgluckturntable::set_has_optype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgluckturntable::clear_has_optype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgluckturntable::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 cgluckturntable::optype() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgluckturntable.optype)
  return optype_;
}
inline void cgluckturntable::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgluckturntable.optype)
}

// -------------------------------------------------------------------

// gcluckturntable

// optional int32 result = 1;
inline bool gcluckturntable::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcluckturntable::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcluckturntable::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcluckturntable::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcluckturntable::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcluckturntable.result)
  return result_;
}
inline void gcluckturntable::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcluckturntable.result)
}

// optional int32 userid = 2;
inline bool gcluckturntable::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcluckturntable::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcluckturntable::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcluckturntable::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gcluckturntable::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcluckturntable.userid)
  return userid_;
}
inline void gcluckturntable::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcluckturntable.userid)
}

// optional int32 turnresult = 3;
inline bool gcluckturntable::has_turnresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcluckturntable::set_has_turnresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcluckturntable::clear_has_turnresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcluckturntable::clear_turnresult() {
  turnresult_ = 0;
  clear_has_turnresult();
}
inline ::google::protobuf::int32 gcluckturntable::turnresult() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcluckturntable.turnresult)
  return turnresult_;
}
inline void gcluckturntable::set_turnresult(::google::protobuf::int32 value) {
  set_has_turnresult();
  turnresult_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcluckturntable.turnresult)
}

// optional int32 turntablenum = 4;
inline bool gcluckturntable::has_turntablenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gcluckturntable::set_has_turntablenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gcluckturntable::clear_has_turntablenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gcluckturntable::clear_turntablenum() {
  turntablenum_ = 0;
  clear_has_turntablenum();
}
inline ::google::protobuf::int32 gcluckturntable::turntablenum() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcluckturntable.turntablenum)
  return turntablenum_;
}
inline void gcluckturntable::set_turntablenum(::google::protobuf::int32 value) {
  set_has_turntablenum();
  turntablenum_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcluckturntable.turntablenum)
}

// optional int32 bsignin = 5;
inline bool gcluckturntable::has_bsignin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gcluckturntable::set_has_bsignin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gcluckturntable::clear_has_bsignin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gcluckturntable::clear_bsignin() {
  bsignin_ = 0;
  clear_has_bsignin();
}
inline ::google::protobuf::int32 gcluckturntable::bsignin() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcluckturntable.bsignin)
  return bsignin_;
}
inline void gcluckturntable::set_bsignin(::google::protobuf::int32 value) {
  set_has_bsignin();
  bsignin_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcluckturntable.bsignin)
}

// optional int32 tengames = 6;
inline bool gcluckturntable::has_tengames() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gcluckturntable::set_has_tengames() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gcluckturntable::clear_has_tengames() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gcluckturntable::clear_tengames() {
  tengames_ = 0;
  clear_has_tengames();
}
inline ::google::protobuf::int32 gcluckturntable::tengames() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcluckturntable.tengames)
  return tengames_;
}
inline void gcluckturntable::set_tengames(::google::protobuf::int32 value) {
  set_has_tengames();
  tengames_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcluckturntable.tengames)
}

// optional int32 todayshare = 7;
inline bool gcluckturntable::has_todayshare() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gcluckturntable::set_has_todayshare() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gcluckturntable::clear_has_todayshare() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gcluckturntable::clear_todayshare() {
  todayshare_ = 0;
  clear_has_todayshare();
}
inline ::google::protobuf::int32 gcluckturntable::todayshare() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcluckturntable.todayshare)
  return todayshare_;
}
inline void gcluckturntable::set_todayshare(::google::protobuf::int32 value) {
  set_has_todayshare();
  todayshare_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcluckturntable.todayshare)
}

// -------------------------------------------------------------------

// cgupdateplayermoney

// optional int32 userid = 1;
inline bool cgupdateplayermoney::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgupdateplayermoney::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgupdateplayermoney::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgupdateplayermoney::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgupdateplayermoney::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgupdateplayermoney.userid)
  return userid_;
}
inline void cgupdateplayermoney::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgupdateplayermoney.userid)
}

// -------------------------------------------------------------------

// gcupdateplayermoney

// optional int32 result = 1;
inline bool gcupdateplayermoney::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcupdateplayermoney::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcupdateplayermoney::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcupdateplayermoney::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcupdateplayermoney::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdateplayermoney.result)
  return result_;
}
inline void gcupdateplayermoney::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayermoney.result)
}

// optional int32 userid = 2;
inline bool gcupdateplayermoney::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcupdateplayermoney::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcupdateplayermoney::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcupdateplayermoney::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gcupdateplayermoney::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdateplayermoney.userid)
  return userid_;
}
inline void gcupdateplayermoney::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayermoney.userid)
}

// optional int32 money = 3;
inline bool gcupdateplayermoney::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gcupdateplayermoney::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gcupdateplayermoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gcupdateplayermoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 gcupdateplayermoney::money() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcupdateplayermoney.money)
  return money_;
}
inline void gcupdateplayermoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcupdateplayermoney.money)
}

// -------------------------------------------------------------------

// cgaltersomeplayerinfo

// optional int32 userid = 1;
inline bool cgaltersomeplayerinfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cgaltersomeplayerinfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cgaltersomeplayerinfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cgaltersomeplayerinfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 cgaltersomeplayerinfo::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaltersomeplayerinfo.userid)
  return userid_;
}
inline void cgaltersomeplayerinfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaltersomeplayerinfo.userid)
}

// optional int32 optype = 2;
inline bool cgaltersomeplayerinfo::has_optype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cgaltersomeplayerinfo::set_has_optype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cgaltersomeplayerinfo::clear_has_optype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cgaltersomeplayerinfo::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::google::protobuf::int32 cgaltersomeplayerinfo::optype() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaltersomeplayerinfo.optype)
  return optype_;
}
inline void cgaltersomeplayerinfo::set_optype(::google::protobuf::int32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaltersomeplayerinfo.optype)
}

// optional int32 caninvite = 3;
inline bool cgaltersomeplayerinfo::has_caninvite() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void cgaltersomeplayerinfo::set_has_caninvite() {
  _has_bits_[0] |= 0x00000004u;
}
inline void cgaltersomeplayerinfo::clear_has_caninvite() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void cgaltersomeplayerinfo::clear_caninvite() {
  caninvite_ = 0;
  clear_has_caninvite();
}
inline ::google::protobuf::int32 cgaltersomeplayerinfo::caninvite() const {
  // @@protoc_insertion_point(field_get:NFMsg.cgaltersomeplayerinfo.caninvite)
  return caninvite_;
}
inline void cgaltersomeplayerinfo::set_caninvite(::google::protobuf::int32 value) {
  set_has_caninvite();
  caninvite_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.cgaltersomeplayerinfo.caninvite)
}

// -------------------------------------------------------------------

// gcaltersomeplayerinfo

// optional int32 result = 1;
inline bool gcaltersomeplayerinfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gcaltersomeplayerinfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gcaltersomeplayerinfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gcaltersomeplayerinfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 gcaltersomeplayerinfo::result() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcaltersomeplayerinfo.result)
  return result_;
}
inline void gcaltersomeplayerinfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcaltersomeplayerinfo.result)
}

// optional int32 userid = 2;
inline bool gcaltersomeplayerinfo::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gcaltersomeplayerinfo::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gcaltersomeplayerinfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gcaltersomeplayerinfo::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 gcaltersomeplayerinfo::userid() const {
  // @@protoc_insertion_point(field_get:NFMsg.gcaltersomeplayerinfo.userid)
  return userid_;
}
inline void gcaltersomeplayerinfo::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:NFMsg.gcaltersomeplayerinfo.userid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NFMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fhuman_2eproto
