// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_to_server_msg.proto

#include "server_to_server_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace NFMsg {
class NotifyGameChangeProxyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyGameChangeProxy>
      _instance;
} _NotifyGameChangeProxy_default_instance_;
class NotifyProxyChangeGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyProxyChangeGame>
      _instance;
} _NotifyProxyChangeGame_default_instance_;
class NotifyWorldPlayerDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyWorldPlayerDisconnect>
      _instance;
} _NotifyWorldPlayerDisconnect_default_instance_;
class NotifyGamePlayerDisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyGamePlayerDisconnect>
      _instance;
} _NotifyGamePlayerDisconnect_default_instance_;
class NotifyGamePlayerReconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyGamePlayerReconnect>
      _instance;
} _NotifyGamePlayerReconnect_default_instance_;
class NotifyGamePlayerReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyGamePlayerReport>
      _instance;
} _NotifyGamePlayerReport_default_instance_;
class NotifyProxyPacketMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotifyProxyPacketMsg>
      _instance;
} _NotifyProxyPacketMsg_default_instance_;
}  // namespace NFMsg
namespace protobuf_server_5fto_5fserver_5fmsg_2eproto {
static void InitDefaultsNotifyGameChangeProxy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_NotifyGameChangeProxy_default_instance_;
    new (ptr) ::NFMsg::NotifyGameChangeProxy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::NotifyGameChangeProxy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyGameChangeProxy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyGameChangeProxy}, {}};

static void InitDefaultsNotifyProxyChangeGame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_NotifyProxyChangeGame_default_instance_;
    new (ptr) ::NFMsg::NotifyProxyChangeGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::NotifyProxyChangeGame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyProxyChangeGame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyProxyChangeGame}, {}};

static void InitDefaultsNotifyWorldPlayerDisconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_NotifyWorldPlayerDisconnect_default_instance_;
    new (ptr) ::NFMsg::NotifyWorldPlayerDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::NotifyWorldPlayerDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyWorldPlayerDisconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyWorldPlayerDisconnect}, {}};

static void InitDefaultsNotifyGamePlayerDisconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_NotifyGamePlayerDisconnect_default_instance_;
    new (ptr) ::NFMsg::NotifyGamePlayerDisconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::NotifyGamePlayerDisconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyGamePlayerDisconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyGamePlayerDisconnect}, {}};

static void InitDefaultsNotifyGamePlayerReconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_NotifyGamePlayerReconnect_default_instance_;
    new (ptr) ::NFMsg::NotifyGamePlayerReconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::NotifyGamePlayerReconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyGamePlayerReconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyGamePlayerReconnect}, {}};

static void InitDefaultsNotifyGamePlayerReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_NotifyGamePlayerReport_default_instance_;
    new (ptr) ::NFMsg::NotifyGamePlayerReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::NotifyGamePlayerReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyGamePlayerReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyGamePlayerReport}, {}};

static void InitDefaultsNotifyProxyPacketMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_NotifyProxyPacketMsg_default_instance_;
    new (ptr) ::NFMsg::NotifyProxyPacketMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::NotifyProxyPacketMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotifyProxyPacketMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotifyProxyPacketMsg}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyGameChangeProxy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyProxyChangeGame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyWorldPlayerDisconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyGamePlayerDisconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyGamePlayerReconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyGamePlayerReport.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotifyProxyPacketMsg.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGameChangeProxy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGameChangeProxy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGameChangeProxy, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGameChangeProxy, proxy_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyChangeGame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyChangeGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyChangeGame, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyChangeGame, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyChangeGame, client_link_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyWorldPlayerDisconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyWorldPlayerDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyWorldPlayerDisconnect, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyWorldPlayerDisconnect, account_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerDisconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerDisconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerDisconnect, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerDisconnect, account_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReconnect, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReconnect, proxy_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReport, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyGamePlayerReport, ip_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyPacketMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyPacketMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyPacketMsg, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyPacketMsg, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::NotifyProxyPacketMsg, msg_),
  ~0u,
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::NFMsg::NotifyGameChangeProxy)},
  { 9, 17, sizeof(::NFMsg::NotifyProxyChangeGame)},
  { 20, 27, sizeof(::NFMsg::NotifyWorldPlayerDisconnect)},
  { 29, 36, sizeof(::NFMsg::NotifyGamePlayerDisconnect)},
  { 38, 45, sizeof(::NFMsg::NotifyGamePlayerReconnect)},
  { 47, 54, sizeof(::NFMsg::NotifyGamePlayerReport)},
  { 56, 64, sizeof(::NFMsg::NotifyProxyPacketMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_NotifyGameChangeProxy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_NotifyProxyChangeGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_NotifyWorldPlayerDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_NotifyGamePlayerDisconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_NotifyGamePlayerReconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_NotifyGamePlayerReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_NotifyProxyPacketMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "server_to_server_msg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032server_to_server_msg.proto\022\005NFMsg\":\n\025N"
      "otifyGameChangeProxy\022\017\n\007user_id\030\001 \001(\004\022\020\n"
      "\010proxy_id\030\002 \001(\r\"Q\n\025NotifyProxyChangeGame"
      "\022\017\n\007user_id\030\001 \001(\004\022\017\n\007game_id\030\002 \001(\r\022\026\n\016cl"
      "ient_link_id\030\003 \001(\r\"\?\n\033NotifyWorldPlayerD"
      "isconnect\022\017\n\007user_id\030\001 \001(\004\022\017\n\007account\030\002 "
      "\001(\t\">\n\032NotifyGamePlayerDisconnect\022\017\n\007use"
      "r_id\030\001 \001(\004\022\017\n\007account\030\002 \001(\t\">\n\031NotifyGam"
      "ePlayerReconnect\022\017\n\007user_id\030\001 \001(\004\022\020\n\010pro"
      "xy_id\030\002 \001(\r\"5\n\026NotifyGamePlayerReport\022\017\n"
      "\007user_id\030\001 \001(\004\022\n\n\002ip\030\002 \001(\t\"D\n\024NotifyProx"
      "yPacketMsg\022\017\n\007user_id\030\001 \003(\004\022\016\n\006msg_id\030\002 "
      "\001(\r\022\013\n\003msg\030\003 \001(\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 496);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_to_server_msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_server_5fto_5fserver_5fmsg_2eproto
namespace NFMsg {

// ===================================================================

void NotifyGameChangeProxy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyGameChangeProxy::kUserIdFieldNumber;
const int NotifyGameChangeProxy::kProxyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyGameChangeProxy::NotifyGameChangeProxy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGameChangeProxy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.NotifyGameChangeProxy)
}
NotifyGameChangeProxy::NotifyGameChangeProxy(const NotifyGameChangeProxy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&proxy_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(proxy_id_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.NotifyGameChangeProxy)
}

void NotifyGameChangeProxy::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proxy_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(proxy_id_));
}

NotifyGameChangeProxy::~NotifyGameChangeProxy() {
  // @@protoc_insertion_point(destructor:NFMsg.NotifyGameChangeProxy)
  SharedDtor();
}

void NotifyGameChangeProxy::SharedDtor() {
}

void NotifyGameChangeProxy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyGameChangeProxy::descriptor() {
  ::protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyGameChangeProxy& NotifyGameChangeProxy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGameChangeProxy.base);
  return *internal_default_instance();
}


void NotifyGameChangeProxy::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.NotifyGameChangeProxy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&user_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&proxy_id_) -
        reinterpret_cast<char*>(&user_id_)) + sizeof(proxy_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyGameChangeProxy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.NotifyGameChangeProxy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 proxy_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_proxy_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proxy_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.NotifyGameChangeProxy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.NotifyGameChangeProxy)
  return false;
#undef DO_
}

void NotifyGameChangeProxy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.NotifyGameChangeProxy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional uint32 proxy_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->proxy_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.NotifyGameChangeProxy)
}

::google::protobuf::uint8* NotifyGameChangeProxy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.NotifyGameChangeProxy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional uint32 proxy_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->proxy_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.NotifyGameChangeProxy)
  return target;
}

size_t NotifyGameChangeProxy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.NotifyGameChangeProxy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional uint32 proxy_id = 2;
    if (has_proxy_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proxy_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyGameChangeProxy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.NotifyGameChangeProxy)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyGameChangeProxy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyGameChangeProxy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.NotifyGameChangeProxy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.NotifyGameChangeProxy)
    MergeFrom(*source);
  }
}

void NotifyGameChangeProxy::MergeFrom(const NotifyGameChangeProxy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.NotifyGameChangeProxy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      proxy_id_ = from.proxy_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotifyGameChangeProxy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.NotifyGameChangeProxy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyGameChangeProxy::CopyFrom(const NotifyGameChangeProxy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.NotifyGameChangeProxy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyGameChangeProxy::IsInitialized() const {
  return true;
}

void NotifyGameChangeProxy::Swap(NotifyGameChangeProxy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyGameChangeProxy::InternalSwap(NotifyGameChangeProxy* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(proxy_id_, other->proxy_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyGameChangeProxy::GetMetadata() const {
  protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyProxyChangeGame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyProxyChangeGame::kUserIdFieldNumber;
const int NotifyProxyChangeGame::kGameIdFieldNumber;
const int NotifyProxyChangeGame::kClientLinkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyProxyChangeGame::NotifyProxyChangeGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyProxyChangeGame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.NotifyProxyChangeGame)
}
NotifyProxyChangeGame::NotifyProxyChangeGame(const NotifyProxyChangeGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_link_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(client_link_id_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.NotifyProxyChangeGame)
}

void NotifyProxyChangeGame::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_link_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(client_link_id_));
}

NotifyProxyChangeGame::~NotifyProxyChangeGame() {
  // @@protoc_insertion_point(destructor:NFMsg.NotifyProxyChangeGame)
  SharedDtor();
}

void NotifyProxyChangeGame::SharedDtor() {
}

void NotifyProxyChangeGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyProxyChangeGame::descriptor() {
  ::protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyProxyChangeGame& NotifyProxyChangeGame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyProxyChangeGame.base);
  return *internal_default_instance();
}


void NotifyProxyChangeGame::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.NotifyProxyChangeGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&user_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&client_link_id_) -
        reinterpret_cast<char*>(&user_id_)) + sizeof(client_link_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyProxyChangeGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.NotifyProxyChangeGame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_link_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_client_link_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_link_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.NotifyProxyChangeGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.NotifyProxyChangeGame)
  return false;
#undef DO_
}

void NotifyProxyChangeGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.NotifyProxyChangeGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional uint32 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->game_id(), output);
  }

  // optional uint32 client_link_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->client_link_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.NotifyProxyChangeGame)
}

::google::protobuf::uint8* NotifyProxyChangeGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.NotifyProxyChangeGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional uint32 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->game_id(), target);
  }

  // optional uint32 client_link_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->client_link_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.NotifyProxyChangeGame)
  return target;
}

size_t NotifyProxyChangeGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.NotifyProxyChangeGame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional uint32 game_id = 2;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_id());
    }

    // optional uint32 client_link_id = 3;
    if (has_client_link_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_link_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyProxyChangeGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.NotifyProxyChangeGame)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyProxyChangeGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyProxyChangeGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.NotifyProxyChangeGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.NotifyProxyChangeGame)
    MergeFrom(*source);
  }
}

void NotifyProxyChangeGame::MergeFrom(const NotifyProxyChangeGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.NotifyProxyChangeGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      client_link_id_ = from.client_link_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotifyProxyChangeGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.NotifyProxyChangeGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyProxyChangeGame::CopyFrom(const NotifyProxyChangeGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.NotifyProxyChangeGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyProxyChangeGame::IsInitialized() const {
  return true;
}

void NotifyProxyChangeGame::Swap(NotifyProxyChangeGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyProxyChangeGame::InternalSwap(NotifyProxyChangeGame* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(game_id_, other->game_id_);
  swap(client_link_id_, other->client_link_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyProxyChangeGame::GetMetadata() const {
  protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyWorldPlayerDisconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyWorldPlayerDisconnect::kUserIdFieldNumber;
const int NotifyWorldPlayerDisconnect::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyWorldPlayerDisconnect::NotifyWorldPlayerDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyWorldPlayerDisconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.NotifyWorldPlayerDisconnect)
}
NotifyWorldPlayerDisconnect::NotifyWorldPlayerDisconnect(const NotifyWorldPlayerDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.NotifyWorldPlayerDisconnect)
}

void NotifyWorldPlayerDisconnect::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
}

NotifyWorldPlayerDisconnect::~NotifyWorldPlayerDisconnect() {
  // @@protoc_insertion_point(destructor:NFMsg.NotifyWorldPlayerDisconnect)
  SharedDtor();
}

void NotifyWorldPlayerDisconnect::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NotifyWorldPlayerDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyWorldPlayerDisconnect::descriptor() {
  ::protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyWorldPlayerDisconnect& NotifyWorldPlayerDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyWorldPlayerDisconnect.base);
  return *internal_default_instance();
}


void NotifyWorldPlayerDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.NotifyWorldPlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    account_.ClearNonDefaultToEmptyNoArena();
  }
  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyWorldPlayerDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.NotifyWorldPlayerDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.NotifyWorldPlayerDisconnect.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.NotifyWorldPlayerDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.NotifyWorldPlayerDisconnect)
  return false;
#undef DO_
}

void NotifyWorldPlayerDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.NotifyWorldPlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.NotifyWorldPlayerDisconnect.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.NotifyWorldPlayerDisconnect)
}

::google::protobuf::uint8* NotifyWorldPlayerDisconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.NotifyWorldPlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.NotifyWorldPlayerDisconnect.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.NotifyWorldPlayerDisconnect)
  return target;
}

size_t NotifyWorldPlayerDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.NotifyWorldPlayerDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyWorldPlayerDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.NotifyWorldPlayerDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyWorldPlayerDisconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyWorldPlayerDisconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.NotifyWorldPlayerDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.NotifyWorldPlayerDisconnect)
    MergeFrom(*source);
  }
}

void NotifyWorldPlayerDisconnect::MergeFrom(const NotifyWorldPlayerDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.NotifyWorldPlayerDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotifyWorldPlayerDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.NotifyWorldPlayerDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyWorldPlayerDisconnect::CopyFrom(const NotifyWorldPlayerDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.NotifyWorldPlayerDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyWorldPlayerDisconnect::IsInitialized() const {
  return true;
}

void NotifyWorldPlayerDisconnect::Swap(NotifyWorldPlayerDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyWorldPlayerDisconnect::InternalSwap(NotifyWorldPlayerDisconnect* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyWorldPlayerDisconnect::GetMetadata() const {
  protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyGamePlayerDisconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyGamePlayerDisconnect::kUserIdFieldNumber;
const int NotifyGamePlayerDisconnect::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyGamePlayerDisconnect::NotifyGamePlayerDisconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGamePlayerDisconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.NotifyGamePlayerDisconnect)
}
NotifyGamePlayerDisconnect::NotifyGamePlayerDisconnect(const NotifyGamePlayerDisconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.NotifyGamePlayerDisconnect)
}

void NotifyGamePlayerDisconnect::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
}

NotifyGamePlayerDisconnect::~NotifyGamePlayerDisconnect() {
  // @@protoc_insertion_point(destructor:NFMsg.NotifyGamePlayerDisconnect)
  SharedDtor();
}

void NotifyGamePlayerDisconnect::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NotifyGamePlayerDisconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyGamePlayerDisconnect::descriptor() {
  ::protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyGamePlayerDisconnect& NotifyGamePlayerDisconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGamePlayerDisconnect.base);
  return *internal_default_instance();
}


void NotifyGamePlayerDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.NotifyGamePlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    account_.ClearNonDefaultToEmptyNoArena();
  }
  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyGamePlayerDisconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.NotifyGamePlayerDisconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.NotifyGamePlayerDisconnect.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.NotifyGamePlayerDisconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.NotifyGamePlayerDisconnect)
  return false;
#undef DO_
}

void NotifyGamePlayerDisconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.NotifyGamePlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.NotifyGamePlayerDisconnect.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.NotifyGamePlayerDisconnect)
}

::google::protobuf::uint8* NotifyGamePlayerDisconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.NotifyGamePlayerDisconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.NotifyGamePlayerDisconnect.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.NotifyGamePlayerDisconnect)
  return target;
}

size_t NotifyGamePlayerDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.NotifyGamePlayerDisconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyGamePlayerDisconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.NotifyGamePlayerDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyGamePlayerDisconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyGamePlayerDisconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.NotifyGamePlayerDisconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.NotifyGamePlayerDisconnect)
    MergeFrom(*source);
  }
}

void NotifyGamePlayerDisconnect::MergeFrom(const NotifyGamePlayerDisconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.NotifyGamePlayerDisconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotifyGamePlayerDisconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.NotifyGamePlayerDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyGamePlayerDisconnect::CopyFrom(const NotifyGamePlayerDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.NotifyGamePlayerDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyGamePlayerDisconnect::IsInitialized() const {
  return true;
}

void NotifyGamePlayerDisconnect::Swap(NotifyGamePlayerDisconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyGamePlayerDisconnect::InternalSwap(NotifyGamePlayerDisconnect* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyGamePlayerDisconnect::GetMetadata() const {
  protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyGamePlayerReconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyGamePlayerReconnect::kUserIdFieldNumber;
const int NotifyGamePlayerReconnect::kProxyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyGamePlayerReconnect::NotifyGamePlayerReconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGamePlayerReconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.NotifyGamePlayerReconnect)
}
NotifyGamePlayerReconnect::NotifyGamePlayerReconnect(const NotifyGamePlayerReconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&proxy_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(proxy_id_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.NotifyGamePlayerReconnect)
}

void NotifyGamePlayerReconnect::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proxy_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(proxy_id_));
}

NotifyGamePlayerReconnect::~NotifyGamePlayerReconnect() {
  // @@protoc_insertion_point(destructor:NFMsg.NotifyGamePlayerReconnect)
  SharedDtor();
}

void NotifyGamePlayerReconnect::SharedDtor() {
}

void NotifyGamePlayerReconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyGamePlayerReconnect::descriptor() {
  ::protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyGamePlayerReconnect& NotifyGamePlayerReconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGamePlayerReconnect.base);
  return *internal_default_instance();
}


void NotifyGamePlayerReconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.NotifyGamePlayerReconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&user_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&proxy_id_) -
        reinterpret_cast<char*>(&user_id_)) + sizeof(proxy_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyGamePlayerReconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.NotifyGamePlayerReconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 proxy_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_proxy_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proxy_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.NotifyGamePlayerReconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.NotifyGamePlayerReconnect)
  return false;
#undef DO_
}

void NotifyGamePlayerReconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.NotifyGamePlayerReconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional uint32 proxy_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->proxy_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.NotifyGamePlayerReconnect)
}

::google::protobuf::uint8* NotifyGamePlayerReconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.NotifyGamePlayerReconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional uint32 proxy_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->proxy_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.NotifyGamePlayerReconnect)
  return target;
}

size_t NotifyGamePlayerReconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.NotifyGamePlayerReconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional uint32 proxy_id = 2;
    if (has_proxy_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proxy_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyGamePlayerReconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.NotifyGamePlayerReconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyGamePlayerReconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyGamePlayerReconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.NotifyGamePlayerReconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.NotifyGamePlayerReconnect)
    MergeFrom(*source);
  }
}

void NotifyGamePlayerReconnect::MergeFrom(const NotifyGamePlayerReconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.NotifyGamePlayerReconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      proxy_id_ = from.proxy_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotifyGamePlayerReconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.NotifyGamePlayerReconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyGamePlayerReconnect::CopyFrom(const NotifyGamePlayerReconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.NotifyGamePlayerReconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyGamePlayerReconnect::IsInitialized() const {
  return true;
}

void NotifyGamePlayerReconnect::Swap(NotifyGamePlayerReconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyGamePlayerReconnect::InternalSwap(NotifyGamePlayerReconnect* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(proxy_id_, other->proxy_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyGamePlayerReconnect::GetMetadata() const {
  protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyGamePlayerReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyGamePlayerReport::kUserIdFieldNumber;
const int NotifyGamePlayerReport::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyGamePlayerReport::NotifyGamePlayerReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGamePlayerReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.NotifyGamePlayerReport)
}
NotifyGamePlayerReport::NotifyGamePlayerReport(const NotifyGamePlayerReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.NotifyGamePlayerReport)
}

void NotifyGamePlayerReport::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
}

NotifyGamePlayerReport::~NotifyGamePlayerReport() {
  // @@protoc_insertion_point(destructor:NFMsg.NotifyGamePlayerReport)
  SharedDtor();
}

void NotifyGamePlayerReport::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NotifyGamePlayerReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyGamePlayerReport::descriptor() {
  ::protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyGamePlayerReport& NotifyGamePlayerReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyGamePlayerReport.base);
  return *internal_default_instance();
}


void NotifyGamePlayerReport::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.NotifyGamePlayerReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ip_.ClearNonDefaultToEmptyNoArena();
  }
  user_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyGamePlayerReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.NotifyGamePlayerReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.NotifyGamePlayerReport.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.NotifyGamePlayerReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.NotifyGamePlayerReport)
  return false;
#undef DO_
}

void NotifyGamePlayerReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.NotifyGamePlayerReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional string ip = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.NotifyGamePlayerReport.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.NotifyGamePlayerReport)
}

::google::protobuf::uint8* NotifyGamePlayerReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.NotifyGamePlayerReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional string ip = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.NotifyGamePlayerReport.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.NotifyGamePlayerReport)
  return target;
}

size_t NotifyGamePlayerReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.NotifyGamePlayerReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyGamePlayerReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.NotifyGamePlayerReport)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyGamePlayerReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyGamePlayerReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.NotifyGamePlayerReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.NotifyGamePlayerReport)
    MergeFrom(*source);
  }
}

void NotifyGamePlayerReport::MergeFrom(const NotifyGamePlayerReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.NotifyGamePlayerReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotifyGamePlayerReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.NotifyGamePlayerReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyGamePlayerReport::CopyFrom(const NotifyGamePlayerReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.NotifyGamePlayerReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyGamePlayerReport::IsInitialized() const {
  return true;
}

void NotifyGamePlayerReport::Swap(NotifyGamePlayerReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyGamePlayerReport::InternalSwap(NotifyGamePlayerReport* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyGamePlayerReport::GetMetadata() const {
  protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotifyProxyPacketMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyProxyPacketMsg::kUserIdFieldNumber;
const int NotifyProxyPacketMsg::kMsgIdFieldNumber;
const int NotifyProxyPacketMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyProxyPacketMsg::NotifyProxyPacketMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyProxyPacketMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.NotifyProxyPacketMsg)
}
NotifyProxyPacketMsg::NotifyProxyPacketMsg(const NotifyProxyPacketMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      user_id_(from.user_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.NotifyProxyPacketMsg)
}

void NotifyProxyPacketMsg::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = 0u;
}

NotifyProxyPacketMsg::~NotifyProxyPacketMsg() {
  // @@protoc_insertion_point(destructor:NFMsg.NotifyProxyPacketMsg)
  SharedDtor();
}

void NotifyProxyPacketMsg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NotifyProxyPacketMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotifyProxyPacketMsg::descriptor() {
  ::protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyProxyPacketMsg& NotifyProxyPacketMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fto_5fserver_5fmsg_2eproto::scc_info_NotifyProxyPacketMsg.base);
  return *internal_default_instance();
}


void NotifyProxyPacketMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.NotifyProxyPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  msg_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NotifyProxyPacketMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.NotifyProxyPacketMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_user_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_user_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.NotifyProxyPacketMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.NotifyProxyPacketMsg)
  return false;
#undef DO_
}

void NotifyProxyPacketMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.NotifyProxyPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 user_id = 1;
  for (int i = 0, n = this->user_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->user_id(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_id(), output);
  }

  // optional bytes msg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.NotifyProxyPacketMsg)
}

::google::protobuf::uint8* NotifyProxyPacketMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.NotifyProxyPacketMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 user_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->user_id_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msg_id(), target);
  }

  // optional bytes msg = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.NotifyProxyPacketMsg)
  return target;
}

size_t NotifyProxyPacketMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.NotifyProxyPacketMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 user_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->user_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->user_id_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg());
    }

    // optional uint32 msg_id = 2;
    if (has_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyProxyPacketMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.NotifyProxyPacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyProxyPacketMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyProxyPacketMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.NotifyProxyPacketMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.NotifyProxyPacketMsg)
    MergeFrom(*source);
  }
}

void NotifyProxyPacketMsg::MergeFrom(const NotifyProxyPacketMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.NotifyProxyPacketMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_id_.MergeFrom(from.user_id_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_id_ = from.msg_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotifyProxyPacketMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.NotifyProxyPacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyProxyPacketMsg::CopyFrom(const NotifyProxyPacketMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.NotifyProxyPacketMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyProxyPacketMsg::IsInitialized() const {
  return true;
}

void NotifyProxyPacketMsg::Swap(NotifyProxyPacketMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyProxyPacketMsg::InternalSwap(NotifyProxyPacketMsg* other) {
  using std::swap;
  user_id_.InternalSwap(&other->user_id_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_id_, other->msg_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotifyProxyPacketMsg::GetMetadata() const {
  protobuf_server_5fto_5fserver_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fto_5fserver_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::NotifyGameChangeProxy* Arena::CreateMaybeMessage< ::NFMsg::NotifyGameChangeProxy >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::NotifyGameChangeProxy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::NotifyProxyChangeGame* Arena::CreateMaybeMessage< ::NFMsg::NotifyProxyChangeGame >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::NotifyProxyChangeGame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::NotifyWorldPlayerDisconnect* Arena::CreateMaybeMessage< ::NFMsg::NotifyWorldPlayerDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::NotifyWorldPlayerDisconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::NotifyGamePlayerDisconnect* Arena::CreateMaybeMessage< ::NFMsg::NotifyGamePlayerDisconnect >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::NotifyGamePlayerDisconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::NotifyGamePlayerReconnect* Arena::CreateMaybeMessage< ::NFMsg::NotifyGamePlayerReconnect >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::NotifyGamePlayerReconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::NotifyGamePlayerReport* Arena::CreateMaybeMessage< ::NFMsg::NotifyGamePlayerReport >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::NotifyGamePlayerReport >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::NotifyProxyPacketMsg* Arena::CreateMaybeMessage< ::NFMsg::NotifyProxyPacketMsg >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::NotifyProxyPacketMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
