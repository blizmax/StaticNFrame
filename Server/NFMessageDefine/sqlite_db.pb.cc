// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sqlite_db.proto

#include "sqlite_db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_sqlite_5fdb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sqlite_5fdb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_message_sqlite_base;
}  // namespace protobuf_sqlite_5fdb_2eproto
namespace proto {
namespace message {
class message_sqlite_baseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<message_sqlite_base>
      _instance;
} _message_sqlite_base_default_instance_;
class create_sqlite_tableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<create_sqlite_table>
      _instance;
} _create_sqlite_table_default_instance_;
class table_userDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<table_user>
      _instance;
} _table_user_default_instance_;
}  // namespace message
}  // namespace proto
namespace protobuf_sqlite_5fdb_2eproto {
static void InitDefaultsmessage_sqlite_base() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::message::_message_sqlite_base_default_instance_;
    new (ptr) ::proto::message::message_sqlite_base();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::message::message_sqlite_base::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_message_sqlite_base =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmessage_sqlite_base}, {}};

static void InitDefaultscreate_sqlite_table() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::message::_create_sqlite_table_default_instance_;
    new (ptr) ::proto::message::create_sqlite_table();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::message::create_sqlite_table::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_create_sqlite_table =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultscreate_sqlite_table}, {
      &protobuf_sqlite_5fdb_2eproto::scc_info_message_sqlite_base.base,}};

static void InitDefaultstable_user() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::message::_table_user_default_instance_;
    new (ptr) ::proto::message::table_user();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::message::table_user::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_table_user =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstable_user}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_message_sqlite_base.base);
  ::google::protobuf::internal::InitSCC(&scc_info_create_sqlite_table.base);
  ::google::protobuf::internal::InitSCC(&scc_info_table_user.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::message_sqlite_base, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::message_sqlite_base, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::message_sqlite_base, table_name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::create_sqlite_table, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::create_sqlite_table, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::create_sqlite_table, db_base_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::table_user, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::table_user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::message::table_user, user_table_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::proto::message::message_sqlite_base)},
  { 7, 13, sizeof(::proto::message::create_sqlite_table)},
  { 14, 20, sizeof(::proto::message::table_user)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::message::_message_sqlite_base_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::message::_create_sqlite_table_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::message::_table_user_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sqlite_db.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017sqlite_db.proto\022\rproto.message\")\n\023mess"
      "age_sqlite_base\022\022\n\ntable_name\030\001 \001(\t\"J\n\023c"
      "reate_sqlite_table\0223\n\007db_base\030\001 \001(\0132\".pr"
      "oto.message.message_sqlite_base\" \n\ntable"
      "_user\022\022\n\nuser_table\030\001 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 185);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sqlite_db.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sqlite_5fdb_2eproto
namespace proto {
namespace message {

// ===================================================================

void message_sqlite_base::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int message_sqlite_base::kTableNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

message_sqlite_base::message_sqlite_base()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sqlite_5fdb_2eproto::scc_info_message_sqlite_base.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.message.message_sqlite_base)
}
message_sqlite_base::message_sqlite_base(const message_sqlite_base& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_table_name()) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.message.message_sqlite_base)
}

void message_sqlite_base::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

message_sqlite_base::~message_sqlite_base() {
  // @@protoc_insertion_point(destructor:proto.message.message_sqlite_base)
  SharedDtor();
}

void message_sqlite_base::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void message_sqlite_base::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* message_sqlite_base::descriptor() {
  ::protobuf_sqlite_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sqlite_5fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const message_sqlite_base& message_sqlite_base::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sqlite_5fdb_2eproto::scc_info_message_sqlite_base.base);
  return *internal_default_instance();
}


void message_sqlite_base::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.message.message_sqlite_base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    table_name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool message_sqlite_base::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.message.message_sqlite_base)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.message.message_sqlite_base.table_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.message.message_sqlite_base)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.message.message_sqlite_base)
  return false;
#undef DO_
}

void message_sqlite_base::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.message.message_sqlite_base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.message.message_sqlite_base.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.message.message_sqlite_base)
}

::google::protobuf::uint8* message_sqlite_base::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.message.message_sqlite_base)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.message.message_sqlite_base.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.message.message_sqlite_base)
  return target;
}

size_t message_sqlite_base::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.message.message_sqlite_base)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string table_name = 1;
  if (has_table_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void message_sqlite_base::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.message.message_sqlite_base)
  GOOGLE_DCHECK_NE(&from, this);
  const message_sqlite_base* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const message_sqlite_base>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.message.message_sqlite_base)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.message.message_sqlite_base)
    MergeFrom(*source);
  }
}

void message_sqlite_base::MergeFrom(const message_sqlite_base& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.message.message_sqlite_base)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_table_name()) {
    set_has_table_name();
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
}

void message_sqlite_base::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.message.message_sqlite_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void message_sqlite_base::CopyFrom(const message_sqlite_base& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.message.message_sqlite_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool message_sqlite_base::IsInitialized() const {
  return true;
}

void message_sqlite_base::Swap(message_sqlite_base* other) {
  if (other == this) return;
  InternalSwap(other);
}
void message_sqlite_base::InternalSwap(message_sqlite_base* other) {
  using std::swap;
  table_name_.Swap(&other->table_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata message_sqlite_base::GetMetadata() const {
  protobuf_sqlite_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sqlite_5fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void create_sqlite_table::InitAsDefaultInstance() {
  ::proto::message::_create_sqlite_table_default_instance_._instance.get_mutable()->db_base_ = const_cast< ::proto::message::message_sqlite_base*>(
      ::proto::message::message_sqlite_base::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int create_sqlite_table::kDbBaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

create_sqlite_table::create_sqlite_table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sqlite_5fdb_2eproto::scc_info_create_sqlite_table.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.message.create_sqlite_table)
}
create_sqlite_table::create_sqlite_table(const create_sqlite_table& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_db_base()) {
    db_base_ = new ::proto::message::message_sqlite_base(*from.db_base_);
  } else {
    db_base_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.message.create_sqlite_table)
}

void create_sqlite_table::SharedCtor() {
  db_base_ = NULL;
}

create_sqlite_table::~create_sqlite_table() {
  // @@protoc_insertion_point(destructor:proto.message.create_sqlite_table)
  SharedDtor();
}

void create_sqlite_table::SharedDtor() {
  if (this != internal_default_instance()) delete db_base_;
}

void create_sqlite_table::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* create_sqlite_table::descriptor() {
  ::protobuf_sqlite_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sqlite_5fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const create_sqlite_table& create_sqlite_table::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sqlite_5fdb_2eproto::scc_info_create_sqlite_table.base);
  return *internal_default_instance();
}


void create_sqlite_table::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.message.create_sqlite_table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(db_base_ != NULL);
    db_base_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool create_sqlite_table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.message.create_sqlite_table)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.message.message_sqlite_base db_base = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_db_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.message.create_sqlite_table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.message.create_sqlite_table)
  return false;
#undef DO_
}

void create_sqlite_table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.message.create_sqlite_table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.message.message_sqlite_base db_base = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_db_base(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.message.create_sqlite_table)
}

::google::protobuf::uint8* create_sqlite_table::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.message.create_sqlite_table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.message.message_sqlite_base db_base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_db_base(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.message.create_sqlite_table)
  return target;
}

size_t create_sqlite_table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.message.create_sqlite_table)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .proto.message.message_sqlite_base db_base = 1;
  if (has_db_base()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *db_base_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void create_sqlite_table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.message.create_sqlite_table)
  GOOGLE_DCHECK_NE(&from, this);
  const create_sqlite_table* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const create_sqlite_table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.message.create_sqlite_table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.message.create_sqlite_table)
    MergeFrom(*source);
  }
}

void create_sqlite_table::MergeFrom(const create_sqlite_table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.message.create_sqlite_table)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_db_base()) {
    mutable_db_base()->::proto::message::message_sqlite_base::MergeFrom(from.db_base());
  }
}

void create_sqlite_table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.message.create_sqlite_table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void create_sqlite_table::CopyFrom(const create_sqlite_table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.message.create_sqlite_table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool create_sqlite_table::IsInitialized() const {
  return true;
}

void create_sqlite_table::Swap(create_sqlite_table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void create_sqlite_table::InternalSwap(create_sqlite_table* other) {
  using std::swap;
  swap(db_base_, other->db_base_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata create_sqlite_table::GetMetadata() const {
  protobuf_sqlite_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sqlite_5fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void table_user::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int table_user::kUserTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

table_user::table_user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sqlite_5fdb_2eproto::scc_info_table_user.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.message.table_user)
}
table_user::table_user(const table_user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_table()) {
    user_table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_table_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.message.table_user)
}

void table_user::SharedCtor() {
  user_table_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

table_user::~table_user() {
  // @@protoc_insertion_point(destructor:proto.message.table_user)
  SharedDtor();
}

void table_user::SharedDtor() {
  user_table_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void table_user::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* table_user::descriptor() {
  ::protobuf_sqlite_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sqlite_5fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const table_user& table_user::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sqlite_5fdb_2eproto::scc_info_table_user.base);
  return *internal_default_instance();
}


void table_user::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.message.table_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    user_table_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool table_user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.message.table_user)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_table()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_table().data(), static_cast<int>(this->user_table().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.message.table_user.user_table");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.message.table_user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.message.table_user)
  return false;
#undef DO_
}

void table_user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.message.table_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string user_table = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_table().data(), static_cast<int>(this->user_table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.message.table_user.user_table");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_table(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.message.table_user)
}

::google::protobuf::uint8* table_user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.message.table_user)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string user_table = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_table().data(), static_cast<int>(this->user_table().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.message.table_user.user_table");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_table(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.message.table_user)
  return target;
}

size_t table_user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.message.table_user)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string user_table = 1;
  if (has_user_table()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_table());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void table_user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.message.table_user)
  GOOGLE_DCHECK_NE(&from, this);
  const table_user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const table_user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.message.table_user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.message.table_user)
    MergeFrom(*source);
  }
}

void table_user::MergeFrom(const table_user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.message.table_user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_table()) {
    set_has_user_table();
    user_table_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_table_);
  }
}

void table_user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.message.table_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void table_user::CopyFrom(const table_user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.message.table_user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool table_user::IsInitialized() const {
  return true;
}

void table_user::Swap(table_user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void table_user::InternalSwap(table_user* other) {
  using std::swap;
  user_table_.Swap(&other->user_table_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata table_user::GetMetadata() const {
  protobuf_sqlite_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sqlite_5fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::message::message_sqlite_base* Arena::CreateMaybeMessage< ::proto::message::message_sqlite_base >(Arena* arena) {
  return Arena::CreateInternal< ::proto::message::message_sqlite_base >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::message::create_sqlite_table* Arena::CreateMaybeMessage< ::proto::message::create_sqlite_table >(Arena* arena) {
  return Arena::CreateInternal< ::proto::message::create_sqlite_table >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::message::table_user* Arena::CreateMaybeMessage< ::proto::message::table_user >(Arena* arena) {
  return Arena::CreateInternal< ::proto::message::table_user >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
