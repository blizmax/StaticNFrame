// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sqlite_db.proto

#ifndef PROTOBUF_INCLUDED_sqlite_5fdb_2eproto
#define PROTOBUF_INCLUDED_sqlite_5fdb_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_sqlite_5fdb_2eproto 

namespace protobuf_sqlite_5fdb_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_sqlite_5fdb_2eproto
namespace proto {
namespace message {
class create_sqlite_table;
class create_sqlite_tableDefaultTypeInternal;
extern create_sqlite_tableDefaultTypeInternal _create_sqlite_table_default_instance_;
class message_sqlite_base;
class message_sqlite_baseDefaultTypeInternal;
extern message_sqlite_baseDefaultTypeInternal _message_sqlite_base_default_instance_;
class plane_record_info;
class plane_record_infoDefaultTypeInternal;
extern plane_record_infoDefaultTypeInternal _plane_record_info_default_instance_;
class user_InOut_Record_Table;
class user_InOut_Record_TableDefaultTypeInternal;
extern user_InOut_Record_TableDefaultTypeInternal _user_InOut_Record_Table_default_instance_;
}  // namespace message
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::message::create_sqlite_table* Arena::CreateMaybeMessage<::proto::message::create_sqlite_table>(Arena*);
template<> ::proto::message::message_sqlite_base* Arena::CreateMaybeMessage<::proto::message::message_sqlite_base>(Arena*);
template<> ::proto::message::plane_record_info* Arena::CreateMaybeMessage<::proto::message::plane_record_info>(Arena*);
template<> ::proto::message::user_InOut_Record_Table* Arena::CreateMaybeMessage<::proto::message::user_InOut_Record_Table>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace message {

// ===================================================================

class message_sqlite_base : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.message.message_sqlite_base) */ {
 public:
  message_sqlite_base();
  virtual ~message_sqlite_base();

  message_sqlite_base(const message_sqlite_base& from);

  inline message_sqlite_base& operator=(const message_sqlite_base& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  message_sqlite_base(message_sqlite_base&& from) noexcept
    : message_sqlite_base() {
    *this = ::std::move(from);
  }

  inline message_sqlite_base& operator=(message_sqlite_base&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const message_sqlite_base& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const message_sqlite_base* internal_default_instance() {
    return reinterpret_cast<const message_sqlite_base*>(
               &_message_sqlite_base_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(message_sqlite_base* other);
  friend void swap(message_sqlite_base& a, message_sqlite_base& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline message_sqlite_base* New() const final {
    return CreateMaybeMessage<message_sqlite_base>(NULL);
  }

  message_sqlite_base* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<message_sqlite_base>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const message_sqlite_base& from);
  void MergeFrom(const message_sqlite_base& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(message_sqlite_base* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string table_name = 1;
  bool has_table_name() const;
  void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& table_name() const;
  void set_table_name(const ::std::string& value);
  #if LANG_CXX11
  void set_table_name(::std::string&& value);
  #endif
  void set_table_name(const char* value);
  void set_table_name(const char* value, size_t size);
  ::std::string* mutable_table_name();
  ::std::string* release_table_name();
  void set_allocated_table_name(::std::string* table_name);

  // @@protoc_insertion_point(class_scope:proto.message.message_sqlite_base)
 private:
  void set_has_table_name();
  void clear_has_table_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr table_name_;
  friend struct ::protobuf_sqlite_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_sqlite_table : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.message.create_sqlite_table) */ {
 public:
  create_sqlite_table();
  virtual ~create_sqlite_table();

  create_sqlite_table(const create_sqlite_table& from);

  inline create_sqlite_table& operator=(const create_sqlite_table& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  create_sqlite_table(create_sqlite_table&& from) noexcept
    : create_sqlite_table() {
    *this = ::std::move(from);
  }

  inline create_sqlite_table& operator=(create_sqlite_table&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_sqlite_table& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const create_sqlite_table* internal_default_instance() {
    return reinterpret_cast<const create_sqlite_table*>(
               &_create_sqlite_table_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(create_sqlite_table* other);
  friend void swap(create_sqlite_table& a, create_sqlite_table& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline create_sqlite_table* New() const final {
    return CreateMaybeMessage<create_sqlite_table>(NULL);
  }

  create_sqlite_table* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<create_sqlite_table>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const create_sqlite_table& from);
  void MergeFrom(const create_sqlite_table& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(create_sqlite_table* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.message.message_sqlite_base db_base = 1;
  bool has_db_base() const;
  void clear_db_base();
  static const int kDbBaseFieldNumber = 1;
  private:
  const ::proto::message::message_sqlite_base& _internal_db_base() const;
  public:
  const ::proto::message::message_sqlite_base& db_base() const;
  ::proto::message::message_sqlite_base* release_db_base();
  ::proto::message::message_sqlite_base* mutable_db_base();
  void set_allocated_db_base(::proto::message::message_sqlite_base* db_base);

  // @@protoc_insertion_point(class_scope:proto.message.create_sqlite_table)
 private:
  void set_has_db_base();
  void clear_has_db_base();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::message::message_sqlite_base* db_base_;
  friend struct ::protobuf_sqlite_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class user_InOut_Record_Table : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.message.user_InOut_Record_Table) */ {
 public:
  user_InOut_Record_Table();
  virtual ~user_InOut_Record_Table();

  user_InOut_Record_Table(const user_InOut_Record_Table& from);

  inline user_InOut_Record_Table& operator=(const user_InOut_Record_Table& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  user_InOut_Record_Table(user_InOut_Record_Table&& from) noexcept
    : user_InOut_Record_Table() {
    *this = ::std::move(from);
  }

  inline user_InOut_Record_Table& operator=(user_InOut_Record_Table&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_InOut_Record_Table& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const user_InOut_Record_Table* internal_default_instance() {
    return reinterpret_cast<const user_InOut_Record_Table*>(
               &_user_InOut_Record_Table_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(user_InOut_Record_Table* other);
  friend void swap(user_InOut_Record_Table& a, user_InOut_Record_Table& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline user_InOut_Record_Table* New() const final {
    return CreateMaybeMessage<user_InOut_Record_Table>(NULL);
  }

  user_InOut_Record_Table* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<user_InOut_Record_Table>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const user_InOut_Record_Table& from);
  void MergeFrom(const user_InOut_Record_Table& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(user_InOut_Record_Table* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 RecordID = 2;
  bool has_recordid() const;
  void clear_recordid();
  static const int kRecordIDFieldNumber = 2;
  ::google::protobuf::uint32 recordid() const;
  void set_recordid(::google::protobuf::uint32 value);

  // optional uint64 ActorDBID = 4;
  bool has_actordbid() const;
  void clear_actordbid();
  static const int kActorDBIDFieldNumber = 4;
  ::google::protobuf::uint64 actordbid() const;
  void set_actordbid(::google::protobuf::uint64 value);

  // optional uint64 EnterTime = 5;
  bool has_entertime() const;
  void clear_entertime();
  static const int kEnterTimeFieldNumber = 5;
  ::google::protobuf::uint64 entertime() const;
  void set_entertime(::google::protobuf::uint64 value);

  // optional uint64 LeaveTime = 6;
  bool has_leavetime() const;
  void clear_leavetime();
  static const int kLeaveTimeFieldNumber = 6;
  ::google::protobuf::uint64 leavetime() const;
  void set_leavetime(::google::protobuf::uint64 value);

  // optional int64 EnterScore = 7;
  bool has_enterscore() const;
  void clear_enterscore();
  static const int kEnterScoreFieldNumber = 7;
  ::google::protobuf::int64 enterscore() const;
  void set_enterscore(::google::protobuf::int64 value);

  // optional int64 LeaveScore = 8;
  bool has_leavescore() const;
  void clear_leavescore();
  static const int kLeaveScoreFieldNumber = 8;
  ::google::protobuf::int64 leavescore() const;
  void set_leavescore(::google::protobuf::int64 value);

  // optional int64 ChangeScore = 9;
  bool has_changescore() const;
  void clear_changescore();
  static const int kChangeScoreFieldNumber = 9;
  ::google::protobuf::int64 changescore() const;
  void set_changescore(::google::protobuf::int64 value);

  // optional int64 TotalWinScore = 10;
  bool has_totalwinscore() const;
  void clear_totalwinscore();
  static const int kTotalWinScoreFieldNumber = 10;
  ::google::protobuf::int64 totalwinscore() const;
  void set_totalwinscore(::google::protobuf::int64 value);

  // optional int64 TotalLostScore = 11;
  bool has_totallostscore() const;
  void clear_totallostscore();
  static const int kTotalLostScoreFieldNumber = 11;
  ::google::protobuf::int64 totallostscore() const;
  void set_totallostscore(::google::protobuf::int64 value);

  // optional int64 TotalWinHBQCount = 12;
  bool has_totalwinhbqcount() const;
  void clear_totalwinhbqcount();
  static const int kTotalWinHBQCountFieldNumber = 12;
  ::google::protobuf::int64 totalwinhbqcount() const;
  void set_totalwinhbqcount(::google::protobuf::int64 value);

  // optional int64 TotalWinBoxCount = 13;
  bool has_totalwinboxcount() const;
  void clear_totalwinboxcount();
  static const int kTotalWinBoxCountFieldNumber = 13;
  ::google::protobuf::int64 totalwinboxcount() const;
  void set_totalwinboxcount(::google::protobuf::int64 value);

  // optional int64 TotalWinDrawCount = 14;
  bool has_totalwindrawcount() const;
  void clear_totalwindrawcount();
  static const int kTotalWinDrawCountFieldNumber = 14;
  ::google::protobuf::int64 totalwindrawcount() const;
  void set_totalwindrawcount(::google::protobuf::int64 value);

  // optional int64 TotalShopingSocre = 15;
  bool has_totalshopingsocre() const;
  void clear_totalshopingsocre();
  static const int kTotalShopingSocreFieldNumber = 15;
  ::google::protobuf::int64 totalshopingsocre() const;
  void set_totalshopingsocre(::google::protobuf::int64 value);

  // optional uint32 ServerID = 3;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIDFieldNumber = 3;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.message.user_InOut_Record_Table)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_recordid();
  void clear_has_recordid();
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_actordbid();
  void clear_has_actordbid();
  void set_has_entertime();
  void clear_has_entertime();
  void set_has_leavetime();
  void clear_has_leavetime();
  void set_has_enterscore();
  void clear_has_enterscore();
  void set_has_leavescore();
  void clear_has_leavescore();
  void set_has_changescore();
  void clear_has_changescore();
  void set_has_totalwinscore();
  void clear_has_totalwinscore();
  void set_has_totallostscore();
  void clear_has_totallostscore();
  void set_has_totalwinhbqcount();
  void clear_has_totalwinhbqcount();
  void set_has_totalwinboxcount();
  void clear_has_totalwinboxcount();
  void set_has_totalwindrawcount();
  void clear_has_totalwindrawcount();
  void set_has_totalshopingsocre();
  void clear_has_totalshopingsocre();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 recordid_;
  ::google::protobuf::uint64 actordbid_;
  ::google::protobuf::uint64 entertime_;
  ::google::protobuf::uint64 leavetime_;
  ::google::protobuf::int64 enterscore_;
  ::google::protobuf::int64 leavescore_;
  ::google::protobuf::int64 changescore_;
  ::google::protobuf::int64 totalwinscore_;
  ::google::protobuf::int64 totallostscore_;
  ::google::protobuf::int64 totalwinhbqcount_;
  ::google::protobuf::int64 totalwinboxcount_;
  ::google::protobuf::int64 totalwindrawcount_;
  ::google::protobuf::int64 totalshopingsocre_;
  ::google::protobuf::uint32 serverid_;
  friend struct ::protobuf_sqlite_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class plane_record_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.message.plane_record_info) */ {
 public:
  plane_record_info();
  virtual ~plane_record_info();

  plane_record_info(const plane_record_info& from);

  inline plane_record_info& operator=(const plane_record_info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  plane_record_info(plane_record_info&& from) noexcept
    : plane_record_info() {
    *this = ::std::move(from);
  }

  inline plane_record_info& operator=(plane_record_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const plane_record_info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const plane_record_info* internal_default_instance() {
    return reinterpret_cast<const plane_record_info*>(
               &_plane_record_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(plane_record_info* other);
  friend void swap(plane_record_info& a, plane_record_info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline plane_record_info* New() const final {
    return CreateMaybeMessage<plane_record_info>(NULL);
  }

  plane_record_info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<plane_record_info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const plane_record_info& from);
  void MergeFrom(const plane_record_info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(plane_record_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserInOutRecord = 1;
  bool has_userinoutrecord() const;
  void clear_userinoutrecord();
  static const int kUserInOutRecordFieldNumber = 1;
  const ::std::string& userinoutrecord() const;
  void set_userinoutrecord(const ::std::string& value);
  #if LANG_CXX11
  void set_userinoutrecord(::std::string&& value);
  #endif
  void set_userinoutrecord(const char* value);
  void set_userinoutrecord(const char* value, size_t size);
  ::std::string* mutable_userinoutrecord();
  ::std::string* release_userinoutrecord();
  void set_allocated_userinoutrecord(::std::string* userinoutrecord);

  // optional .proto.message.user_InOut_Record_Table db_fields = 2;
  bool has_db_fields() const;
  void clear_db_fields();
  static const int kDbFieldsFieldNumber = 2;
  private:
  const ::proto::message::user_InOut_Record_Table& _internal_db_fields() const;
  public:
  const ::proto::message::user_InOut_Record_Table& db_fields() const;
  ::proto::message::user_InOut_Record_Table* release_db_fields();
  ::proto::message::user_InOut_Record_Table* mutable_db_fields();
  void set_allocated_db_fields(::proto::message::user_InOut_Record_Table* db_fields);

  // @@protoc_insertion_point(class_scope:proto.message.plane_record_info)
 private:
  void set_has_userinoutrecord();
  void clear_has_userinoutrecord();
  void set_has_db_fields();
  void clear_has_db_fields();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userinoutrecord_;
  ::proto::message::user_InOut_Record_Table* db_fields_;
  friend struct ::protobuf_sqlite_5fdb_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// message_sqlite_base

// optional string table_name = 1;
inline bool message_sqlite_base::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void message_sqlite_base::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void message_sqlite_base::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void message_sqlite_base::clear_table_name() {
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_table_name();
}
inline const ::std::string& message_sqlite_base::table_name() const {
  // @@protoc_insertion_point(field_get:proto.message.message_sqlite_base.table_name)
  return table_name_.GetNoArena();
}
inline void message_sqlite_base::set_table_name(const ::std::string& value) {
  set_has_table_name();
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.message.message_sqlite_base.table_name)
}
#if LANG_CXX11
inline void message_sqlite_base::set_table_name(::std::string&& value) {
  set_has_table_name();
  table_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.message.message_sqlite_base.table_name)
}
#endif
inline void message_sqlite_base::set_table_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_table_name();
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.message.message_sqlite_base.table_name)
}
inline void message_sqlite_base::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.message.message_sqlite_base.table_name)
}
inline ::std::string* message_sqlite_base::mutable_table_name() {
  set_has_table_name();
  // @@protoc_insertion_point(field_mutable:proto.message.message_sqlite_base.table_name)
  return table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* message_sqlite_base::release_table_name() {
  // @@protoc_insertion_point(field_release:proto.message.message_sqlite_base.table_name)
  if (!has_table_name()) {
    return NULL;
  }
  clear_has_table_name();
  return table_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void message_sqlite_base::set_allocated_table_name(::std::string* table_name) {
  if (table_name != NULL) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
  table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_name);
  // @@protoc_insertion_point(field_set_allocated:proto.message.message_sqlite_base.table_name)
}

// -------------------------------------------------------------------

// create_sqlite_table

// optional .proto.message.message_sqlite_base db_base = 1;
inline bool create_sqlite_table::has_db_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_sqlite_table::set_has_db_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_sqlite_table::clear_has_db_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_sqlite_table::clear_db_base() {
  if (db_base_ != NULL) db_base_->Clear();
  clear_has_db_base();
}
inline const ::proto::message::message_sqlite_base& create_sqlite_table::_internal_db_base() const {
  return *db_base_;
}
inline const ::proto::message::message_sqlite_base& create_sqlite_table::db_base() const {
  const ::proto::message::message_sqlite_base* p = db_base_;
  // @@protoc_insertion_point(field_get:proto.message.create_sqlite_table.db_base)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::message::message_sqlite_base*>(
      &::proto::message::_message_sqlite_base_default_instance_);
}
inline ::proto::message::message_sqlite_base* create_sqlite_table::release_db_base() {
  // @@protoc_insertion_point(field_release:proto.message.create_sqlite_table.db_base)
  clear_has_db_base();
  ::proto::message::message_sqlite_base* temp = db_base_;
  db_base_ = NULL;
  return temp;
}
inline ::proto::message::message_sqlite_base* create_sqlite_table::mutable_db_base() {
  set_has_db_base();
  if (db_base_ == NULL) {
    auto* p = CreateMaybeMessage<::proto::message::message_sqlite_base>(GetArenaNoVirtual());
    db_base_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.message.create_sqlite_table.db_base)
  return db_base_;
}
inline void create_sqlite_table::set_allocated_db_base(::proto::message::message_sqlite_base* db_base) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete db_base_;
  }
  if (db_base) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      db_base = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, db_base, submessage_arena);
    }
    set_has_db_base();
  } else {
    clear_has_db_base();
  }
  db_base_ = db_base;
  // @@protoc_insertion_point(field_set_allocated:proto.message.create_sqlite_table.db_base)
}

// -------------------------------------------------------------------

// user_InOut_Record_Table

// optional uint32 ID = 1;
inline bool user_InOut_Record_Table::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_InOut_Record_Table::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_InOut_Record_Table::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_InOut_Record_Table::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 user_InOut_Record_Table::id() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.ID)
  return id_;
}
inline void user_InOut_Record_Table::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.ID)
}

// optional uint32 RecordID = 2;
inline bool user_InOut_Record_Table::has_recordid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_InOut_Record_Table::set_has_recordid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_InOut_Record_Table::clear_has_recordid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_InOut_Record_Table::clear_recordid() {
  recordid_ = 0u;
  clear_has_recordid();
}
inline ::google::protobuf::uint32 user_InOut_Record_Table::recordid() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.RecordID)
  return recordid_;
}
inline void user_InOut_Record_Table::set_recordid(::google::protobuf::uint32 value) {
  set_has_recordid();
  recordid_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.RecordID)
}

// optional uint32 ServerID = 3;
inline bool user_InOut_Record_Table::has_serverid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void user_InOut_Record_Table::set_has_serverid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void user_InOut_Record_Table::clear_has_serverid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void user_InOut_Record_Table::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 user_InOut_Record_Table::serverid() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.ServerID)
  return serverid_;
}
inline void user_InOut_Record_Table::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.ServerID)
}

// optional uint64 ActorDBID = 4;
inline bool user_InOut_Record_Table::has_actordbid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_InOut_Record_Table::set_has_actordbid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_InOut_Record_Table::clear_has_actordbid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_InOut_Record_Table::clear_actordbid() {
  actordbid_ = GOOGLE_ULONGLONG(0);
  clear_has_actordbid();
}
inline ::google::protobuf::uint64 user_InOut_Record_Table::actordbid() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.ActorDBID)
  return actordbid_;
}
inline void user_InOut_Record_Table::set_actordbid(::google::protobuf::uint64 value) {
  set_has_actordbid();
  actordbid_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.ActorDBID)
}

// optional uint64 EnterTime = 5;
inline bool user_InOut_Record_Table::has_entertime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_InOut_Record_Table::set_has_entertime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_InOut_Record_Table::clear_has_entertime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_InOut_Record_Table::clear_entertime() {
  entertime_ = GOOGLE_ULONGLONG(0);
  clear_has_entertime();
}
inline ::google::protobuf::uint64 user_InOut_Record_Table::entertime() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.EnterTime)
  return entertime_;
}
inline void user_InOut_Record_Table::set_entertime(::google::protobuf::uint64 value) {
  set_has_entertime();
  entertime_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.EnterTime)
}

// optional uint64 LeaveTime = 6;
inline bool user_InOut_Record_Table::has_leavetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_InOut_Record_Table::set_has_leavetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_InOut_Record_Table::clear_has_leavetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_InOut_Record_Table::clear_leavetime() {
  leavetime_ = GOOGLE_ULONGLONG(0);
  clear_has_leavetime();
}
inline ::google::protobuf::uint64 user_InOut_Record_Table::leavetime() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.LeaveTime)
  return leavetime_;
}
inline void user_InOut_Record_Table::set_leavetime(::google::protobuf::uint64 value) {
  set_has_leavetime();
  leavetime_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.LeaveTime)
}

// optional int64 EnterScore = 7;
inline bool user_InOut_Record_Table::has_enterscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_InOut_Record_Table::set_has_enterscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_InOut_Record_Table::clear_has_enterscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_InOut_Record_Table::clear_enterscore() {
  enterscore_ = GOOGLE_LONGLONG(0);
  clear_has_enterscore();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::enterscore() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.EnterScore)
  return enterscore_;
}
inline void user_InOut_Record_Table::set_enterscore(::google::protobuf::int64 value) {
  set_has_enterscore();
  enterscore_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.EnterScore)
}

// optional int64 LeaveScore = 8;
inline bool user_InOut_Record_Table::has_leavescore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void user_InOut_Record_Table::set_has_leavescore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void user_InOut_Record_Table::clear_has_leavescore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void user_InOut_Record_Table::clear_leavescore() {
  leavescore_ = GOOGLE_LONGLONG(0);
  clear_has_leavescore();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::leavescore() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.LeaveScore)
  return leavescore_;
}
inline void user_InOut_Record_Table::set_leavescore(::google::protobuf::int64 value) {
  set_has_leavescore();
  leavescore_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.LeaveScore)
}

// optional int64 ChangeScore = 9;
inline bool user_InOut_Record_Table::has_changescore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void user_InOut_Record_Table::set_has_changescore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void user_InOut_Record_Table::clear_has_changescore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void user_InOut_Record_Table::clear_changescore() {
  changescore_ = GOOGLE_LONGLONG(0);
  clear_has_changescore();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::changescore() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.ChangeScore)
  return changescore_;
}
inline void user_InOut_Record_Table::set_changescore(::google::protobuf::int64 value) {
  set_has_changescore();
  changescore_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.ChangeScore)
}

// optional int64 TotalWinScore = 10;
inline bool user_InOut_Record_Table::has_totalwinscore() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void user_InOut_Record_Table::set_has_totalwinscore() {
  _has_bits_[0] |= 0x00000100u;
}
inline void user_InOut_Record_Table::clear_has_totalwinscore() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void user_InOut_Record_Table::clear_totalwinscore() {
  totalwinscore_ = GOOGLE_LONGLONG(0);
  clear_has_totalwinscore();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::totalwinscore() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.TotalWinScore)
  return totalwinscore_;
}
inline void user_InOut_Record_Table::set_totalwinscore(::google::protobuf::int64 value) {
  set_has_totalwinscore();
  totalwinscore_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.TotalWinScore)
}

// optional int64 TotalLostScore = 11;
inline bool user_InOut_Record_Table::has_totallostscore() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void user_InOut_Record_Table::set_has_totallostscore() {
  _has_bits_[0] |= 0x00000200u;
}
inline void user_InOut_Record_Table::clear_has_totallostscore() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void user_InOut_Record_Table::clear_totallostscore() {
  totallostscore_ = GOOGLE_LONGLONG(0);
  clear_has_totallostscore();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::totallostscore() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.TotalLostScore)
  return totallostscore_;
}
inline void user_InOut_Record_Table::set_totallostscore(::google::protobuf::int64 value) {
  set_has_totallostscore();
  totallostscore_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.TotalLostScore)
}

// optional int64 TotalWinHBQCount = 12;
inline bool user_InOut_Record_Table::has_totalwinhbqcount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void user_InOut_Record_Table::set_has_totalwinhbqcount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void user_InOut_Record_Table::clear_has_totalwinhbqcount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void user_InOut_Record_Table::clear_totalwinhbqcount() {
  totalwinhbqcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalwinhbqcount();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::totalwinhbqcount() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.TotalWinHBQCount)
  return totalwinhbqcount_;
}
inline void user_InOut_Record_Table::set_totalwinhbqcount(::google::protobuf::int64 value) {
  set_has_totalwinhbqcount();
  totalwinhbqcount_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.TotalWinHBQCount)
}

// optional int64 TotalWinBoxCount = 13;
inline bool user_InOut_Record_Table::has_totalwinboxcount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void user_InOut_Record_Table::set_has_totalwinboxcount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void user_InOut_Record_Table::clear_has_totalwinboxcount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void user_InOut_Record_Table::clear_totalwinboxcount() {
  totalwinboxcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalwinboxcount();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::totalwinboxcount() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.TotalWinBoxCount)
  return totalwinboxcount_;
}
inline void user_InOut_Record_Table::set_totalwinboxcount(::google::protobuf::int64 value) {
  set_has_totalwinboxcount();
  totalwinboxcount_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.TotalWinBoxCount)
}

// optional int64 TotalWinDrawCount = 14;
inline bool user_InOut_Record_Table::has_totalwindrawcount() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void user_InOut_Record_Table::set_has_totalwindrawcount() {
  _has_bits_[0] |= 0x00001000u;
}
inline void user_InOut_Record_Table::clear_has_totalwindrawcount() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void user_InOut_Record_Table::clear_totalwindrawcount() {
  totalwindrawcount_ = GOOGLE_LONGLONG(0);
  clear_has_totalwindrawcount();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::totalwindrawcount() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.TotalWinDrawCount)
  return totalwindrawcount_;
}
inline void user_InOut_Record_Table::set_totalwindrawcount(::google::protobuf::int64 value) {
  set_has_totalwindrawcount();
  totalwindrawcount_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.TotalWinDrawCount)
}

// optional int64 TotalShopingSocre = 15;
inline bool user_InOut_Record_Table::has_totalshopingsocre() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void user_InOut_Record_Table::set_has_totalshopingsocre() {
  _has_bits_[0] |= 0x00002000u;
}
inline void user_InOut_Record_Table::clear_has_totalshopingsocre() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void user_InOut_Record_Table::clear_totalshopingsocre() {
  totalshopingsocre_ = GOOGLE_LONGLONG(0);
  clear_has_totalshopingsocre();
}
inline ::google::protobuf::int64 user_InOut_Record_Table::totalshopingsocre() const {
  // @@protoc_insertion_point(field_get:proto.message.user_InOut_Record_Table.TotalShopingSocre)
  return totalshopingsocre_;
}
inline void user_InOut_Record_Table::set_totalshopingsocre(::google::protobuf::int64 value) {
  set_has_totalshopingsocre();
  totalshopingsocre_ = value;
  // @@protoc_insertion_point(field_set:proto.message.user_InOut_Record_Table.TotalShopingSocre)
}

// -------------------------------------------------------------------

// plane_record_info

// optional string UserInOutRecord = 1;
inline bool plane_record_info::has_userinoutrecord() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void plane_record_info::set_has_userinoutrecord() {
  _has_bits_[0] |= 0x00000001u;
}
inline void plane_record_info::clear_has_userinoutrecord() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void plane_record_info::clear_userinoutrecord() {
  userinoutrecord_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userinoutrecord();
}
inline const ::std::string& plane_record_info::userinoutrecord() const {
  // @@protoc_insertion_point(field_get:proto.message.plane_record_info.UserInOutRecord)
  return userinoutrecord_.GetNoArena();
}
inline void plane_record_info::set_userinoutrecord(const ::std::string& value) {
  set_has_userinoutrecord();
  userinoutrecord_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.message.plane_record_info.UserInOutRecord)
}
#if LANG_CXX11
inline void plane_record_info::set_userinoutrecord(::std::string&& value) {
  set_has_userinoutrecord();
  userinoutrecord_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.message.plane_record_info.UserInOutRecord)
}
#endif
inline void plane_record_info::set_userinoutrecord(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_userinoutrecord();
  userinoutrecord_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.message.plane_record_info.UserInOutRecord)
}
inline void plane_record_info::set_userinoutrecord(const char* value, size_t size) {
  set_has_userinoutrecord();
  userinoutrecord_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.message.plane_record_info.UserInOutRecord)
}
inline ::std::string* plane_record_info::mutable_userinoutrecord() {
  set_has_userinoutrecord();
  // @@protoc_insertion_point(field_mutable:proto.message.plane_record_info.UserInOutRecord)
  return userinoutrecord_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* plane_record_info::release_userinoutrecord() {
  // @@protoc_insertion_point(field_release:proto.message.plane_record_info.UserInOutRecord)
  if (!has_userinoutrecord()) {
    return NULL;
  }
  clear_has_userinoutrecord();
  return userinoutrecord_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void plane_record_info::set_allocated_userinoutrecord(::std::string* userinoutrecord) {
  if (userinoutrecord != NULL) {
    set_has_userinoutrecord();
  } else {
    clear_has_userinoutrecord();
  }
  userinoutrecord_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userinoutrecord);
  // @@protoc_insertion_point(field_set_allocated:proto.message.plane_record_info.UserInOutRecord)
}

// optional .proto.message.user_InOut_Record_Table db_fields = 2;
inline bool plane_record_info::has_db_fields() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void plane_record_info::set_has_db_fields() {
  _has_bits_[0] |= 0x00000002u;
}
inline void plane_record_info::clear_has_db_fields() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void plane_record_info::clear_db_fields() {
  if (db_fields_ != NULL) db_fields_->Clear();
  clear_has_db_fields();
}
inline const ::proto::message::user_InOut_Record_Table& plane_record_info::_internal_db_fields() const {
  return *db_fields_;
}
inline const ::proto::message::user_InOut_Record_Table& plane_record_info::db_fields() const {
  const ::proto::message::user_InOut_Record_Table* p = db_fields_;
  // @@protoc_insertion_point(field_get:proto.message.plane_record_info.db_fields)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::message::user_InOut_Record_Table*>(
      &::proto::message::_user_InOut_Record_Table_default_instance_);
}
inline ::proto::message::user_InOut_Record_Table* plane_record_info::release_db_fields() {
  // @@protoc_insertion_point(field_release:proto.message.plane_record_info.db_fields)
  clear_has_db_fields();
  ::proto::message::user_InOut_Record_Table* temp = db_fields_;
  db_fields_ = NULL;
  return temp;
}
inline ::proto::message::user_InOut_Record_Table* plane_record_info::mutable_db_fields() {
  set_has_db_fields();
  if (db_fields_ == NULL) {
    auto* p = CreateMaybeMessage<::proto::message::user_InOut_Record_Table>(GetArenaNoVirtual());
    db_fields_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.message.plane_record_info.db_fields)
  return db_fields_;
}
inline void plane_record_info::set_allocated_db_fields(::proto::message::user_InOut_Record_Table* db_fields) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete db_fields_;
  }
  if (db_fields) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      db_fields = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, db_fields, submessage_arena);
    }
    set_has_db_fields();
  } else {
    clear_has_db_fields();
  }
  db_fields_ = db_fields;
  // @@protoc_insertion_point(field_set_allocated:proto.message.plane_record_info.db_fields)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_sqlite_5fdb_2eproto
