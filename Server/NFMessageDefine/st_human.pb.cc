// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: st_human.proto

#include "st_human.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_st_5fhuman_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_goodsinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_inviteinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_st_5fhuman_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_mailinfo;
}  // namespace protobuf_st_5fhuman_2eproto
namespace NFMsg {
class accountinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<accountinfo>
      _instance;
} _accountinfo_default_instance_;
class playerinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<playerinfo>
      _instance;
} _playerinfo_default_instance_;
class playerstatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<playerstats>
      _instance;
} _playerstats_default_instance_;
class goodsinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<goodsinfo>
      _instance;
} _goodsinfo_default_instance_;
class goodslistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<goodslist>
      _instance;
} _goodslist_default_instance_;
class noticeinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<noticeinfo>
      _instance;
} _noticeinfo_default_instance_;
class playersimpleinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<playersimpleinfo>
      _instance;
} _playersimpleinfo_default_instance_;
class broadcastinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<broadcastinfo>
      _instance;
} _broadcastinfo_default_instance_;
class mailinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mailinfo>
      _instance;
} _mailinfo_default_instance_;
class maillistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<maillist>
      _instance;
} _maillist_default_instance_;
class inviteinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<inviteinfo>
      _instance;
} _inviteinfo_default_instance_;
class agencyinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<agencyinfo>
      _instance;
} _agencyinfo_default_instance_;
class intlistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<intlist>
      _instance;
} _intlist_default_instance_;
class stringlistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<stringlist>
      _instance;
} _stringlist_default_instance_;
class userawardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<useraward>
      _instance;
} _useraward_default_instance_;
class banktransferrecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<banktransferrecord>
      _instance;
} _banktransferrecord_default_instance_;
}  // namespace NFMsg
namespace protobuf_st_5fhuman_2eproto {
static void InitDefaultsaccountinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_accountinfo_default_instance_;
    new (ptr) ::NFMsg::accountinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::accountinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_accountinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsaccountinfo}, {}};

static void InitDefaultsplayerinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_playerinfo_default_instance_;
    new (ptr) ::NFMsg::playerinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::playerinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_playerinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsplayerinfo}, {}};

static void InitDefaultsplayerstats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_playerstats_default_instance_;
    new (ptr) ::NFMsg::playerstats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::playerstats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_playerstats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsplayerstats}, {}};

static void InitDefaultsgoodsinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_goodsinfo_default_instance_;
    new (ptr) ::NFMsg::goodsinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::goodsinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_goodsinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgoodsinfo}, {}};

static void InitDefaultsgoodslist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_goodslist_default_instance_;
    new (ptr) ::NFMsg::goodslist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::goodslist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_goodslist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgoodslist}, {
      &protobuf_st_5fhuman_2eproto::scc_info_goodsinfo.base,}};

static void InitDefaultsnoticeinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_noticeinfo_default_instance_;
    new (ptr) ::NFMsg::noticeinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::noticeinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_noticeinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsnoticeinfo}, {}};

static void InitDefaultsplayersimpleinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_playersimpleinfo_default_instance_;
    new (ptr) ::NFMsg::playersimpleinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::playersimpleinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_playersimpleinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsplayersimpleinfo}, {}};

static void InitDefaultsbroadcastinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_broadcastinfo_default_instance_;
    new (ptr) ::NFMsg::broadcastinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::broadcastinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_broadcastinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsbroadcastinfo}, {}};

static void InitDefaultsmailinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_mailinfo_default_instance_;
    new (ptr) ::NFMsg::mailinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::mailinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_mailinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmailinfo}, {}};

static void InitDefaultsmaillist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_maillist_default_instance_;
    new (ptr) ::NFMsg::maillist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::maillist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_maillist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmaillist}, {
      &protobuf_st_5fhuman_2eproto::scc_info_mailinfo.base,}};

static void InitDefaultsinviteinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_inviteinfo_default_instance_;
    new (ptr) ::NFMsg::inviteinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::inviteinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_inviteinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsinviteinfo}, {}};

static void InitDefaultsagencyinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_agencyinfo_default_instance_;
    new (ptr) ::NFMsg::agencyinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::agencyinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_agencyinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsagencyinfo}, {
      &protobuf_st_5fhuman_2eproto::scc_info_inviteinfo.base,}};

static void InitDefaultsintlist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_intlist_default_instance_;
    new (ptr) ::NFMsg::intlist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::intlist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_intlist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsintlist}, {}};

static void InitDefaultsstringlist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_stringlist_default_instance_;
    new (ptr) ::NFMsg::stringlist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::stringlist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_stringlist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsstringlist}, {}};

static void InitDefaultsuseraward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_useraward_default_instance_;
    new (ptr) ::NFMsg::useraward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::useraward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_useraward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsuseraward}, {}};

static void InitDefaultsbanktransferrecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NFMsg::_banktransferrecord_default_instance_;
    new (ptr) ::NFMsg::banktransferrecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::banktransferrecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_banktransferrecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsbanktransferrecord}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_accountinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_playerinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_playerstats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_goodsinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_goodslist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_noticeinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_playersimpleinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_broadcastinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mailinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_maillist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_inviteinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_agencyinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_intlist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_stringlist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_useraward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_banktransferrecord.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::accountinfo, userid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, regdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, phonenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, viplevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, jetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, popularity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, idenstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bindtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bindnick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, platformid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, devname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, mobiletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, lasttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, penulttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, isban_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, face_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, isrobot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, playtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bankjetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, blacklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, propertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, location_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, location_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bank_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerinfo, bank_jetton_),
  28,
  0,
  1,
  2,
  3,
  4,
  29,
  30,
  5,
  6,
  31,
  32,
  33,
  7,
  34,
  35,
  8,
  9,
  10,
  36,
  37,
  38,
  11,
  12,
  13,
  14,
  15,
  39,
  40,
  41,
  42,
  43,
  16,
  17,
  18,
  19,
  44,
  45,
  20,
  21,
  22,
  23,
  46,
  47,
  48,
  24,
  25,
  26,
  27,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, mdynickamount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, loginday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, loginconday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, maxloginconday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, loginamount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, onlinetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, maxjetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, payrmb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, callpayrmb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, paytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, callpaytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, maxmoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, dayrmb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playerstats, daypaytime_),
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  0,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, goodsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, validity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, createdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodsinfo, iswear_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodslist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodslist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::goodslist, glist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::noticeinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::noticeinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::noticeinfo, noticetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::noticeinfo, amount_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, viplevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, jetton_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, popularity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, face_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, propertyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, jifen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, location_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::playersimpleinfo, location_y_),
  8,
  0,
  9,
  10,
  11,
  1,
  13,
  14,
  2,
  3,
  4,
  12,
  7,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, broadtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, broadtimes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, validday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::broadcastinfo, cycletype_),
  3,
  4,
  5,
  0,
  1,
  6,
  7,
  2,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, senderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, receiverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, receiver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, mailtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, senddate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, markdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, mailstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, externdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::mailinfo, validity_),
  8,
  9,
  0,
  10,
  1,
  11,
  2,
  3,
  4,
  5,
  12,
  6,
  7,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::maillist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::maillist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::maillist, mlist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::inviteinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::inviteinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::inviteinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::inviteinfo, binduserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::inviteinfo, bindnickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::inviteinfo, bindfaceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::inviteinfo, binddate_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, invitestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, soleagent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, agent1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, agent2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, agent3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, agent4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, invitelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, qrcodeurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, datemark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, moneymark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, weekmoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, exclusiveurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, alipay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::agencyinfo, bankaccount_),
  6,
  0,
  7,
  8,
  9,
  10,
  11,
  12,
  ~0u,
  1,
  2,
  13,
  14,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::intlist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::intlist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::intlist, ilist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::stringlist, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::stringlist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::stringlist, slist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::useraward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::useraward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::useraward, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::useraward, awardtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::useraward, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::useraward, timemark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::useraward, state_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::banktransferrecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::banktransferrecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::banktransferrecord, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::banktransferrecord, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::banktransferrecord, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::banktransferrecord, timemark_),
  3,
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::NFMsg::accountinfo)},
  { 11, 65, sizeof(::NFMsg::playerinfo)},
  { 114, 134, sizeof(::NFMsg::playerstats)},
  { 149, 161, sizeof(::NFMsg::goodsinfo)},
  { 168, 174, sizeof(::NFMsg::goodslist)},
  { 175, 182, sizeof(::NFMsg::noticeinfo)},
  { 184, 204, sizeof(::NFMsg::playersimpleinfo)},
  { 219, 233, sizeof(::NFMsg::broadcastinfo)},
  { 242, 261, sizeof(::NFMsg::mailinfo)},
  { 275, 281, sizeof(::NFMsg::maillist)},
  { 282, 292, sizeof(::NFMsg::inviteinfo)},
  { 297, 318, sizeof(::NFMsg::agencyinfo)},
  { 334, 340, sizeof(::NFMsg::intlist)},
  { 341, 347, sizeof(::NFMsg::stringlist)},
  { 348, 358, sizeof(::NFMsg::useraward)},
  { 363, 372, sizeof(::NFMsg::banktransferrecord)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_accountinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_playerinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_playerstats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_goodsinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_goodslist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_noticeinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_playersimpleinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_broadcastinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_mailinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_maillist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_inviteinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_agencyinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_intlist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_stringlist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_useraward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_banktransferrecord_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "st_human.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016st_human.proto\022\005NFMsg\"@\n\013accountinfo\022\017"
      "\n\007account\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\016\n\006use"
      "rid\030\003 \001(\004\"\322\006\n\nplayerinfo\022\016\n\006userid\030\001 \001(\005"
      "\022\013\n\003cid\030\002 \001(\t\022\017\n\007account\030\003 \001(\t\022\020\n\010passwo"
      "rd\030\004 \001(\t\022\020\n\010nickname\030\005 \001(\t\022\017\n\007regdate\030\007 "
      "\001(\t\022\013\n\003sex\030\010 \001(\005\022\013\n\003age\030\t \001(\005\022\r\n\005email\030\n"
      " \001(\t\022\020\n\010phonenum\030\013 \001(\t\022\013\n\003exp\030\014 \001(\005\022\r\n\005l"
      "evel\030\r \001(\005\022\020\n\010viplevel\030\016 \001(\005\022\016\n\006jetton\030\017"
      " \001(\t\022\014\n\004gold\030\020 \001(\005\022\r\n\005money\030\021 \001(\005\022\017\n\007cha"
      "nnel\030\022 \001(\t\022\020\n\010province\030\023 \001(\t\022\014\n\004city\030\024 \001"
      "(\t\022\022\n\npopularity\030\025 \001(\005\022\022\n\nidenstatus\030\026 \001"
      "(\005\022\020\n\010bindtype\030\027 \001(\005\022\020\n\010bindnick\030\030 \001(\t\022\022"
      "\n\nplatformid\030\031 \001(\t\022\014\n\004imei\030\032 \001(\t\022\017\n\007devn"
      "ame\030\033 \001(\t\022\n\n\002ip\030\034 \001(\t\022\022\n\nmobiletype\030\035 \001("
      "\005\022\020\n\010lasttime\030\036 \001(\005\022\022\n\npenulttime\030\037 \001(\005\022"
      "\016\n\006silent\030  \001(\005\022\r\n\005isban\030! \001(\005\022\016\n\006face_1"
      "\030\" \001(\t\022\016\n\006face_2\030# \001(\t\022\016\n\006face_3\030$ \001(\t\022\016"
      "\n\006face_4\030% \001(\t\022\017\n\007isrobot\030& \001(\005\022\020\n\010playt"
      "ype\030\' \001(\005\022\023\n\013description\030( \001(\t\022\020\n\010locati"
      "on\030) \001(\t\022\022\n\nbankjetton\030* \001(\t\022\r\n\005title\030+ "
      "\001(\t\022\021\n\tblacklist\030, \001(\005\022\022\n\npropertyid\030- \001"
      "(\005\022\016\n\006ticket\030. \001(\005\022\022\n\nlocation_x\030/ \001(\t\022\022"
      "\n\nlocation_y\0300 \001(\t\022\025\n\rbank_password\0301 \001("
      "\t\022\023\n\013bank_jetton\0302 \001(\t\"\257\002\n\013playerstats\022\016"
      "\n\006userid\030\001 \001(\005\022\025\n\rmdynickamount\030\002 \001(\005\022\020\n"
      "\010loginday\030\003 \001(\005\022\023\n\013loginconday\030\004 \001(\005\022\026\n\016"
      "maxloginconday\030\005 \001(\005\022\023\n\013loginamount\030\006 \001("
      "\005\022\022\n\nonlinetime\030\007 \001(\005\022\021\n\tmaxjetton\030\010 \001(\t"
      "\022\016\n\006payrmb\030\t \001(\005\022\022\n\ncallpayrmb\030\n \001(\005\022\017\n\007"
      "paytime\030\013 \001(\005\022\023\n\013callpaytime\030\014 \001(\005\022\020\n\010ma"
      "xmoney\030\r \001(\005\022\016\n\006dayrmb\030\016 \001(\005\022\022\n\ndaypayti"
      "me\030\017 \001(\005\"\202\001\n\tgoodsinfo\022\016\n\006itemid\030\001 \001(\005\022\016"
      "\n\006userid\030\002 \001(\005\022\017\n\007goodsid\030\003 \001(\005\022\016\n\006amoun"
      "t\030\004 \001(\005\022\020\n\010validity\030\005 \001(\005\022\022\n\ncreatedate\030"
      "\006 \001(\t\022\016\n\006iswear\030\007 \001(\005\",\n\tgoodslist\022\037\n\005gl"
      "ist\030\001 \003(\0132\020.NFMsg.goodsinfo\"0\n\nnoticeinf"
      "o\022\022\n\nnoticetype\030\001 \001(\005\022\016\n\006amount\030\002 \001(\005\"\215\002"
      "\n\020playersimpleinfo\022\016\n\006userid\030\001 \001(\005\022\020\n\010ni"
      "ckname\030\005 \001(\t\022\013\n\003sex\030\010 \001(\005\022\r\n\005level\030\r \001(\005"
      "\022\020\n\010viplevel\030\016 \001(\005\022\016\n\006jetton\030\017 \001(\t\022\014\n\004go"
      "ld\030\020 \001(\005\022\022\n\npopularity\030\025 \001(\005\022\n\n\002ip\030\037 \001(\t"
      "\022\016\n\006face_1\030\" \001(\t\022\020\n\010location\030) \001(\t\022\022\n\npr"
      "opertyid\030- \001(\005\022\r\n\005jifen\030c \001(\t\022\022\n\nlocatio"
      "n_x\030/ \001(\t\022\022\n\nlocation_y\0300 \001(\t\"\252\001\n\rbroadc"
      "astinfo\022\n\n\002id\030\001 \001(\005\022\021\n\tbroadtype\030\002 \001(\005\022\020"
      "\n\010senderid\030\003 \001(\005\022\016\n\006sender\030\004 \001(\t\022\013\n\003msg\030"
      "\005 \001(\t\022\022\n\nbroadtimes\030\006 \001(\005\022\020\n\010validday\030\007 "
      "\001(\005\022\022\n\ncreatetime\030\010 \001(\t\022\021\n\tcycletype\030\t \001"
      "(\005\"\201\002\n\010mailinfo\022\016\n\006mailid\030\001 \001(\005\022\020\n\010sende"
      "rid\030\002 \001(\005\022\016\n\006sender\030\003 \001(\t\022\022\n\nreceiverid\030"
      "\004 \001(\005\022\020\n\010receiver\030\005 \001(\t\022\020\n\010mailtype\030\006 \001("
      "\005\022\r\n\005title\030\007 \001(\t\022\017\n\007content\030\010 \001(\t\022\020\n\010sen"
      "ddate\030\t \001(\t\022\020\n\010markdate\030\n \001(\t\022\021\n\tmailsta"
      "te\030\013 \001(\005\022\022\n\nexterndata\030\014 \001(\t\022\016\n\006remark\030\r"
      " \001(\t\022\020\n\010validity\030\016 \001(\005\"*\n\010maillist\022\036\n\005ml"
      "ist\030\001 \003(\0132\017.NFMsg.mailinfo\"l\n\ninviteinfo"
      "\022\016\n\006userid\030\001 \001(\005\022\022\n\nbinduserid\030\002 \001(\005\022\024\n\014"
      "bindnickname\030\003 \001(\t\022\022\n\nbindfaceid\030\004 \001(\t\022\020"
      "\n\010binddate\030\005 \001(\t\"\276\002\n\nagencyinfo\022\016\n\006useri"
      "d\030\001 \001(\005\022\021\n\tinvitestr\030\002 \001(\t\022\r\n\005level\030\003 \001("
      "\005\022\021\n\tsoleagent\030\004 \001(\005\022\016\n\006agent1\030\005 \001(\005\022\016\n\006"
      "agent2\030\006 \001(\005\022\016\n\006agent3\030\007 \001(\005\022\016\n\006agent4\030\010"
      " \001(\005\022%\n\ninvitelist\030\t \003(\0132\021.NFMsg.invitei"
      "nfo\022\021\n\tqrcodeurl\030\n \001(\t\022\020\n\010datemark\030\013 \001(\t"
      "\022\021\n\tmoneymark\030\014 \001(\005\022\021\n\tweekmoney\030\r \001(\005\022\024"
      "\n\014exclusiveurl\030\016 \001(\t\022\016\n\006alipay\030\017 \001(\t\022\023\n\013"
      "bankaccount\030\020 \001(\t\"\030\n\007intlist\022\r\n\005ilist\030\001 "
      "\003(\005\"\033\n\nstringlist\022\r\n\005slist\030\001 \003(\t\"Z\n\tuser"
      "award\022\n\n\002id\030\001 \001(\005\022\021\n\tawardtype\030\002 \001(\005\022\r\n\005"
      "count\030\003 \001(\005\022\020\n\010timemark\030\004 \001(\005\022\r\n\005state\030\005"
      " \001(\005\"X\n\022banktransferrecord\022\016\n\006userid\030\001 \001"
      "(\005\022\020\n\010nickname\030\002 \001(\t\022\016\n\006amount\030\003 \001(\t\022\020\n\010"
      "timemark\030\004 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2894);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "st_human.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_st_5fhuman_2eproto
namespace NFMsg {

// ===================================================================

void accountinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int accountinfo::kAccountFieldNumber;
const int accountinfo::kPasswordFieldNumber;
const int accountinfo::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

accountinfo::accountinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_accountinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.accountinfo)
}
accountinfo::accountinfo(const accountinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.accountinfo)
}

void accountinfo::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
}

accountinfo::~accountinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.accountinfo)
  SharedDtor();
}

void accountinfo::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void accountinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* accountinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const accountinfo& accountinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_accountinfo.base);
  return *internal_default_instance();
}


void accountinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.accountinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool accountinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.accountinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.accountinfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.accountinfo.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 userid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.accountinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.accountinfo)
  return false;
#undef DO_
}

void accountinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.accountinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional uint64 userid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.accountinfo)
}

::google::protobuf::uint8* accountinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.accountinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.accountinfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional uint64 userid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.accountinfo)
  return target;
}

size_t accountinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.accountinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional uint64 userid = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void accountinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.accountinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const accountinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const accountinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.accountinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.accountinfo)
    MergeFrom(*source);
  }
}

void accountinfo::MergeFrom(const accountinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.accountinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void accountinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.accountinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void accountinfo::CopyFrom(const accountinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.accountinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool accountinfo::IsInitialized() const {
  return true;
}

void accountinfo::Swap(accountinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void accountinfo::InternalSwap(accountinfo* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata accountinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void playerinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int playerinfo::kUseridFieldNumber;
const int playerinfo::kCidFieldNumber;
const int playerinfo::kAccountFieldNumber;
const int playerinfo::kPasswordFieldNumber;
const int playerinfo::kNicknameFieldNumber;
const int playerinfo::kRegdateFieldNumber;
const int playerinfo::kSexFieldNumber;
const int playerinfo::kAgeFieldNumber;
const int playerinfo::kEmailFieldNumber;
const int playerinfo::kPhonenumFieldNumber;
const int playerinfo::kExpFieldNumber;
const int playerinfo::kLevelFieldNumber;
const int playerinfo::kViplevelFieldNumber;
const int playerinfo::kJettonFieldNumber;
const int playerinfo::kGoldFieldNumber;
const int playerinfo::kMoneyFieldNumber;
const int playerinfo::kChannelFieldNumber;
const int playerinfo::kProvinceFieldNumber;
const int playerinfo::kCityFieldNumber;
const int playerinfo::kPopularityFieldNumber;
const int playerinfo::kIdenstatusFieldNumber;
const int playerinfo::kBindtypeFieldNumber;
const int playerinfo::kBindnickFieldNumber;
const int playerinfo::kPlatformidFieldNumber;
const int playerinfo::kImeiFieldNumber;
const int playerinfo::kDevnameFieldNumber;
const int playerinfo::kIpFieldNumber;
const int playerinfo::kMobiletypeFieldNumber;
const int playerinfo::kLasttimeFieldNumber;
const int playerinfo::kPenulttimeFieldNumber;
const int playerinfo::kSilentFieldNumber;
const int playerinfo::kIsbanFieldNumber;
const int playerinfo::kFace1FieldNumber;
const int playerinfo::kFace2FieldNumber;
const int playerinfo::kFace3FieldNumber;
const int playerinfo::kFace4FieldNumber;
const int playerinfo::kIsrobotFieldNumber;
const int playerinfo::kPlaytypeFieldNumber;
const int playerinfo::kDescriptionFieldNumber;
const int playerinfo::kLocationFieldNumber;
const int playerinfo::kBankjettonFieldNumber;
const int playerinfo::kTitleFieldNumber;
const int playerinfo::kBlacklistFieldNumber;
const int playerinfo::kPropertyidFieldNumber;
const int playerinfo::kTicketFieldNumber;
const int playerinfo::kLocationXFieldNumber;
const int playerinfo::kLocationYFieldNumber;
const int playerinfo::kBankPasswordFieldNumber;
const int playerinfo::kBankJettonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

playerinfo::playerinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_playerinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.playerinfo)
}
playerinfo::playerinfo(const playerinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cid()) {
    cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_regdate()) {
    regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phonenum()) {
    phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
  }
  jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jetton()) {
    jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jetton_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bindnick()) {
    bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
  }
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platformid()) {
    platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devname()) {
    devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_1()) {
    face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
  }
  face_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_2()) {
    face_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_2_);
  }
  face_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_3()) {
    face_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_3_);
  }
  face_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_4()) {
    face_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_4_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location()) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  bankjetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bankjetton()) {
    bankjetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankjetton_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  location_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_x()) {
    location_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_x_);
  }
  location_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_y()) {
    location_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_y_);
  }
  bank_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_password()) {
    bank_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_password_);
  }
  bank_jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_jetton()) {
    bank_jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_jetton_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ticket_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(ticket_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.playerinfo)
}

void playerinfo::SharedCtor() {
  cid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankjetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ticket_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(ticket_));
}

playerinfo::~playerinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.playerinfo)
  SharedDtor();
}

void playerinfo::SharedDtor() {
  cid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindnick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankjetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_jetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void playerinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* playerinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const playerinfo& playerinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_playerinfo.base);
  return *internal_default_instance();
}


void playerinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      cid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      regdate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      phonenum_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      jetton_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      channel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      province_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      city_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      bindnick_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      platformid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00002000u) {
      imei_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00004000u) {
      devname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00008000u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      face_1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00020000u) {
      face_2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00040000u) {
      face_3_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00080000u) {
      face_4_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00100000u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00200000u) {
      location_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00400000u) {
      bankjetton_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00800000u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 251658240u) {
    if (cached_has_bits & 0x01000000u) {
      location_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x02000000u) {
      location_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x04000000u) {
      bank_password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x08000000u) {
      bank_jetton_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 4026531840u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&exp_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(exp_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mobiletype_) -
        reinterpret_cast<char*>(&level_)) + sizeof(mobiletype_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&lasttime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&propertyid_) -
        reinterpret_cast<char*>(&lasttime_)) + sizeof(propertyid_));
  }
  ticket_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool playerinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.playerinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cid().data(), static_cast<int>(this->cid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.cid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string regdate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regdate().data(), static_cast<int>(this->regdate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.regdate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 age = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phonenum = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenum().data(), static_cast<int>(this->phonenum().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.phonenum");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 viplevel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_viplevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string jetton = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jetton().data(), static_cast<int>(this->jetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.jetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string province = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), static_cast<int>(this->province().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.city");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 popularity = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_popularity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &popularity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 idenstatus = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_idenstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idenstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bindtype = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_bindtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bindtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bindnick = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bindnick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bindnick().data(), static_cast<int>(this->bindnick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bindnick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string platformid = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platformid().data(), static_cast<int>(this->platformid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.platformid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string devname = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devname().data(), static_cast<int>(this->devname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.devname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mobiletype = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_mobiletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobiletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lasttime = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_lasttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lasttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 penulttime = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_penulttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &penulttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 silent = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_silent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &silent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isban = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_isban();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isban_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_1 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_1().data(), static_cast<int>(this->face_1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_2 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_2().data(), static_cast<int>(this->face_2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_3 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_3().data(), static_cast<int>(this->face_3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_4 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_4().data(), static_cast<int>(this->face_4().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.face_4");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isrobot = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          set_has_isrobot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isrobot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 playtype = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          set_has_playtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bankjetton = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankjetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bankjetton().data(), static_cast<int>(this->bankjetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bankjetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blacklist = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          set_has_blacklist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blacklist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 propertyid = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_propertyid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &propertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ticket = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          set_has_ticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location_x = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_x()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location_x().data(), static_cast<int>(this->location_x().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.location_x");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location_y = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location_y().data(), static_cast<int>(this->location_y().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.location_y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_password = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bank_password().data(), static_cast<int>(this->bank_password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bank_password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_jetton = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_jetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bank_jetton().data(), static_cast<int>(this->bank_jetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerinfo.bank_jetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.playerinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.playerinfo)
  return false;
#undef DO_
}

void playerinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string cid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.cid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cid(), output);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional string password = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->password(), output);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional string regdate = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), static_cast<int>(this->regdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.regdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->regdate(), output);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sex(), output);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->age(), output);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->email(), output);
  }

  // optional string phonenum = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.phonenum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->phonenum(), output);
  }

  // optional int32 exp = 12;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->exp(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 level = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->level(), output);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->viplevel(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string jetton = 15;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jetton().data(), static_cast<int>(this->jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.jetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->jetton(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 gold = 16;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->gold(), output);
  }

  // optional int32 money = 17;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->money(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string channel = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->channel(), output);
  }

  // optional string province = 19;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->province(), output);
  }

  // optional string city = 20;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->city(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->popularity(), output);
  }

  // optional int32 idenstatus = 22;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->idenstatus(), output);
  }

  // optional int32 bindtype = 23;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->bindtype(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string bindnick = 24;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bindnick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->bindnick(), output);
  }

  // optional string platformid = 25;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.platformid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->platformid(), output);
  }

  // optional string imei = 26;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->imei(), output);
  }

  // optional string devname = 27;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.devname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->devname(), output);
  }

  // optional string ip = 28;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->ip(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 mobiletype = 29;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->mobiletype(), output);
  }

  // optional int32 lasttime = 30;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->lasttime(), output);
  }

  // optional int32 penulttime = 31;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->penulttime(), output);
  }

  // optional int32 silent = 32;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->silent(), output);
  }

  // optional int32 isban = 33;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->isban(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string face_1 = 34;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->face_1(), output);
  }

  // optional string face_2 = 35;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_2().data(), static_cast<int>(this->face_2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      35, this->face_2(), output);
  }

  // optional string face_3 = 36;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_3().data(), static_cast<int>(this->face_3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      36, this->face_3(), output);
  }

  // optional string face_4 = 37;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_4().data(), static_cast<int>(this->face_4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      37, this->face_4(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 isrobot = 38;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->isrobot(), output);
  }

  // optional int32 playtype = 39;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->playtype(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string description = 40;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->description(), output);
  }

  // optional string location = 41;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->location(), output);
  }

  // optional string bankjetton = 42;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankjetton().data(), static_cast<int>(this->bankjetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bankjetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->bankjetton(), output);
  }

  // optional string title = 43;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      43, this->title(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 blacklist = 44;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->blacklist(), output);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->propertyid(), output);
  }

  // optional int32 ticket = 46;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->ticket(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string location_x = 47;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_x().data(), static_cast<int>(this->location_x().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_x");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      47, this->location_x(), output);
  }

  // optional string location_y = 48;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_y().data(), static_cast<int>(this->location_y().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->location_y(), output);
  }

  // optional string bank_password = 49;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_password().data(), static_cast<int>(this->bank_password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      49, this->bank_password(), output);
  }

  // optional string bank_jetton = 50;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_jetton().data(), static_cast<int>(this->bank_jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_jetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->bank_jetton(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.playerinfo)
}

::google::protobuf::uint8* playerinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.playerinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string cid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cid().data(), static_cast<int>(this->cid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.cid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cid(), target);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional string password = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->password(), target);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional string regdate = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regdate().data(), static_cast<int>(this->regdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.regdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->regdate(), target);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sex(), target);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->age(), target);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->email(), target);
  }

  // optional string phonenum = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenum().data(), static_cast<int>(this->phonenum().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.phonenum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->phonenum(), target);
  }

  // optional int32 exp = 12;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->exp(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 level = 13;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->level(), target);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->viplevel(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string jetton = 15;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jetton().data(), static_cast<int>(this->jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.jetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->jetton(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 gold = 16;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->gold(), target);
  }

  // optional int32 money = 17;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->money(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string channel = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->channel(), target);
  }

  // optional string province = 19;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->province(), target);
  }

  // optional string city = 20;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->city(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->popularity(), target);
  }

  // optional int32 idenstatus = 22;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->idenstatus(), target);
  }

  // optional int32 bindtype = 23;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->bindtype(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string bindnick = 24;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnick().data(), static_cast<int>(this->bindnick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bindnick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->bindnick(), target);
  }

  // optional string platformid = 25;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.platformid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->platformid(), target);
  }

  // optional string imei = 26;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->imei(), target);
  }

  // optional string devname = 27;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devname().data(), static_cast<int>(this->devname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.devname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->devname(), target);
  }

  // optional string ip = 28;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->ip(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 mobiletype = 29;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->mobiletype(), target);
  }

  // optional int32 lasttime = 30;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->lasttime(), target);
  }

  // optional int32 penulttime = 31;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->penulttime(), target);
  }

  // optional int32 silent = 32;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->silent(), target);
  }

  // optional int32 isban = 33;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->isban(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string face_1 = 34;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->face_1(), target);
  }

  // optional string face_2 = 35;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_2().data(), static_cast<int>(this->face_2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->face_2(), target);
  }

  // optional string face_3 = 36;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_3().data(), static_cast<int>(this->face_3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->face_3(), target);
  }

  // optional string face_4 = 37;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_4().data(), static_cast<int>(this->face_4().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.face_4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->face_4(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 isrobot = 38;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->isrobot(), target);
  }

  // optional int32 playtype = 39;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->playtype(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string description = 40;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->description(), target);
  }

  // optional string location = 41;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->location(), target);
  }

  // optional string bankjetton = 42;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankjetton().data(), static_cast<int>(this->bankjetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bankjetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->bankjetton(), target);
  }

  // optional string title = 43;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        43, this->title(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional int32 blacklist = 44;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->blacklist(), target);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->propertyid(), target);
  }

  // optional int32 ticket = 46;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->ticket(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string location_x = 47;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_x().data(), static_cast<int>(this->location_x().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_x");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->location_x(), target);
  }

  // optional string location_y = 48;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_y().data(), static_cast<int>(this->location_y().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.location_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->location_y(), target);
  }

  // optional string bank_password = 49;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_password().data(), static_cast<int>(this->bank_password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        49, this->bank_password(), target);
  }

  // optional string bank_jetton = 50;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_jetton().data(), static_cast<int>(this->bank_jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerinfo.bank_jetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->bank_jetton(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.playerinfo)
  return target;
}

size_t playerinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.playerinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string cid = 2;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cid());
    }

    // optional string account = 3;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 4;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string nickname = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string regdate = 7;
    if (has_regdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regdate());
    }

    // optional string email = 10;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string phonenum = 11;
    if (has_phonenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenum());
    }

    // optional string jetton = 15;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jetton());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string channel = 18;
    if (has_channel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional string province = 19;
    if (has_province()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

    // optional string city = 20;
    if (has_city()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string bindnick = 24;
    if (has_bindnick()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bindnick());
    }

    // optional string platformid = 25;
    if (has_platformid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platformid());
    }

    // optional string imei = 26;
    if (has_imei()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string devname = 27;
    if (has_devname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devname());
    }

    // optional string ip = 28;
    if (has_ip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional string face_1 = 34;
    if (has_face_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_1());
    }

    // optional string face_2 = 35;
    if (has_face_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_2());
    }

    // optional string face_3 = 36;
    if (has_face_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_3());
    }

    // optional string face_4 = 37;
    if (has_face_4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_4());
    }

    // optional string description = 40;
    if (has_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string location = 41;
    if (has_location()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional string bankjetton = 42;
    if (has_bankjetton()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankjetton());
    }

    // optional string title = 43;
    if (has_title()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional string location_x = 47;
    if (has_location_x()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location_x());
    }

    // optional string location_y = 48;
    if (has_location_y()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location_y());
    }

    // optional string bank_password = 49;
    if (has_bank_password()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_password());
    }

    // optional string bank_jetton = 50;
    if (has_bank_jetton()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_jetton());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 sex = 8;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 age = 9;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 exp = 12;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional int32 level = 13;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 viplevel = 14;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplevel());
    }

    // optional int32 gold = 16;
    if (has_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 money = 17;
    if (has_money()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 popularity = 21;
    if (has_popularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->popularity());
    }

    // optional int32 idenstatus = 22;
    if (has_idenstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idenstatus());
    }

    // optional int32 bindtype = 23;
    if (has_bindtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bindtype());
    }

    // optional int32 mobiletype = 29;
    if (has_mobiletype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobiletype());
    }

  }
  if (_has_bits_[40 / 32] & 65280u) {
    // optional int32 lasttime = 30;
    if (has_lasttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lasttime());
    }

    // optional int32 penulttime = 31;
    if (has_penulttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->penulttime());
    }

    // optional int32 silent = 32;
    if (has_silent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->silent());
    }

    // optional int32 isban = 33;
    if (has_isban()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isban());
    }

    // optional int32 isrobot = 38;
    if (has_isrobot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isrobot());
    }

    // optional int32 playtype = 39;
    if (has_playtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playtype());
    }

    // optional int32 blacklist = 44;
    if (has_blacklist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blacklist());
    }

    // optional int32 propertyid = 45;
    if (has_propertyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->propertyid());
    }

  }
  // optional int32 ticket = 46;
  if (has_ticket()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void playerinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const playerinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const playerinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.playerinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.playerinfo)
    MergeFrom(*source);
  }
}

void playerinfo::MergeFrom(const playerinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.playerinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cid();
      cid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_regdate();
      regdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regdate_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_phonenum();
      phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenum_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_jetton();
      jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jetton_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_bindnick();
      bindnick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnick_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_platformid();
      platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_devname();
      devname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devname_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      set_has_face_1();
      face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
    }
    if (cached_has_bits & 0x00020000u) {
      set_has_face_2();
      face_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_2_);
    }
    if (cached_has_bits & 0x00040000u) {
      set_has_face_3();
      face_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_3_);
    }
    if (cached_has_bits & 0x00080000u) {
      set_has_face_4();
      face_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_4_);
    }
    if (cached_has_bits & 0x00100000u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00200000u) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (cached_has_bits & 0x00400000u) {
      set_has_bankjetton();
      bankjetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankjetton_);
    }
    if (cached_has_bits & 0x00800000u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      set_has_location_x();
      location_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_x_);
    }
    if (cached_has_bits & 0x02000000u) {
      set_has_location_y();
      location_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_y_);
    }
    if (cached_has_bits & 0x04000000u) {
      set_has_bank_password();
      bank_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_password_);
    }
    if (cached_has_bits & 0x08000000u) {
      set_has_bank_jetton();
      bank_jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_jetton_);
    }
    if (cached_has_bits & 0x10000000u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x20000000u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x40000000u) {
      age_ = from.age_;
    }
    if (cached_has_bits & 0x80000000u) {
      exp_ = from.exp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000002u) {
      viplevel_ = from.viplevel_;
    }
    if (cached_has_bits & 0x00000004u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000010u) {
      popularity_ = from.popularity_;
    }
    if (cached_has_bits & 0x00000020u) {
      idenstatus_ = from.idenstatus_;
    }
    if (cached_has_bits & 0x00000040u) {
      bindtype_ = from.bindtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      mobiletype_ = from.mobiletype_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      lasttime_ = from.lasttime_;
    }
    if (cached_has_bits & 0x00000200u) {
      penulttime_ = from.penulttime_;
    }
    if (cached_has_bits & 0x00000400u) {
      silent_ = from.silent_;
    }
    if (cached_has_bits & 0x00000800u) {
      isban_ = from.isban_;
    }
    if (cached_has_bits & 0x00001000u) {
      isrobot_ = from.isrobot_;
    }
    if (cached_has_bits & 0x00002000u) {
      playtype_ = from.playtype_;
    }
    if (cached_has_bits & 0x00004000u) {
      blacklist_ = from.blacklist_;
    }
    if (cached_has_bits & 0x00008000u) {
      propertyid_ = from.propertyid_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_ticket(from.ticket());
  }
}

void playerinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void playerinfo::CopyFrom(const playerinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.playerinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool playerinfo::IsInitialized() const {
  return true;
}

void playerinfo::Swap(playerinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void playerinfo::InternalSwap(playerinfo* other) {
  using std::swap;
  cid_.Swap(&other->cid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  regdate_.Swap(&other->regdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phonenum_.Swap(&other->phonenum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jetton_.Swap(&other->jetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  province_.Swap(&other->province_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bindnick_.Swap(&other->bindnick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  platformid_.Swap(&other->platformid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devname_.Swap(&other->devname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_1_.Swap(&other->face_1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_2_.Swap(&other->face_2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_3_.Swap(&other->face_3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_4_.Swap(&other->face_4_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bankjetton_.Swap(&other->bankjetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_x_.Swap(&other->location_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_y_.Swap(&other->location_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_password_.Swap(&other->bank_password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bank_jetton_.Swap(&other->bank_jetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(sex_, other->sex_);
  swap(age_, other->age_);
  swap(exp_, other->exp_);
  swap(level_, other->level_);
  swap(viplevel_, other->viplevel_);
  swap(gold_, other->gold_);
  swap(money_, other->money_);
  swap(popularity_, other->popularity_);
  swap(idenstatus_, other->idenstatus_);
  swap(bindtype_, other->bindtype_);
  swap(mobiletype_, other->mobiletype_);
  swap(lasttime_, other->lasttime_);
  swap(penulttime_, other->penulttime_);
  swap(silent_, other->silent_);
  swap(isban_, other->isban_);
  swap(isrobot_, other->isrobot_);
  swap(playtype_, other->playtype_);
  swap(blacklist_, other->blacklist_);
  swap(propertyid_, other->propertyid_);
  swap(ticket_, other->ticket_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata playerinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void playerstats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int playerstats::kUseridFieldNumber;
const int playerstats::kMdynickamountFieldNumber;
const int playerstats::kLogindayFieldNumber;
const int playerstats::kLogincondayFieldNumber;
const int playerstats::kMaxlogincondayFieldNumber;
const int playerstats::kLoginamountFieldNumber;
const int playerstats::kOnlinetimeFieldNumber;
const int playerstats::kMaxjettonFieldNumber;
const int playerstats::kPayrmbFieldNumber;
const int playerstats::kCallpayrmbFieldNumber;
const int playerstats::kPaytimeFieldNumber;
const int playerstats::kCallpaytimeFieldNumber;
const int playerstats::kMaxmoneyFieldNumber;
const int playerstats::kDayrmbFieldNumber;
const int playerstats::kDaypaytimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

playerstats::playerstats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_playerstats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.playerstats)
}
playerstats::playerstats(const playerstats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  maxjetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_maxjetton()) {
    maxjetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maxjetton_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&daypaytime_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(daypaytime_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.playerstats)
}

void playerstats::SharedCtor() {
  maxjetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daypaytime_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(daypaytime_));
}

playerstats::~playerstats() {
  // @@protoc_insertion_point(destructor:NFMsg.playerstats)
  SharedDtor();
}

void playerstats::SharedDtor() {
  maxjetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void playerstats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* playerstats::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const playerstats& playerstats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_playerstats.base);
  return *internal_default_instance();
}


void playerstats::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.playerstats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    maxjetton_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&onlinetime_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(onlinetime_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&payrmb_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&daypaytime_) -
        reinterpret_cast<char*>(&payrmb_)) + sizeof(daypaytime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool playerstats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.playerstats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mdynickamount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mdynickamount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mdynickamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 loginday = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_loginday();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 loginconday = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_loginconday();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginconday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 maxloginconday = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_maxloginconday();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxloginconday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 loginamount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_loginamount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginamount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 onlinetime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_onlinetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &onlinetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string maxjetton = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maxjetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->maxjetton().data(), static_cast<int>(this->maxjetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playerstats.maxjetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 payrmb = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_payrmb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &payrmb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 callpayrmb = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_callpayrmb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &callpayrmb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 paytime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_paytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 callpaytime = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_callpaytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &callpaytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 maxmoney = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_maxmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dayrmb = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_dayrmb();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dayrmb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 daypaytime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_daypaytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daypaytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.playerstats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.playerstats)
  return false;
#undef DO_
}

void playerstats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.playerstats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 mdynickamount = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mdynickamount(), output);
  }

  // optional int32 loginday = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->loginday(), output);
  }

  // optional int32 loginconday = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->loginconday(), output);
  }

  // optional int32 maxloginconday = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxloginconday(), output);
  }

  // optional int32 loginamount = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->loginamount(), output);
  }

  // optional int32 onlinetime = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->onlinetime(), output);
  }

  // optional string maxjetton = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maxjetton().data(), static_cast<int>(this->maxjetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerstats.maxjetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->maxjetton(), output);
  }

  // optional int32 payrmb = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->payrmb(), output);
  }

  // optional int32 callpayrmb = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->callpayrmb(), output);
  }

  // optional int32 paytime = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->paytime(), output);
  }

  // optional int32 callpaytime = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->callpaytime(), output);
  }

  // optional int32 maxmoney = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->maxmoney(), output);
  }

  // optional int32 dayrmb = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->dayrmb(), output);
  }

  // optional int32 daypaytime = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->daypaytime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.playerstats)
}

::google::protobuf::uint8* playerstats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.playerstats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 mdynickamount = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mdynickamount(), target);
  }

  // optional int32 loginday = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->loginday(), target);
  }

  // optional int32 loginconday = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->loginconday(), target);
  }

  // optional int32 maxloginconday = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxloginconday(), target);
  }

  // optional int32 loginamount = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->loginamount(), target);
  }

  // optional int32 onlinetime = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->onlinetime(), target);
  }

  // optional string maxjetton = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maxjetton().data(), static_cast<int>(this->maxjetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playerstats.maxjetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->maxjetton(), target);
  }

  // optional int32 payrmb = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->payrmb(), target);
  }

  // optional int32 callpayrmb = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->callpayrmb(), target);
  }

  // optional int32 paytime = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->paytime(), target);
  }

  // optional int32 callpaytime = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->callpaytime(), target);
  }

  // optional int32 maxmoney = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->maxmoney(), target);
  }

  // optional int32 dayrmb = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->dayrmb(), target);
  }

  // optional int32 daypaytime = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->daypaytime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.playerstats)
  return target;
}

size_t playerstats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.playerstats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string maxjetton = 8;
    if (has_maxjetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->maxjetton());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 mdynickamount = 2;
    if (has_mdynickamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mdynickamount());
    }

    // optional int32 loginday = 3;
    if (has_loginday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loginday());
    }

    // optional int32 loginconday = 4;
    if (has_loginconday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loginconday());
    }

    // optional int32 maxloginconday = 5;
    if (has_maxloginconday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxloginconday());
    }

    // optional int32 loginamount = 6;
    if (has_loginamount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loginamount());
    }

    // optional int32 onlinetime = 7;
    if (has_onlinetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->onlinetime());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional int32 payrmb = 9;
    if (has_payrmb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->payrmb());
    }

    // optional int32 callpayrmb = 10;
    if (has_callpayrmb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->callpayrmb());
    }

    // optional int32 paytime = 11;
    if (has_paytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->paytime());
    }

    // optional int32 callpaytime = 12;
    if (has_callpaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->callpaytime());
    }

    // optional int32 maxmoney = 13;
    if (has_maxmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxmoney());
    }

    // optional int32 dayrmb = 14;
    if (has_dayrmb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dayrmb());
    }

    // optional int32 daypaytime = 15;
    if (has_daypaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daypaytime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void playerstats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.playerstats)
  GOOGLE_DCHECK_NE(&from, this);
  const playerstats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const playerstats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.playerstats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.playerstats)
    MergeFrom(*source);
  }
}

void playerstats::MergeFrom(const playerstats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.playerstats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_maxjetton();
      maxjetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maxjetton_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      mdynickamount_ = from.mdynickamount_;
    }
    if (cached_has_bits & 0x00000008u) {
      loginday_ = from.loginday_;
    }
    if (cached_has_bits & 0x00000010u) {
      loginconday_ = from.loginconday_;
    }
    if (cached_has_bits & 0x00000020u) {
      maxloginconday_ = from.maxloginconday_;
    }
    if (cached_has_bits & 0x00000040u) {
      loginamount_ = from.loginamount_;
    }
    if (cached_has_bits & 0x00000080u) {
      onlinetime_ = from.onlinetime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      payrmb_ = from.payrmb_;
    }
    if (cached_has_bits & 0x00000200u) {
      callpayrmb_ = from.callpayrmb_;
    }
    if (cached_has_bits & 0x00000400u) {
      paytime_ = from.paytime_;
    }
    if (cached_has_bits & 0x00000800u) {
      callpaytime_ = from.callpaytime_;
    }
    if (cached_has_bits & 0x00001000u) {
      maxmoney_ = from.maxmoney_;
    }
    if (cached_has_bits & 0x00002000u) {
      dayrmb_ = from.dayrmb_;
    }
    if (cached_has_bits & 0x00004000u) {
      daypaytime_ = from.daypaytime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void playerstats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.playerstats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void playerstats::CopyFrom(const playerstats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.playerstats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool playerstats::IsInitialized() const {
  return true;
}

void playerstats::Swap(playerstats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void playerstats::InternalSwap(playerstats* other) {
  using std::swap;
  maxjetton_.Swap(&other->maxjetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(mdynickamount_, other->mdynickamount_);
  swap(loginday_, other->loginday_);
  swap(loginconday_, other->loginconday_);
  swap(maxloginconday_, other->maxloginconday_);
  swap(loginamount_, other->loginamount_);
  swap(onlinetime_, other->onlinetime_);
  swap(payrmb_, other->payrmb_);
  swap(callpayrmb_, other->callpayrmb_);
  swap(paytime_, other->paytime_);
  swap(callpaytime_, other->callpaytime_);
  swap(maxmoney_, other->maxmoney_);
  swap(dayrmb_, other->dayrmb_);
  swap(daypaytime_, other->daypaytime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata playerstats::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void goodsinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int goodsinfo::kItemidFieldNumber;
const int goodsinfo::kUseridFieldNumber;
const int goodsinfo::kGoodsidFieldNumber;
const int goodsinfo::kAmountFieldNumber;
const int goodsinfo::kValidityFieldNumber;
const int goodsinfo::kCreatedateFieldNumber;
const int goodsinfo::kIswearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

goodsinfo::goodsinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_goodsinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.goodsinfo)
}
goodsinfo::goodsinfo(const goodsinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_createdate()) {
    createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
  }
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&iswear_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(iswear_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.goodsinfo)
}

void goodsinfo::SharedCtor() {
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iswear_) -
      reinterpret_cast<char*>(&itemid_)) + sizeof(iswear_));
}

goodsinfo::~goodsinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.goodsinfo)
  SharedDtor();
}

void goodsinfo::SharedDtor() {
  createdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void goodsinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* goodsinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const goodsinfo& goodsinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_goodsinfo.base);
  return *internal_default_instance();
}


void goodsinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.goodsinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    createdate_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 126u) {
    ::memset(&itemid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&iswear_) -
        reinterpret_cast<char*>(&itemid_)) + sizeof(iswear_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool goodsinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.goodsinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 itemid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 goodsid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_goodsid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goodsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 validity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_validity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &validity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string createdate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdate().data(), static_cast<int>(this->createdate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.goodsinfo.createdate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 iswear = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_iswear();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iswear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.goodsinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.goodsinfo)
  return false;
#undef DO_
}

void goodsinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.goodsinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 itemid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional int32 goodsid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->goodsid(), output);
  }

  // optional int32 amount = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->amount(), output);
  }

  // optional int32 validity = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->validity(), output);
  }

  // optional string createdate = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdate().data(), static_cast<int>(this->createdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.goodsinfo.createdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->createdate(), output);
  }

  // optional int32 iswear = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->iswear(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.goodsinfo)
}

::google::protobuf::uint8* goodsinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.goodsinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 itemid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 userid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional int32 goodsid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->goodsid(), target);
  }

  // optional int32 amount = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->amount(), target);
  }

  // optional int32 validity = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->validity(), target);
  }

  // optional string createdate = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdate().data(), static_cast<int>(this->createdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.goodsinfo.createdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->createdate(), target);
  }

  // optional int32 iswear = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->iswear(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.goodsinfo)
  return target;
}

size_t goodsinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.goodsinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string createdate = 6;
    if (has_createdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdate());
    }

    // optional int32 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 goodsid = 3;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goodsid());
    }

    // optional int32 amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }

    // optional int32 validity = 5;
    if (has_validity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->validity());
    }

    // optional int32 iswear = 7;
    if (has_iswear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iswear());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void goodsinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.goodsinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const goodsinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const goodsinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.goodsinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.goodsinfo)
    MergeFrom(*source);
  }
}

void goodsinfo::MergeFrom(const goodsinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.goodsinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_createdate();
      createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000008u) {
      goodsid_ = from.goodsid_;
    }
    if (cached_has_bits & 0x00000010u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000020u) {
      validity_ = from.validity_;
    }
    if (cached_has_bits & 0x00000040u) {
      iswear_ = from.iswear_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void goodsinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.goodsinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void goodsinfo::CopyFrom(const goodsinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.goodsinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool goodsinfo::IsInitialized() const {
  return true;
}

void goodsinfo::Swap(goodsinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void goodsinfo::InternalSwap(goodsinfo* other) {
  using std::swap;
  createdate_.Swap(&other->createdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(itemid_, other->itemid_);
  swap(userid_, other->userid_);
  swap(goodsid_, other->goodsid_);
  swap(amount_, other->amount_);
  swap(validity_, other->validity_);
  swap(iswear_, other->iswear_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata goodsinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void goodslist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int goodslist::kGlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

goodslist::goodslist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_goodslist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.goodslist)
}
goodslist::goodslist(const goodslist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      glist_(from.glist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFMsg.goodslist)
}

void goodslist::SharedCtor() {
}

goodslist::~goodslist() {
  // @@protoc_insertion_point(destructor:NFMsg.goodslist)
  SharedDtor();
}

void goodslist::SharedDtor() {
}

void goodslist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* goodslist::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const goodslist& goodslist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_goodslist.base);
  return *internal_default_instance();
}


void goodslist::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.goodslist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  glist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool goodslist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.goodslist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFMsg.goodsinfo glist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_glist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.goodslist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.goodslist)
  return false;
#undef DO_
}

void goodslist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.goodslist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.goodsinfo glist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->glist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->glist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.goodslist)
}

::google::protobuf::uint8* goodslist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.goodslist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.goodsinfo glist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->glist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->glist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.goodslist)
  return target;
}

size_t goodslist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.goodslist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NFMsg.goodsinfo glist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->glist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->glist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void goodslist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.goodslist)
  GOOGLE_DCHECK_NE(&from, this);
  const goodslist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const goodslist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.goodslist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.goodslist)
    MergeFrom(*source);
  }
}

void goodslist::MergeFrom(const goodslist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.goodslist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  glist_.MergeFrom(from.glist_);
}

void goodslist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.goodslist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void goodslist::CopyFrom(const goodslist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.goodslist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool goodslist::IsInitialized() const {
  return true;
}

void goodslist::Swap(goodslist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void goodslist::InternalSwap(goodslist* other) {
  using std::swap;
  CastToBase(&glist_)->InternalSwap(CastToBase(&other->glist_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata goodslist::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void noticeinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int noticeinfo::kNoticetypeFieldNumber;
const int noticeinfo::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

noticeinfo::noticeinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_noticeinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.noticeinfo)
}
noticeinfo::noticeinfo(const noticeinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&noticetype_, &from.noticetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&noticetype_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.noticeinfo)
}

void noticeinfo::SharedCtor() {
  ::memset(&noticetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&noticetype_)) + sizeof(amount_));
}

noticeinfo::~noticeinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.noticeinfo)
  SharedDtor();
}

void noticeinfo::SharedDtor() {
}

void noticeinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* noticeinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const noticeinfo& noticeinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_noticeinfo.base);
  return *internal_default_instance();
}


void noticeinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.noticeinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&noticetype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&noticetype_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool noticeinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.noticeinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 noticetype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_noticetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &noticetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.noticeinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.noticeinfo)
  return false;
#undef DO_
}

void noticeinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.noticeinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 noticetype = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->noticetype(), output);
  }

  // optional int32 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.noticeinfo)
}

::google::protobuf::uint8* noticeinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.noticeinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 noticetype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->noticetype(), target);
  }

  // optional int32 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.noticeinfo)
  return target;
}

size_t noticeinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.noticeinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 noticetype = 1;
    if (has_noticetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->noticetype());
    }

    // optional int32 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void noticeinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.noticeinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const noticeinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const noticeinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.noticeinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.noticeinfo)
    MergeFrom(*source);
  }
}

void noticeinfo::MergeFrom(const noticeinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.noticeinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      noticetype_ = from.noticetype_;
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void noticeinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.noticeinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void noticeinfo::CopyFrom(const noticeinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.noticeinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool noticeinfo::IsInitialized() const {
  return true;
}

void noticeinfo::Swap(noticeinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void noticeinfo::InternalSwap(noticeinfo* other) {
  using std::swap;
  swap(noticetype_, other->noticetype_);
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata noticeinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void playersimpleinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int playersimpleinfo::kUseridFieldNumber;
const int playersimpleinfo::kNicknameFieldNumber;
const int playersimpleinfo::kSexFieldNumber;
const int playersimpleinfo::kLevelFieldNumber;
const int playersimpleinfo::kViplevelFieldNumber;
const int playersimpleinfo::kJettonFieldNumber;
const int playersimpleinfo::kGoldFieldNumber;
const int playersimpleinfo::kPopularityFieldNumber;
const int playersimpleinfo::kIpFieldNumber;
const int playersimpleinfo::kFace1FieldNumber;
const int playersimpleinfo::kLocationFieldNumber;
const int playersimpleinfo::kPropertyidFieldNumber;
const int playersimpleinfo::kJifenFieldNumber;
const int playersimpleinfo::kLocationXFieldNumber;
const int playersimpleinfo::kLocationYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

playersimpleinfo::playersimpleinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_playersimpleinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.playersimpleinfo)
}
playersimpleinfo::playersimpleinfo(const playersimpleinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jetton()) {
    jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jetton_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_1()) {
    face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location()) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  location_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_x()) {
    location_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_x_);
  }
  location_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_y()) {
    location_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_y_);
  }
  jifen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jifen()) {
    jifen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jifen_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&popularity_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(popularity_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.playersimpleinfo)
}

void playersimpleinfo::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jetton_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jifen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&popularity_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(popularity_));
}

playersimpleinfo::~playersimpleinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.playersimpleinfo)
  SharedDtor();
}

void playersimpleinfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jetton_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jifen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void playersimpleinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* playersimpleinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const playersimpleinfo& playersimpleinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_playersimpleinfo.base);
  return *internal_default_instance();
}


void playersimpleinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.playersimpleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      jetton_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      face_1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      location_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      location_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      location_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      jifen_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 32512u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&popularity_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(popularity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool playersimpleinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.playersimpleinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 viplevel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_viplevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string jetton = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jetton()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jetton().data(), static_cast<int>(this->jetton().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.jetton");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gold = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 popularity = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_popularity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &popularity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_1 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_1().data(), static_cast<int>(this->face_1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.face_1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 propertyid = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_propertyid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &propertyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location_x = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_x()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location_x().data(), static_cast<int>(this->location_x().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.location_x");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location_y = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location_y().data(), static_cast<int>(this->location_y().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.location_y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string jifen = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jifen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jifen().data(), static_cast<int>(this->jifen().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.playersimpleinfo.jifen");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.playersimpleinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.playersimpleinfo)
  return false;
#undef DO_
}

void playersimpleinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.playersimpleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sex(), output);
  }

  // optional int32 level = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->level(), output);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->viplevel(), output);
  }

  // optional string jetton = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jetton().data(), static_cast<int>(this->jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.jetton");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->jetton(), output);
  }

  // optional int32 gold = 16;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->gold(), output);
  }

  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->popularity(), output);
  }

  // optional string ip = 31;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->ip(), output);
  }

  // optional string face_1 = 34;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.face_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->face_1(), output);
  }

  // optional string location = 41;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->location(), output);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->propertyid(), output);
  }

  // optional string location_x = 47;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_x().data(), static_cast<int>(this->location_x().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.location_x");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      47, this->location_x(), output);
  }

  // optional string location_y = 48;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_y().data(), static_cast<int>(this->location_y().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.location_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->location_y(), output);
  }

  // optional string jifen = 99;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jifen().data(), static_cast<int>(this->jifen().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.jifen");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      99, this->jifen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.playersimpleinfo)
}

::google::protobuf::uint8* playersimpleinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.playersimpleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional int32 sex = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sex(), target);
  }

  // optional int32 level = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->level(), target);
  }

  // optional int32 viplevel = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->viplevel(), target);
  }

  // optional string jetton = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jetton().data(), static_cast<int>(this->jetton().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.jetton");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->jetton(), target);
  }

  // optional int32 gold = 16;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->gold(), target);
  }

  // optional int32 popularity = 21;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->popularity(), target);
  }

  // optional string ip = 31;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->ip(), target);
  }

  // optional string face_1 = 34;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_1().data(), static_cast<int>(this->face_1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.face_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->face_1(), target);
  }

  // optional string location = 41;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->location(), target);
  }

  // optional int32 propertyid = 45;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->propertyid(), target);
  }

  // optional string location_x = 47;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_x().data(), static_cast<int>(this->location_x().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.location_x");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->location_x(), target);
  }

  // optional string location_y = 48;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_y().data(), static_cast<int>(this->location_y().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.location_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->location_y(), target);
  }

  // optional string jifen = 99;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jifen().data(), static_cast<int>(this->jifen().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.playersimpleinfo.jifen");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        99, this->jifen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.playersimpleinfo)
  return target;
}

size_t playersimpleinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.playersimpleinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string nickname = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string jetton = 15;
    if (has_jetton()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jetton());
    }

    // optional string ip = 31;
    if (has_ip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string face_1 = 34;
    if (has_face_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_1());
    }

    // optional string location = 41;
    if (has_location()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional string location_x = 47;
    if (has_location_x()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location_x());
    }

    // optional string location_y = 48;
    if (has_location_y()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location_y());
    }

    // optional string jifen = 99;
    if (has_jifen()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jifen());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 sex = 8;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 level = 13;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 viplevel = 14;
    if (has_viplevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplevel());
    }

    // optional int32 propertyid = 45;
    if (has_propertyid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->propertyid());
    }

    // optional int32 gold = 16;
    if (has_gold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional int32 popularity = 21;
    if (has_popularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->popularity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void playersimpleinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.playersimpleinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const playersimpleinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const playersimpleinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.playersimpleinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.playersimpleinfo)
    MergeFrom(*source);
  }
}

void playersimpleinfo::MergeFrom(const playersimpleinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.playersimpleinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_jetton();
      jetton_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jetton_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_face_1();
      face_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_1_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_location_x();
      location_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_x_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_location_y();
      location_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_y_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_jifen();
      jifen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jifen_);
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000200u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000400u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000800u) {
      viplevel_ = from.viplevel_;
    }
    if (cached_has_bits & 0x00001000u) {
      propertyid_ = from.propertyid_;
    }
    if (cached_has_bits & 0x00002000u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00004000u) {
      popularity_ = from.popularity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void playersimpleinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.playersimpleinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void playersimpleinfo::CopyFrom(const playersimpleinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.playersimpleinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool playersimpleinfo::IsInitialized() const {
  return true;
}

void playersimpleinfo::Swap(playersimpleinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void playersimpleinfo::InternalSwap(playersimpleinfo* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jetton_.Swap(&other->jetton_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_1_.Swap(&other->face_1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_x_.Swap(&other->location_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_y_.Swap(&other->location_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jifen_.Swap(&other->jifen_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(sex_, other->sex_);
  swap(level_, other->level_);
  swap(viplevel_, other->viplevel_);
  swap(propertyid_, other->propertyid_);
  swap(gold_, other->gold_);
  swap(popularity_, other->popularity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata playersimpleinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void broadcastinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int broadcastinfo::kIdFieldNumber;
const int broadcastinfo::kBroadtypeFieldNumber;
const int broadcastinfo::kSenderidFieldNumber;
const int broadcastinfo::kSenderFieldNumber;
const int broadcastinfo::kMsgFieldNumber;
const int broadcastinfo::kBroadtimesFieldNumber;
const int broadcastinfo::kValiddayFieldNumber;
const int broadcastinfo::kCreatetimeFieldNumber;
const int broadcastinfo::kCycletypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

broadcastinfo::broadcastinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_broadcastinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.broadcastinfo)
}
broadcastinfo::broadcastinfo(const broadcastinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sender()) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_createtime()) {
    createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cycletype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cycletype_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.broadcastinfo)
}

void broadcastinfo::SharedCtor() {
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cycletype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cycletype_));
}

broadcastinfo::~broadcastinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.broadcastinfo)
  SharedDtor();
}

void broadcastinfo::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void broadcastinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* broadcastinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const broadcastinfo& broadcastinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_broadcastinfo.base);
  return *internal_default_instance();
}


void broadcastinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.broadcastinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sender_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      createtime_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&validday_) -
        reinterpret_cast<char*>(&id_)) + sizeof(validday_));
  }
  cycletype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool broadcastinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.broadcastinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 broadtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_broadtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &broadtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 senderid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_senderid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &senderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sender = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.broadcastinfo.sender");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.broadcastinfo.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 broadtimes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_broadtimes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &broadtimes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 validday = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_validday();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &validday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string createtime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createtime().data(), static_cast<int>(this->createtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.broadcastinfo.createtime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cycletype = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_cycletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.broadcastinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.broadcastinfo)
  return false;
#undef DO_
}

void broadcastinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.broadcastinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 broadtype = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->broadtype(), output);
  }

  // optional int32 senderid = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->senderid(), output);
  }

  // optional string sender = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.broadcastinfo.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sender(), output);
  }

  // optional string msg = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.broadcastinfo.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg(), output);
  }

  // optional int32 broadtimes = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->broadtimes(), output);
  }

  // optional int32 validday = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->validday(), output);
  }

  // optional string createtime = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), static_cast<int>(this->createtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.broadcastinfo.createtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->createtime(), output);
  }

  // optional int32 cycletype = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->cycletype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.broadcastinfo)
}

::google::protobuf::uint8* broadcastinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.broadcastinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 broadtype = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->broadtype(), target);
  }

  // optional int32 senderid = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->senderid(), target);
  }

  // optional string sender = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.broadcastinfo.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sender(), target);
  }

  // optional string msg = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.broadcastinfo.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }

  // optional int32 broadtimes = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->broadtimes(), target);
  }

  // optional int32 validday = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->validday(), target);
  }

  // optional string createtime = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createtime().data(), static_cast<int>(this->createtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.broadcastinfo.createtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->createtime(), target);
  }

  // optional int32 cycletype = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->cycletype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.broadcastinfo)
  return target;
}

size_t broadcastinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.broadcastinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string sender = 4;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender());
    }

    // optional string msg = 5;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional string createtime = 8;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createtime());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 broadtype = 2;
    if (has_broadtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->broadtype());
    }

    // optional int32 senderid = 3;
    if (has_senderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->senderid());
    }

    // optional int32 broadtimes = 6;
    if (has_broadtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->broadtimes());
    }

    // optional int32 validday = 7;
    if (has_validday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->validday());
    }

  }
  // optional int32 cycletype = 9;
  if (has_cycletype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cycletype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void broadcastinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.broadcastinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const broadcastinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const broadcastinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.broadcastinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.broadcastinfo)
    MergeFrom(*source);
  }
}

void broadcastinfo::MergeFrom(const broadcastinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.broadcastinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sender();
      sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_createtime();
      createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      broadtype_ = from.broadtype_;
    }
    if (cached_has_bits & 0x00000020u) {
      senderid_ = from.senderid_;
    }
    if (cached_has_bits & 0x00000040u) {
      broadtimes_ = from.broadtimes_;
    }
    if (cached_has_bits & 0x00000080u) {
      validday_ = from.validday_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_cycletype(from.cycletype());
  }
}

void broadcastinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.broadcastinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void broadcastinfo::CopyFrom(const broadcastinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.broadcastinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool broadcastinfo::IsInitialized() const {
  return true;
}

void broadcastinfo::Swap(broadcastinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void broadcastinfo::InternalSwap(broadcastinfo* other) {
  using std::swap;
  sender_.Swap(&other->sender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  createtime_.Swap(&other->createtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(broadtype_, other->broadtype_);
  swap(senderid_, other->senderid_);
  swap(broadtimes_, other->broadtimes_);
  swap(validday_, other->validday_);
  swap(cycletype_, other->cycletype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata broadcastinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mailinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mailinfo::kMailidFieldNumber;
const int mailinfo::kSenderidFieldNumber;
const int mailinfo::kSenderFieldNumber;
const int mailinfo::kReceiveridFieldNumber;
const int mailinfo::kReceiverFieldNumber;
const int mailinfo::kMailtypeFieldNumber;
const int mailinfo::kTitleFieldNumber;
const int mailinfo::kContentFieldNumber;
const int mailinfo::kSenddateFieldNumber;
const int mailinfo::kMarkdateFieldNumber;
const int mailinfo::kMailstateFieldNumber;
const int mailinfo::kExterndataFieldNumber;
const int mailinfo::kRemarkFieldNumber;
const int mailinfo::kValidityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mailinfo::mailinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_mailinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.mailinfo)
}
mailinfo::mailinfo(const mailinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sender()) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_receiver()) {
    receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  senddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_senddate()) {
    senddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senddate_);
  }
  markdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_markdate()) {
    markdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.markdate_);
  }
  externdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_externdata()) {
    externdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externdata_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remark()) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  ::memcpy(&mailid_, &from.mailid_,
    static_cast<size_t>(reinterpret_cast<char*>(&validity_) -
    reinterpret_cast<char*>(&mailid_)) + sizeof(validity_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.mailinfo)
}

void mailinfo::SharedCtor() {
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  markdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mailid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validity_) -
      reinterpret_cast<char*>(&mailid_)) + sizeof(validity_));
}

mailinfo::~mailinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.mailinfo)
  SharedDtor();
}

void mailinfo::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  markdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void mailinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mailinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mailinfo& mailinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_mailinfo.base);
  return *internal_default_instance();
}


void mailinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.mailinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      sender_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      content_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      senddate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      markdate_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      externdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      remark_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 16128u) {
    ::memset(&mailid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&validity_) -
        reinterpret_cast<char*>(&mailid_)) + sizeof(validity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool mailinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.mailinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mailid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_mailid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 senderid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_senderid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &senderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.sender");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 receiverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_receiverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &receiverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string receiver = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receiver().data(), static_cast<int>(this->receiver().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.receiver");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailtype = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_mailtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string senddate = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->senddate().data(), static_cast<int>(this->senddate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.senddate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string markdate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_markdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->markdate().data(), static_cast<int>(this->markdate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.markdate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mailstate = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_mailstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mailstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string externdata = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_externdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->externdata().data(), static_cast<int>(this->externdata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.externdata");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string remark = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.mailinfo.remark");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 validity = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_validity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &validity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.mailinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.mailinfo)
  return false;
#undef DO_
}

void mailinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.mailinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 mailid = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mailid(), output);
  }

  // optional int32 senderid = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->senderid(), output);
  }

  // optional string sender = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender(), output);
  }

  // optional int32 receiverid = 4;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->receiverid(), output);
  }

  // optional string receiver = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), static_cast<int>(this->receiver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.receiver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->receiver(), output);
  }

  // optional int32 mailtype = 6;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mailtype(), output);
  }

  // optional string title = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->title(), output);
  }

  // optional string content = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->content(), output);
  }

  // optional string senddate = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senddate().data(), static_cast<int>(this->senddate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.senddate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->senddate(), output);
  }

  // optional string markdate = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->markdate().data(), static_cast<int>(this->markdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.markdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->markdate(), output);
  }

  // optional int32 mailstate = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mailstate(), output);
  }

  // optional string externdata = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->externdata().data(), static_cast<int>(this->externdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.externdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->externdata(), output);
  }

  // optional string remark = 13;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->remark(), output);
  }

  // optional int32 validity = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->validity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.mailinfo)
}

::google::protobuf::uint8* mailinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.mailinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 mailid = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mailid(), target);
  }

  // optional int32 senderid = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->senderid(), target);
  }

  // optional string sender = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender(), target);
  }

  // optional int32 receiverid = 4;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->receiverid(), target);
  }

  // optional string receiver = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), static_cast<int>(this->receiver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.receiver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->receiver(), target);
  }

  // optional int32 mailtype = 6;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mailtype(), target);
  }

  // optional string title = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->title(), target);
  }

  // optional string content = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->content(), target);
  }

  // optional string senddate = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senddate().data(), static_cast<int>(this->senddate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.senddate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->senddate(), target);
  }

  // optional string markdate = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->markdate().data(), static_cast<int>(this->markdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.markdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->markdate(), target);
  }

  // optional int32 mailstate = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mailstate(), target);
  }

  // optional string externdata = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->externdata().data(), static_cast<int>(this->externdata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.externdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->externdata(), target);
  }

  // optional string remark = 13;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.mailinfo.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->remark(), target);
  }

  // optional int32 validity = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->validity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.mailinfo)
  return target;
}

size_t mailinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.mailinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string sender = 3;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender());
    }

    // optional string receiver = 5;
    if (has_receiver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver());
    }

    // optional string title = 7;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content = 8;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string senddate = 9;
    if (has_senddate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->senddate());
    }

    // optional string markdate = 10;
    if (has_markdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->markdate());
    }

    // optional string externdata = 12;
    if (has_externdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->externdata());
    }

    // optional string remark = 13;
    if (has_remark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remark());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional int32 mailid = 1;
    if (has_mailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailid());
    }

    // optional int32 senderid = 2;
    if (has_senderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->senderid());
    }

    // optional int32 receiverid = 4;
    if (has_receiverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->receiverid());
    }

    // optional int32 mailtype = 6;
    if (has_mailtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailtype());
    }

    // optional int32 mailstate = 11;
    if (has_mailstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mailstate());
    }

    // optional int32 validity = 14;
    if (has_validity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->validity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mailinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.mailinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const mailinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mailinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.mailinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.mailinfo)
    MergeFrom(*source);
  }
}

void mailinfo::MergeFrom(const mailinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.mailinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sender();
      sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_receiver();
      receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_senddate();
      senddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senddate_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_markdate();
      markdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.markdate_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_externdata();
      externdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externdata_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_remark();
      remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      mailid_ = from.mailid_;
    }
    if (cached_has_bits & 0x00000200u) {
      senderid_ = from.senderid_;
    }
    if (cached_has_bits & 0x00000400u) {
      receiverid_ = from.receiverid_;
    }
    if (cached_has_bits & 0x00000800u) {
      mailtype_ = from.mailtype_;
    }
    if (cached_has_bits & 0x00001000u) {
      mailstate_ = from.mailstate_;
    }
    if (cached_has_bits & 0x00002000u) {
      validity_ = from.validity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void mailinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.mailinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mailinfo::CopyFrom(const mailinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.mailinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mailinfo::IsInitialized() const {
  return true;
}

void mailinfo::Swap(mailinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mailinfo::InternalSwap(mailinfo* other) {
  using std::swap;
  sender_.Swap(&other->sender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receiver_.Swap(&other->receiver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  senddate_.Swap(&other->senddate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  markdate_.Swap(&other->markdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  externdata_.Swap(&other->externdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mailid_, other->mailid_);
  swap(senderid_, other->senderid_);
  swap(receiverid_, other->receiverid_);
  swap(mailtype_, other->mailtype_);
  swap(mailstate_, other->mailstate_);
  swap(validity_, other->validity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mailinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void maillist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int maillist::kMlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

maillist::maillist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_maillist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.maillist)
}
maillist::maillist(const maillist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      mlist_(from.mlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFMsg.maillist)
}

void maillist::SharedCtor() {
}

maillist::~maillist() {
  // @@protoc_insertion_point(destructor:NFMsg.maillist)
  SharedDtor();
}

void maillist::SharedDtor() {
}

void maillist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* maillist::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const maillist& maillist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_maillist.base);
  return *internal_default_instance();
}


void maillist::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.maillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool maillist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.maillist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFMsg.mailinfo mlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.maillist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.maillist)
  return false;
#undef DO_
}

void maillist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.maillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.mailinfo mlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->mlist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.maillist)
}

::google::protobuf::uint8* maillist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.maillist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.mailinfo mlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->mlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.maillist)
  return target;
}

size_t maillist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.maillist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NFMsg.mailinfo mlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void maillist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.maillist)
  GOOGLE_DCHECK_NE(&from, this);
  const maillist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const maillist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.maillist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.maillist)
    MergeFrom(*source);
  }
}

void maillist::MergeFrom(const maillist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.maillist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mlist_.MergeFrom(from.mlist_);
}

void maillist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.maillist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void maillist::CopyFrom(const maillist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.maillist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool maillist::IsInitialized() const {
  return true;
}

void maillist::Swap(maillist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void maillist::InternalSwap(maillist* other) {
  using std::swap;
  CastToBase(&mlist_)->InternalSwap(CastToBase(&other->mlist_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata maillist::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void inviteinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int inviteinfo::kUseridFieldNumber;
const int inviteinfo::kBinduseridFieldNumber;
const int inviteinfo::kBindnicknameFieldNumber;
const int inviteinfo::kBindfaceidFieldNumber;
const int inviteinfo::kBinddateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

inviteinfo::inviteinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_inviteinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.inviteinfo)
}
inviteinfo::inviteinfo(const inviteinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bindnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bindnickname()) {
    bindnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnickname_);
  }
  bindfaceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bindfaceid()) {
    bindfaceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindfaceid_);
  }
  binddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_binddate()) {
    binddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binddate_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&binduserid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(binduserid_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.inviteinfo)
}

void inviteinfo::SharedCtor() {
  bindnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindfaceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binddate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&binduserid_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(binduserid_));
}

inviteinfo::~inviteinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.inviteinfo)
  SharedDtor();
}

void inviteinfo::SharedDtor() {
  bindnickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindfaceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binddate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void inviteinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* inviteinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const inviteinfo& inviteinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_inviteinfo.base);
  return *internal_default_instance();
}


void inviteinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.inviteinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bindnickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bindfaceid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      binddate_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&binduserid_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(binduserid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool inviteinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.inviteinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 binduserid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_binduserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &binduserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bindnickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bindnickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bindnickname().data(), static_cast<int>(this->bindnickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.inviteinfo.bindnickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bindfaceid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bindfaceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bindfaceid().data(), static_cast<int>(this->bindfaceid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.inviteinfo.bindfaceid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string binddate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_binddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->binddate().data(), static_cast<int>(this->binddate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.inviteinfo.binddate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.inviteinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.inviteinfo)
  return false;
#undef DO_
}

void inviteinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.inviteinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 binduserid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->binduserid(), output);
  }

  // optional string bindnickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnickname().data(), static_cast<int>(this->bindnickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.inviteinfo.bindnickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bindnickname(), output);
  }

  // optional string bindfaceid = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindfaceid().data(), static_cast<int>(this->bindfaceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.inviteinfo.bindfaceid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bindfaceid(), output);
  }

  // optional string binddate = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->binddate().data(), static_cast<int>(this->binddate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.inviteinfo.binddate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->binddate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.inviteinfo)
}

::google::protobuf::uint8* inviteinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.inviteinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 binduserid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->binduserid(), target);
  }

  // optional string bindnickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindnickname().data(), static_cast<int>(this->bindnickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.inviteinfo.bindnickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bindnickname(), target);
  }

  // optional string bindfaceid = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bindfaceid().data(), static_cast<int>(this->bindfaceid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.inviteinfo.bindfaceid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bindfaceid(), target);
  }

  // optional string binddate = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->binddate().data(), static_cast<int>(this->binddate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.inviteinfo.binddate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->binddate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.inviteinfo)
  return target;
}

size_t inviteinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.inviteinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string bindnickname = 3;
    if (has_bindnickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bindnickname());
    }

    // optional string bindfaceid = 4;
    if (has_bindfaceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bindfaceid());
    }

    // optional string binddate = 5;
    if (has_binddate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->binddate());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 binduserid = 2;
    if (has_binduserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->binduserid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void inviteinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.inviteinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const inviteinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const inviteinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.inviteinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.inviteinfo)
    MergeFrom(*source);
  }
}

void inviteinfo::MergeFrom(const inviteinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.inviteinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bindnickname();
      bindnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindnickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bindfaceid();
      bindfaceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindfaceid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_binddate();
      binddate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binddate_);
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000010u) {
      binduserid_ = from.binduserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void inviteinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.inviteinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void inviteinfo::CopyFrom(const inviteinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.inviteinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool inviteinfo::IsInitialized() const {
  return true;
}

void inviteinfo::Swap(inviteinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void inviteinfo::InternalSwap(inviteinfo* other) {
  using std::swap;
  bindnickname_.Swap(&other->bindnickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bindfaceid_.Swap(&other->bindfaceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  binddate_.Swap(&other->binddate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(binduserid_, other->binduserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata inviteinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void agencyinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int agencyinfo::kUseridFieldNumber;
const int agencyinfo::kInvitestrFieldNumber;
const int agencyinfo::kLevelFieldNumber;
const int agencyinfo::kSoleagentFieldNumber;
const int agencyinfo::kAgent1FieldNumber;
const int agencyinfo::kAgent2FieldNumber;
const int agencyinfo::kAgent3FieldNumber;
const int agencyinfo::kAgent4FieldNumber;
const int agencyinfo::kInvitelistFieldNumber;
const int agencyinfo::kQrcodeurlFieldNumber;
const int agencyinfo::kDatemarkFieldNumber;
const int agencyinfo::kMoneymarkFieldNumber;
const int agencyinfo::kWeekmoneyFieldNumber;
const int agencyinfo::kExclusiveurlFieldNumber;
const int agencyinfo::kAlipayFieldNumber;
const int agencyinfo::kBankaccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

agencyinfo::agencyinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_agencyinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.agencyinfo)
}
agencyinfo::agencyinfo(const agencyinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      invitelist_(from.invitelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  invitestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_invitestr()) {
    invitestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitestr_);
  }
  qrcodeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_qrcodeurl()) {
    qrcodeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qrcodeurl_);
  }
  datemark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_datemark()) {
    datemark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datemark_);
  }
  exclusiveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_exclusiveurl()) {
    exclusiveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exclusiveurl_);
  }
  alipay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay()) {
    alipay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_);
  }
  bankaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bankaccount()) {
    bankaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankaccount_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&weekmoney_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(weekmoney_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.agencyinfo)
}

void agencyinfo::SharedCtor() {
  invitestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qrcodeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datemark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exclusiveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weekmoney_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(weekmoney_));
}

agencyinfo::~agencyinfo() {
  // @@protoc_insertion_point(destructor:NFMsg.agencyinfo)
  SharedDtor();
}

void agencyinfo::SharedDtor() {
  invitestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qrcodeurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datemark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exclusiveurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bankaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void agencyinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* agencyinfo::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const agencyinfo& agencyinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_agencyinfo.base);
  return *internal_default_instance();
}


void agencyinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.agencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitelist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      invitestr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      qrcodeurl_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      datemark_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      exclusiveurl_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      alipay_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      bankaccount_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(level_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&soleagent_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weekmoney_) -
        reinterpret_cast<char*>(&soleagent_)) + sizeof(weekmoney_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool agencyinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.agencyinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string invitestr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitestr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitestr().data(), static_cast<int>(this->invitestr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.agencyinfo.invitestr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 soleagent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_soleagent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soleagent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 agent1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_agent1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agent1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 agent2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_agent2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agent2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 agent3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_agent3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agent3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 agent4 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_agent4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agent4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.inviteinfo invitelist = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_invitelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string qrcodeurl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qrcodeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->qrcodeurl().data(), static_cast<int>(this->qrcodeurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.agencyinfo.qrcodeurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string datemark = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datemark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->datemark().data(), static_cast<int>(this->datemark().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.agencyinfo.datemark");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 moneymark = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_moneymark();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &moneymark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 weekmoney = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_weekmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weekmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string exclusiveurl = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exclusiveurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->exclusiveurl().data(), static_cast<int>(this->exclusiveurl().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.agencyinfo.exclusiveurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay().data(), static_cast<int>(this->alipay().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.agencyinfo.alipay");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bankaccount = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bankaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bankaccount().data(), static_cast<int>(this->bankaccount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.agencyinfo.bankaccount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.agencyinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.agencyinfo)
  return false;
#undef DO_
}

void agencyinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.agencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string invitestr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitestr().data(), static_cast<int>(this->invitestr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.invitestr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->invitestr(), output);
  }

  // optional int32 level = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional int32 soleagent = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->soleagent(), output);
  }

  // optional int32 agent1 = 5;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->agent1(), output);
  }

  // optional int32 agent2 = 6;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->agent2(), output);
  }

  // optional int32 agent3 = 7;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->agent3(), output);
  }

  // optional int32 agent4 = 8;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->agent4(), output);
  }

  // repeated .NFMsg.inviteinfo invitelist = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->invitelist(static_cast<int>(i)),
      output);
  }

  // optional string qrcodeurl = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qrcodeurl().data(), static_cast<int>(this->qrcodeurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.qrcodeurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->qrcodeurl(), output);
  }

  // optional string datemark = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->datemark().data(), static_cast<int>(this->datemark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.datemark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->datemark(), output);
  }

  // optional int32 moneymark = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->moneymark(), output);
  }

  // optional int32 weekmoney = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->weekmoney(), output);
  }

  // optional string exclusiveurl = 14;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exclusiveurl().data(), static_cast<int>(this->exclusiveurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.exclusiveurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->exclusiveurl(), output);
  }

  // optional string alipay = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay().data(), static_cast<int>(this->alipay().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.alipay");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->alipay(), output);
  }

  // optional string bankaccount = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankaccount().data(), static_cast<int>(this->bankaccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.bankaccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->bankaccount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.agencyinfo)
}

::google::protobuf::uint8* agencyinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.agencyinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string invitestr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitestr().data(), static_cast<int>(this->invitestr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.invitestr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->invitestr(), target);
  }

  // optional int32 level = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional int32 soleagent = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->soleagent(), target);
  }

  // optional int32 agent1 = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->agent1(), target);
  }

  // optional int32 agent2 = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->agent2(), target);
  }

  // optional int32 agent3 = 7;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->agent3(), target);
  }

  // optional int32 agent4 = 8;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->agent4(), target);
  }

  // repeated .NFMsg.inviteinfo invitelist = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->invitelist(static_cast<int>(i)), deterministic, target);
  }

  // optional string qrcodeurl = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qrcodeurl().data(), static_cast<int>(this->qrcodeurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.qrcodeurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->qrcodeurl(), target);
  }

  // optional string datemark = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->datemark().data(), static_cast<int>(this->datemark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.datemark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->datemark(), target);
  }

  // optional int32 moneymark = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->moneymark(), target);
  }

  // optional int32 weekmoney = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->weekmoney(), target);
  }

  // optional string exclusiveurl = 14;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exclusiveurl().data(), static_cast<int>(this->exclusiveurl().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.exclusiveurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->exclusiveurl(), target);
  }

  // optional string alipay = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay().data(), static_cast<int>(this->alipay().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.alipay");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->alipay(), target);
  }

  // optional string bankaccount = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bankaccount().data(), static_cast<int>(this->bankaccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.agencyinfo.bankaccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->bankaccount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.agencyinfo)
  return target;
}

size_t agencyinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.agencyinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .NFMsg.inviteinfo invitelist = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->invitelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->invitelist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string invitestr = 2;
    if (has_invitestr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitestr());
    }

    // optional string qrcodeurl = 10;
    if (has_qrcodeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qrcodeurl());
    }

    // optional string datemark = 11;
    if (has_datemark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->datemark());
    }

    // optional string exclusiveurl = 14;
    if (has_exclusiveurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exclusiveurl());
    }

    // optional string alipay = 15;
    if (has_alipay()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay());
    }

    // optional string bankaccount = 16;
    if (has_bankaccount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bankaccount());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional int32 soleagent = 4;
    if (has_soleagent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soleagent());
    }

    // optional int32 agent1 = 5;
    if (has_agent1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent1());
    }

    // optional int32 agent2 = 6;
    if (has_agent2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent2());
    }

    // optional int32 agent3 = 7;
    if (has_agent3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent3());
    }

    // optional int32 agent4 = 8;
    if (has_agent4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent4());
    }

    // optional int32 moneymark = 12;
    if (has_moneymark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->moneymark());
    }

    // optional int32 weekmoney = 13;
    if (has_weekmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weekmoney());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void agencyinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.agencyinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const agencyinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const agencyinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.agencyinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.agencyinfo)
    MergeFrom(*source);
  }
}

void agencyinfo::MergeFrom(const agencyinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.agencyinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invitelist_.MergeFrom(from.invitelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_invitestr();
      invitestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitestr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_qrcodeurl();
      qrcodeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qrcodeurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_datemark();
      datemark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datemark_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_exclusiveurl();
      exclusiveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exclusiveurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_alipay();
      alipay_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_bankaccount();
      bankaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bankaccount_);
    }
    if (cached_has_bits & 0x00000040u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000080u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      soleagent_ = from.soleagent_;
    }
    if (cached_has_bits & 0x00000200u) {
      agent1_ = from.agent1_;
    }
    if (cached_has_bits & 0x00000400u) {
      agent2_ = from.agent2_;
    }
    if (cached_has_bits & 0x00000800u) {
      agent3_ = from.agent3_;
    }
    if (cached_has_bits & 0x00001000u) {
      agent4_ = from.agent4_;
    }
    if (cached_has_bits & 0x00002000u) {
      moneymark_ = from.moneymark_;
    }
    if (cached_has_bits & 0x00004000u) {
      weekmoney_ = from.weekmoney_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void agencyinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.agencyinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void agencyinfo::CopyFrom(const agencyinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.agencyinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool agencyinfo::IsInitialized() const {
  return true;
}

void agencyinfo::Swap(agencyinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void agencyinfo::InternalSwap(agencyinfo* other) {
  using std::swap;
  CastToBase(&invitelist_)->InternalSwap(CastToBase(&other->invitelist_));
  invitestr_.Swap(&other->invitestr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  qrcodeurl_.Swap(&other->qrcodeurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  datemark_.Swap(&other->datemark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exclusiveurl_.Swap(&other->exclusiveurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alipay_.Swap(&other->alipay_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bankaccount_.Swap(&other->bankaccount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(level_, other->level_);
  swap(soleagent_, other->soleagent_);
  swap(agent1_, other->agent1_);
  swap(agent2_, other->agent2_);
  swap(agent3_, other->agent3_);
  swap(agent4_, other->agent4_);
  swap(moneymark_, other->moneymark_);
  swap(weekmoney_, other->weekmoney_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata agencyinfo::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void intlist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int intlist::kIlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

intlist::intlist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_intlist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.intlist)
}
intlist::intlist(const intlist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ilist_(from.ilist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFMsg.intlist)
}

void intlist::SharedCtor() {
}

intlist::~intlist() {
  // @@protoc_insertion_point(destructor:NFMsg.intlist)
  SharedDtor();
}

void intlist::SharedDtor() {
}

void intlist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* intlist::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const intlist& intlist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_intlist.base);
  return *internal_default_instance();
}


void intlist::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.intlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ilist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool intlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.intlist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 ilist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_ilist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ilist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.intlist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.intlist)
  return false;
#undef DO_
}

void intlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.intlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 ilist = 1;
  for (int i = 0, n = this->ilist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->ilist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.intlist)
}

::google::protobuf::uint8* intlist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.intlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 ilist = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->ilist_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.intlist)
  return target;
}

size_t intlist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.intlist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 ilist = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->ilist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ilist_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void intlist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.intlist)
  GOOGLE_DCHECK_NE(&from, this);
  const intlist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const intlist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.intlist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.intlist)
    MergeFrom(*source);
  }
}

void intlist::MergeFrom(const intlist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.intlist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ilist_.MergeFrom(from.ilist_);
}

void intlist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.intlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void intlist::CopyFrom(const intlist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.intlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool intlist::IsInitialized() const {
  return true;
}

void intlist::Swap(intlist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void intlist::InternalSwap(intlist* other) {
  using std::swap;
  ilist_.InternalSwap(&other->ilist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata intlist::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void stringlist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int stringlist::kSlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

stringlist::stringlist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_stringlist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.stringlist)
}
stringlist::stringlist(const stringlist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      slist_(from.slist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFMsg.stringlist)
}

void stringlist::SharedCtor() {
}

stringlist::~stringlist() {
  // @@protoc_insertion_point(destructor:NFMsg.stringlist)
  SharedDtor();
}

void stringlist::SharedDtor() {
}

void stringlist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* stringlist::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const stringlist& stringlist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_stringlist.base);
  return *internal_default_instance();
}


void stringlist::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.stringlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool stringlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.stringlist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string slist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_slist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slist(this->slist_size() - 1).data(),
            static_cast<int>(this->slist(this->slist_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.stringlist.slist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.stringlist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.stringlist)
  return false;
#undef DO_
}

void stringlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.stringlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string slist = 1;
  for (int i = 0, n = this->slist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slist(i).data(), static_cast<int>(this->slist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.stringlist.slist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->slist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.stringlist)
}

::google::protobuf::uint8* stringlist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.stringlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string slist = 1;
  for (int i = 0, n = this->slist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slist(i).data(), static_cast<int>(this->slist(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.stringlist.slist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->slist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.stringlist)
  return target;
}

size_t stringlist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.stringlist)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string slist = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->slist_size());
  for (int i = 0, n = this->slist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->slist(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stringlist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.stringlist)
  GOOGLE_DCHECK_NE(&from, this);
  const stringlist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const stringlist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.stringlist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.stringlist)
    MergeFrom(*source);
  }
}

void stringlist::MergeFrom(const stringlist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.stringlist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slist_.MergeFrom(from.slist_);
}

void stringlist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.stringlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stringlist::CopyFrom(const stringlist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.stringlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stringlist::IsInitialized() const {
  return true;
}

void stringlist::Swap(stringlist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void stringlist::InternalSwap(stringlist* other) {
  using std::swap;
  slist_.InternalSwap(CastToBase(&other->slist_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata stringlist::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void useraward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int useraward::kIdFieldNumber;
const int useraward::kAwardtypeFieldNumber;
const int useraward::kCountFieldNumber;
const int useraward::kTimemarkFieldNumber;
const int useraward::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

useraward::useraward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_useraward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.useraward)
}
useraward::useraward(const useraward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.useraward)
}

void useraward::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

useraward::~useraward() {
  // @@protoc_insertion_point(destructor:NFMsg.useraward)
  SharedDtor();
}

void useraward::SharedDtor() {
}

void useraward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* useraward::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const useraward& useraward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_useraward.base);
  return *internal_default_instance();
}


void useraward::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.useraward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&id_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool useraward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.useraward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 awardtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_awardtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &awardtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 timemark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timemark();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timemark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.useraward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.useraward)
  return false;
#undef DO_
}

void useraward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.useraward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 awardtype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->awardtype(), output);
  }

  // optional int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  // optional int32 timemark = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timemark(), output);
  }

  // optional int32 state = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.useraward)
}

::google::protobuf::uint8* useraward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.useraward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 awardtype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->awardtype(), target);
  }

  // optional int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  // optional int32 timemark = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timemark(), target);
  }

  // optional int32 state = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.useraward)
  return target;
}

size_t useraward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.useraward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 awardtype = 2;
    if (has_awardtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->awardtype());
    }

    // optional int32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 timemark = 4;
    if (has_timemark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timemark());
    }

    // optional int32 state = 5;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void useraward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.useraward)
  GOOGLE_DCHECK_NE(&from, this);
  const useraward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const useraward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.useraward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.useraward)
    MergeFrom(*source);
  }
}

void useraward::MergeFrom(const useraward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.useraward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      awardtype_ = from.awardtype_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000008u) {
      timemark_ = from.timemark_;
    }
    if (cached_has_bits & 0x00000010u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void useraward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.useraward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void useraward::CopyFrom(const useraward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.useraward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool useraward::IsInitialized() const {
  return true;
}

void useraward::Swap(useraward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void useraward::InternalSwap(useraward* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(awardtype_, other->awardtype_);
  swap(count_, other->count_);
  swap(timemark_, other->timemark_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata useraward::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void banktransferrecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int banktransferrecord::kUseridFieldNumber;
const int banktransferrecord::kNicknameFieldNumber;
const int banktransferrecord::kAmountFieldNumber;
const int banktransferrecord::kTimemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

banktransferrecord::banktransferrecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_st_5fhuman_2eproto::scc_info_banktransferrecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.banktransferrecord)
}
banktransferrecord::banktransferrecord(const banktransferrecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_amount()) {
    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  timemark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_timemark()) {
    timemark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timemark_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.banktransferrecord)
}

void banktransferrecord::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timemark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

banktransferrecord::~banktransferrecord() {
  // @@protoc_insertion_point(destructor:NFMsg.banktransferrecord)
  SharedDtor();
}

void banktransferrecord::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timemark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void banktransferrecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* banktransferrecord::descriptor() {
  ::protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const banktransferrecord& banktransferrecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_st_5fhuman_2eproto::scc_info_banktransferrecord.base);
  return *internal_default_instance();
}


void banktransferrecord::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.banktransferrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      nickname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      amount_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      timemark_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool banktransferrecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.banktransferrecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.banktransferrecord.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->amount().data(), static_cast<int>(this->amount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.banktransferrecord.amount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string timemark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timemark()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timemark().data(), static_cast<int>(this->timemark().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NFMsg.banktransferrecord.timemark");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.banktransferrecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.banktransferrecord)
  return false;
#undef DO_
}

void banktransferrecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.banktransferrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.banktransferrecord.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional string amount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.banktransferrecord.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->amount(), output);
  }

  // optional string timemark = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timemark().data(), static_cast<int>(this->timemark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.banktransferrecord.timemark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->timemark(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.banktransferrecord)
}

::google::protobuf::uint8* banktransferrecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.banktransferrecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.banktransferrecord.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional string amount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), static_cast<int>(this->amount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.banktransferrecord.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->amount(), target);
  }

  // optional string timemark = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timemark().data(), static_cast<int>(this->timemark().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NFMsg.banktransferrecord.timemark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->timemark(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.banktransferrecord)
  return target;
}

size_t banktransferrecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.banktransferrecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->amount());
    }

    // optional string timemark = 4;
    if (has_timemark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timemark());
    }

    // optional int32 userid = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void banktransferrecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.banktransferrecord)
  GOOGLE_DCHECK_NE(&from, this);
  const banktransferrecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const banktransferrecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.banktransferrecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.banktransferrecord)
    MergeFrom(*source);
  }
}

void banktransferrecord::MergeFrom(const banktransferrecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.banktransferrecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_amount();
      amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_timemark();
      timemark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timemark_);
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void banktransferrecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.banktransferrecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void banktransferrecord::CopyFrom(const banktransferrecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.banktransferrecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool banktransferrecord::IsInitialized() const {
  return true;
}

void banktransferrecord::Swap(banktransferrecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void banktransferrecord::InternalSwap(banktransferrecord* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amount_.Swap(&other->amount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timemark_.Swap(&other->timemark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata banktransferrecord::GetMetadata() const {
  protobuf_st_5fhuman_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_st_5fhuman_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::accountinfo* Arena::CreateMaybeMessage< ::NFMsg::accountinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::accountinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::playerinfo* Arena::CreateMaybeMessage< ::NFMsg::playerinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::playerinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::playerstats* Arena::CreateMaybeMessage< ::NFMsg::playerstats >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::playerstats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::goodsinfo* Arena::CreateMaybeMessage< ::NFMsg::goodsinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::goodsinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::goodslist* Arena::CreateMaybeMessage< ::NFMsg::goodslist >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::goodslist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::noticeinfo* Arena::CreateMaybeMessage< ::NFMsg::noticeinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::noticeinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::playersimpleinfo* Arena::CreateMaybeMessage< ::NFMsg::playersimpleinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::playersimpleinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::broadcastinfo* Arena::CreateMaybeMessage< ::NFMsg::broadcastinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::broadcastinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::mailinfo* Arena::CreateMaybeMessage< ::NFMsg::mailinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::mailinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::maillist* Arena::CreateMaybeMessage< ::NFMsg::maillist >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::maillist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::inviteinfo* Arena::CreateMaybeMessage< ::NFMsg::inviteinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::inviteinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::agencyinfo* Arena::CreateMaybeMessage< ::NFMsg::agencyinfo >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::agencyinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::intlist* Arena::CreateMaybeMessage< ::NFMsg::intlist >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::intlist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::stringlist* Arena::CreateMaybeMessage< ::NFMsg::stringlist >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::stringlist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::useraward* Arena::CreateMaybeMessage< ::NFMsg::useraward >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::useraward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NFMsg::banktransferrecord* Arena::CreateMaybeMessage< ::NFMsg::banktransferrecord >(Arena* arena) {
  return Arena::CreateInternal< ::NFMsg::banktransferrecord >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
