CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(NFPluginLoader)

AUX_SOURCE_DIRECTORY(. SRC)

ADD_EXECUTABLE(${PROJECT_NAME} ${SRC})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} -Wl,--no-as-needed)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFActorPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFKernelPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFLuaScriptPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFMath)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFNetPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFMonitorPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFNoSqlPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFMysqlPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFGameClientPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFGameServerPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFLoginClientPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFLoginServerPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFMasterServerPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFProxyClientPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFProxyServerPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFWorldClientPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFWorldServerPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFGameLogicPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFLoginLogicPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFProxyLogicPlugin)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFWorldLogicPlugin)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFServerLogicCommon)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFServerCommon)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFPluginModule)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFCore) 
TARGET_LINK_LIBRARIES(${PROJECT_NAME} NFMessageDefine)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Common)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} LuaBind)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} bson-1.0)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} event_core)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} event_extra)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} event)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} crypto)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} mongoc-1.0)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} mysqlclient)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} Sqlite3)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} mysqlpp)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ssl)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} protobuf)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} dl)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} rt)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} pthread)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} -static-libstdc++)

ADD_DEPENDENCIES(${PROJECT_NAME} NFServerLogicCommon NFServerCommon NFPluginModule  LuaBind NFCore  NFMessageDefine  Common)

if (CMAKE_BUILD_TYPE STREQUAL "Release")
	SET_TARGET_PROPERTIES(${PROJECT_NAME} 
		PROPERTIES 
		RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/Product/run/Release"
	)
elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
	SET_TARGET_PROPERTIES(${PROJECT_NAME} 
		PROPERTIES 
		RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/Product/run/Debug"
	)
elseif (CMAKE_BUILD_TYPE STREQUAL "DynamicRelease")
	SET_TARGET_PROPERTIES(${PROJECT_NAME} 
		PROPERTIES 
		RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/Product/run/Dynamic_Release"
	)
elseif(CMAKE_BUILD_TYPE STREQUAL "DynamicDebug")
	SET_TARGET_PROPERTIES(${PROJECT_NAME} 
		PROPERTIES 
		RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/Product/run/Dynamic_Debug"
	)
endif()




